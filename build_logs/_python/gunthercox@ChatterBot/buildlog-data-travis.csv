tr_build_id,tr_job_id,tr_build_number,tr_original_commit,tr_log_lan,tr_log_status,tr_log_setup_time,tr_log_analyzer,tr_log_frameworks,tr_log_bool_tests_ran,tr_log_bool_tests_failed,tr_log_num_tests_ok,tr_log_num_tests_failed,tr_log_num_tests_run,tr_log_num_tests_skipped,tr_log_num_test_suites_run,tr_log_num_test_suites_ok,tr_log_num_test_suites_failed,tr_log_tests_failed,tr_log_testduration,tr_log_buildduration
437095061,437095062,3234,a45afee07fc4dc8f9bd58356358aa7f8e6a6fa55,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",47.72,
437095335,437095336,3235,ee5dccd8e044b889fc2ba81eac5a53116a3d1b85,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",49.879999999999995,
437095341,437095342,3236,0ff83b07c7051c110579387d7033106cd2c75837,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",48.629999999999995,
437097775,437097776,3237,510cfa1040ef93d8be5cfdc2eafa8ec7c0029e46,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",48.92000000000001,
438024579,438024580,3238,1e353d87e9975dcca9c5fa9d509abe05aeef364a,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",47.7,
438026496,438026497,3239,f3d19c5eeee48790a7ee1ff60176ed26a81a9bbd,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",41.769999999999996,
438027542,438027543,3240,2ef06829cdc6690fad2955a9d55745f035f633d5,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",45.42,
438202958,438202959,3241,336551320d626972b300318fa637c9086a870999,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",42.0,
438261396,438261397,3242,69443055ca4cd114d95d631eb2714a6c2a6799e2,python,broken,1,python,unittest,true,false,-7,20,13,15,,,,"Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.",46.779999999999994,
438262291,438262292,3243,645c1676798cab413b45987d538241544c91a80f,python,broken,0,python,unittest,true,false,-7,20,13,15,,,,"Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.",46.7,
438268455,438268456,3244,7dfa475b801dbc073776376c55f15424d7bfd9ca,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",43.86000000000001,
438268477,438268478,3245,7b8771789cbd41e7b7b45f55dd3876a6c34ecafd,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",43.66,
438286281,438286282,3246,ef267e94d2e1e148108b5da0a0266eb92fdde641,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",49.06999999999999,
438286289,438286290,3247,f19d5aebed6a8391686e1d7b77b8d00c43583b25,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",45.15,
438289758,438289759,3248,219b28d1d3220e054b2a7f0233b9dec87fae045c,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",44.6,
438289762,438289763,3249,bb8ba4660005f007a288b218261f62ee627108d2,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",46.52,
439544766,439544767,3250,758985d0ad5da7ce96d7020dd90b12aec44a03ec,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",41.61,
439544778,439544779,3251,49d10cb262e6ce210a899a44c159a93374c693a5,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",40.05,
439548120,439548121,3252,5240a87ad6b70f2e879dbcca52867509574a7407,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",42.61,
439818339,439818340,3253,7971e94988a13881f73fa9371d904fcc35af7b00,python,ok,2,python,unittest,true,false,13,0,13,15,,,,"",45.97,
439822187,439822188,3254,fd09a80db5c67d9ce294ba8edc863740f71b60fa,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",43.8,
440123123,440123124,3255,5506eeb3794cb3099df3db0a397c2438adbe4dbf,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",43.459999999999994,
440124704,440124705,3256,4ca57463311932388d837969dfd28f9502be5649,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",42.980000000000004,
440408843,440408844,3257,f404ec3e2f28b4ae93cf6db44bc2498aacfc7c82,python,unknown,131,python,"",false,,,,,,,,,"",,
440408849,440408850,3258,482a308dcb8c3778a82111ba82400cdec740aeff,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",31.439999999999998,
440412133,440412134,3259,0a6be69bb0a0e1ee4aa1eec4758b6e0f81a1f551,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",33.349999999999994,
440414805,440414806,3260,778d214629c997d926844bb3797bca8a9c6b8978,python,broken,1,python,unittest,true,false,12,1,13,15,,,,"",609.8599999999998,
440414807,440414808,3261,4aca08d871d605afdd063729025451fca41a55b6,python,broken,0,python,unittest,true,false,13,0,13,15,,,,"",38.72,
440431833,440431834,3262,9fd2efc07ce81f67e04866f26544da04c3bf98e6,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",38.78999999999999,
440431835,440431836,3263,6af1f499e18c077edab28efe18661515e3e18a1a,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",38.99,
440436243,440436244,3264,6d83c3c339a7c698a88f275043b8acbd23cf1c50,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",38.71000000000001,
440436245,440436246,3265,ffd66bc2efee6d0996e84f5f45c2db42e873e355,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",38.73,
440437728,440437729,3266,1a8a24fba7b96672f9b730cc535fcd915f1e02f4,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.650000000000006,
440438820,440438821,3267,1854b4b667cd07ca4f4426bd40d94c3e42ed19e6,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",41.55,
440997519,440997520,3268,ab16d1ba3e895dfcd9b6a235c7917fdc0ca70b13,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",44.17,
440999666,440999667,3269,d0f79eb26d55d9f101d2bc08b5087d49c1e97beb,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",39.87,
441005483,441005484,3270,0085b8a4de6c2cd3b702432eb6e75032b41bcf65,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.599999999999994,
441040998,441040999,3271,57a6d524772ff138537ad4c8f58ffe2cd56e287d,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",43.12,
441041241,441041242,3272,c8f027f3eba43f81539d88cbe042b3cda2deb29c,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",39.12,
441279951,441279952,3273,6ad1cf9173de3c1d9306d819d777226f3694a518,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.900000000000006,
441280082,441280083,3274,5c12295455655401c74da9c496828b040fc5e54e,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",37.48,
441281651,441281652,3275,2d6ed6e1aa4802ef948ee9b5874c31f6aecb6eca,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.18000000000001,
441291061,441291062,3276,acdc8b14e5d77d0a53970fb72250338696830d6c,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",38.4,
441330556,441330557,3277,ddf3c7aa9e009438141302042deecca0553f70f7,python,broken,1,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",17.060000000000002,
441330592,441330593,3278,4387686353fdc9855e6ea028b05826da11402cbc,python,broken,0,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",15.880000000000003,
441454530,441454531,3279,3dd32e7db1cbc790ad6352c67014c991126e74ee,python,broken,0,python,unittest,true,false,13,0,13,15,,,,"",39.72,
442547008,442547009,3280,2ad2beff325f680c7ea90d3de7c6bb6dfd65c111,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",38.60999999999999,
442550151,442550154,3281,b6bb1a21afa5b1468e55dd5ff7a613ada9608903,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",40.59,
442563384,442563385,3282,7fbc2bbbce6e05d03b9d1bd47068dd372e5cea00,python,broken,1,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",16.18,
442563393,442563394,3283,3ada6f9a364bf3608c0ea87d13011deadf591e81,python,broken,0,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",15.770000000000003,
442573040,442573041,3284,ad42a2cfeaf73df6feba85e4e87d2b3a3453c359,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.58,
442573164,442573165,3285,3331c5e76b4bd958ab144a9410d1d9ae1a1c0f54,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",42.37,
442575425,442575426,3286,ebaceeda0777385e2230f49601c7aa75b360d9a3,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.849999999999994,
442576352,442576353,3287,29b817a987860f8a4ac741509068ef66298dd6d8,python,broken,1,python,unittest,true,true,10,63,73,10,,,,Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?,0.63,
442576363,442576364,3288,fc3b7627bc37f2082a8a9f7ccf9a359db7a35471,python,broken,2,python,unittest,true,true,10,63,73,10,,,,Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?,0.69,
442577202,442577203,3289,e73dff3e46ad13829543ecb19f77b31a64b064c0,python,broken,1,python,unittest,true,true,-183,233,50,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#test_get_nltk_data_directories",15.94,
442577206,442577207,3290,2569e41f02793c4a98333965827f97c236434c26,python,broken,0,python,unittest,true,true,-183,233,50,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#test_get_nltk_data_directories",15.16,
444361779,444361780,3291,1e83d7bf1d1a769cddbfaf41ef37f5a146492c7f,python,unknown,1,python,"",false,,,,,,,,,"",,
444361792,444361793,3292,6c9879435a632e3c451014aded7290ba8f44da95,python,broken,0,python,unittest,true,true,-167,217,50,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",15.54,
444361941,444361942,3293,2634e83dc275fcf0655bbd23ba16669032a46d55,python,broken,1,python,unittest,true,true,-167,217,50,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",17.36,
444361954,444361955,3294,91614f7a0b4792664fe17aa88467728762d73f23,python,broken,0,python,unittest,true,true,-167,217,50,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",15.61,
444399024,444399025,3295,7b6838ea292e011f96f5212992d00c1009e1f6b2,python,broken,1,python,unittest,true,false,13,0,13,15,,,,"",42.37,
445681782,445681783,3296,3af99855d2b5a2fa3064bc1c1c54e116b768eec2,python,broken,1,python,unittest,true,false,13,0,13,15,,,,"",38.15,
446540497,446540498,3297,7189827268a67d76a69274f7be6bd8dbc336e6d7,python,broken,1,python,unittest,true,false,13,0,13,15,,,,"",40.489999999999995,
447085910,447085911,3298,c780bf2872ae057df08597c180c38ebd9b037aa3,unknown,unknown,,plain,"",false,,,,,,,,,"",,
447086106,447086109,3299,a2d4c5e640cfc7e4d20986a76c78cac03a5d3b14,python,broken,1,python,unittest,true,false,13,0,13,15,,,,"",39.57,
447089955,447089956,3300,55539e882087f258766fb8493452f22d04e9d06b,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",40.849999999999994,
447493187,447493188,3301,9e7e6072dc5a55b4129e860c566f32e93a53e52e,python,broken,1,python,unittest,true,true,-42,55,13,15,,,,"Test that repetitive responses are filtered out of the results.#Test that an additional data attribute can be added to the statement#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that a response time is returned.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.",41.870000000000005,
447544541,447544542,3302,429fc809beffc292e41e435694f031f4f6df6bc6,python,broken,1,python,unittest,true,true,-42,55,13,15,,,,"Test that repetitive responses are filtered out of the results.#Test that an additional data attribute can be added to the statement#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that a response time is returned.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.",46.74,
447549931,447549932,3303,0ae556b0ead79b508e5c5b3ad36bc060c50d94f9,python,broken,1,python,unittest,true,true,-42,55,13,15,,,,"Test that repetitive responses are filtered out of the results.#Test that an additional data attribute can be added to the statement#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that a response time is returned.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.",44.03,
447550074,447550075,3304,fa03aa784ad1421cf7a03a82489640159a06c255,python,broken,0,python,unittest,true,true,-42,55,13,15,,,,"Test that repetitive responses are filtered out of the results.#Test that an additional data attribute can be added to the statement#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that a response time is returned.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.",43.51,
448779428,448779429,3305,aa72026dc28d3d7881a5919e5a2765879c0d20ab,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.99,
448779737,448779738,3306,c6a3119d8b697f604db1941029088dea3407e080,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",40.800000000000004,
448783804,448783805,3307,2ddf603acde6060db915d361c8d79e355a6a454b,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.910000000000004,
448790626,448790627,3308,b75d08fbd3cc486996e4435d1867a4e241644e27,python,broken,1,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",17.04,
448790644,448790645,3309,0f3ddf2b98e2da070cf572311d24c663c6e116a9,python,broken,0,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",16.77,
448802199,448802200,3310,3dc23055012a1e0fe6af829e9975650c85e63259,python,broken,1,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",15.850000000000001,
448802249,448802250,3311,28cc6a2944a9a08aaf5deaa60117ebfda3956685,python,broken,1,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",16.17,
449666755,449666756,3312,2ddf603acde6060db915d361c8d79e355a6a454b,python,ok,2,python,unittest,true,false,13,0,13,15,,,,"",40.34,
450232081,450232082,3313,ed166ed2fd9198a5dd005facd8f366fe2f736da5,python,broken,1,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",16.07,
450232088,450232089,3314,46dee5ffcee58368244866af789e3d0804867108,python,broken,0,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",17.520000000000003,
450246748,450246749,3315,3ce3b32517e6a2e50ecad88bbe0b972f4cc150ce,python,broken,1,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",16.87,
450246763,450246764,3316,3d710309b355f6340aaa2f42de324f6d9b9785fc,python,broken,0,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",16.48,
450250675,450250676,3317,65f786fe7d48b4fa0a631907a85fcb06af09f556,python,broken,1,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",17.17,
450250689,450250690,3318,b316915b23be7818d2d56086ae5c83e2ff06839a,python,broken,0,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",17.090000000000003,
450271267,450271268,3319,205a3a89edb0dbad08b244ec6b479948ec93bc98,python,broken,1,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",16.240000000000002,
450271279,450271280,3320,85b3eb6c197b255138b79b4721b30f4b6d206b69,python,broken,0,python,unittest,true,false,-204,217,13,14,,,,"Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#This method should return true by default.#Test that the logic adapter can return its own class name.#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#Test the case that an exact match is given.#Test the case that an exact match is not given.#The value passed in for the statement parameter should be returned.#For consistency across io adapters, the#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#If no parameters are passed to the filter,#The count method should return a value of 1#The count method should return a value of 0#Test that a matching statement is returned#Test that None is returned by the find method#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#If no parameters are passed to the filter,#The storage adapter should not update a statement with tags#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLOrderingTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterFilterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.SQLStorageAdapterTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterCreateTests'>#test suite for <class 'tests.storage_adapter_tests.test_sql_adapter.StorageAdapterUpdateTests'>#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that all system logic adapters and regular logic adapters#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that text capitalization is ignored.#Test that text capitalization is ignored.#When one adapter modifies its chatbot instance,#Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?#Test that a response time is returned.#test_get_nltk_data_directories",16.13,
451609444,451609445,3321,09f7d4bddaeaa304e25f60633a1b3ed6e35964ab,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",40.42,
451609599,451609600,3322,e25385e01ce59e1434aae3a7e636c38f57751456,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",42.66,
451617289,451617290,3323,4907b5e8ed7b1ae6838be19dfce2ef391ed5c486,python,ok,3,python,unittest,true,false,13,0,13,15,,,,"",42.43,
451617310,451617311,3324,ca7f0d93d300f808c61a85c40a28ee360485143c,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",41.88,
451646661,451646662,3325,ec900e2a79925d7d5d03e41a5ae7afabe7729640,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",47.01,
451646682,451646683,3326,689fd92523202e0d5f3ccb21bc43e49d91132bfd,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",44.33,
451647999,451648000,3327,cfc79c0196011a3696ac306f6c6b30050d22149d,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",42.45,
451648007,451648008,3328,5695eed741c99dcf9893073178dcb55d307286ea,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",41.67,
451657517,451657518,3329,026423a35fcaf138bee9b271d8a55a9d43744d25,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",45.269999999999996,
451657530,451657531,3330,5fe2b18a09ffbb2961e6c4f257fafea8708d38e1,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",43.370000000000005,
451659098,451659099,3331,3c496fa4148486e8ef33cd7e5cabc30f91f8d166,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",45.18,
451659487,451659488,3332,baa4478a57be4ede0ba3ac2c4aad2674e0559dcc,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.72,
451659504,451659505,3333,19f1238e855988a0e35128f35067cd513a00c8ca,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",45.03,
451660443,451660444,3334,4d66a3ca1fa5580d0ed8b0b2258d7e32c33807a8,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",41.96,
451660448,451660449,3335,c1a8003e853ef27aacb5b0d69ecc2ad2164d6d59,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",40.6,
452348784,452348785,3336,297f5760e0dcae7a5e1565977999b01b84da178f,python,broken,1,python,unittest,true,true,-44,57,13,15,,,,"Test that repetitive responses are filtered out of the results.#Test that an additional data attribute can be added to the statement#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that a response time is returned.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.",53.95,
452348790,452348791,3337,c53b63a41010f6c824ae6214180fd955943869cf,python,broken,0,python,unittest,true,true,-44,57,13,15,,,,"Test that repetitive responses are filtered out of the results.#Test that an additional data attribute can be added to the statement#Test that the database is updated when read_only is set to false.#Test that the database is updated when read_only is set to false.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#If there is no statements in the database, then the#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test that when database is empty, the first#Test that a response time is returned.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.",54.81,
452648862,452648863,3338,ffcab4ecc6d1fcdc2f6bd9c0f0eba6cafb885d30,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",42.660000000000004,
452649058,452649059,3339,c4f479b7cc3726e9e5272232f4169fbeded0698e,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",42.63,
452653603,452653604,3340,30e589759c604c35d78fbc7945f52bac1f1bf3fb,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",42.89,
452653837,452653838,3341,519171936964ad145f31484218ebb094772db393,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",44.3,
452653917,452653918,3342,b9b76b90920644ee23b03b76a5d9fb83703e28e3,python,broken,1,python,unittest,true,false,-8,21,13,15,,,,test_captured_pattern_before_tomorrow#test_captured_pattern_before_yesterday#test_captured_pattern_days_later#test_captured_pattern_has_am#test_captured_pattern_has_am_case_insensitive_1#test_captured_pattern_has_am_case_insensitive_2#test_captured_pattern_has_am_case_insensitive_3#test_captured_pattern_has_pm#test_captured_pattern_has_pm_case_insensitive_1#test_captured_pattern_has_pm_case_insensitive_2#test_captured_pattern_has_pm_case_insensitive_3#test_captured_pattern_is_next_eight_days#test_captured_pattern_is_next_eleven_months#test_captured_pattern_is_next_ten_years#test_captured_pattern_is_next_three_weeks#test_captured_pattern_is_next_x_days_case_insensitive#test_captured_pattern_is_next_x_months_case_insensitive#test_captured_pattern_is_next_x_weeks_case_insensitive#test_captured_pattern_is_next_x_years_case_insensitive#test_captured_pattern_tomorrow#test_captured_pattern_yesterday,42.309999999999995,
452655282,452655283,3343,be37fa6bc87421a94cb0c34c8cf9fb9696dd630d,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",43.37,
452655599,452655600,3344,855b5768c2c2a434ae2669f0ec1482f08fa83088,python,broken,1,python,unittest,true,false,10,3,13,15,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,57.260000000000005,
452655613,452655614,3345,36b53b6e8a8e5eb4fe2b90f90577cfc44fa26629,python,broken,0,python,unittest,true,false,10,3,13,15,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,58.43000000000001,
452658464,452658465,3346,be37fa6bc87421a94cb0c34c8cf9fb9696dd630d,unknown,unknown,,plain,"",false,,,,,,,,,"",,
452658635,452658636,3347,48e8c1a1c77eea8e942b68ee09e868bce27a4d13,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",44.41,
452658756,452658757,3348,274502c7deac37143d3c7853ba92783900b3d48f,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",42.8,
452659624,452659625,3349,8ad3f7908d8488f3f05dc15cd922666b266b32c2,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",42.629999999999995,
452665562,452665563,3350,e603bf87626620092f9d325457fe1af614ed9ae2,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",47.16,
452665651,452665652,3351,7614952ca98dc7d8716a1f9027ee8ec9158460bc,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",41.64,
452666634,452666635,3352,a9061ab8ec9d73e8c57c9c34765af013a03b5836,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",41.49,
452687835,452687836,3353,0a6f0b49eb8ab36b05607b3c88fdcafcd1710274,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",40.62,
452687914,452687915,3354,01be9ef62c55fa8df926b512355e0ab0adcb5eb8,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",40.6,
452688882,452688883,3355,62c9ea553f777a14ea63a25c5d822fff9a9f833e,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",39.88,
452689381,452689382,3356,76ed728199a639ae067f8b2d135f1a1614e5c8c2,python,broken,1,python,unittest,true,false,10,3,13,15,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,55.169999999999995,
452689392,452689393,3357,97d600fdc406275860891cb56cd651274a8a4ff9,python,broken,0,python,unittest,true,false,10,3,13,15,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,54.34,
452695347,452695348,3358,cf3d89005187c47e7237d27253da08107badfaf8,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",37.99999999999999,
452695359,452695360,3359,c1aeeee9bb32562b75716030550bf9a0e6d359fc,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",40.13,
453168659,453168660,3360,42005301a82778b85531526cad4f1e9ece465cd8,python,broken,1,python,unittest,true,false,9,4,13,15,,,,"",36.33,
453168780,453168781,3361,ffca9790cc508ad81e8eea00cd26b592d9ae1d65,python,broken,0,python,unittest,true,false,9,4,13,15,,,,"",37.150000000000006,
453267891,453267892,3362,29150fe04d3708be787d12026d480bec1d0e24a8,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",40.370000000000005,
453267896,453267897,3363,3b6a5e7ee758ad40361da89acb37e75c325a515d,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",38.43,
453273434,453273435,3364,cc5e6261d22881d2a88ab3a78fd71558451f5c9b,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",38.11,
453299419,453299420,3365,7a55ae0f58fa4c1e5e7d16601c99324e9d1d5027,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",38.86,
453302414,453302415,3366,d9544ee10fb57674562797915cfa089b884a50ca,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",37.9,
453304717,453304718,3367,13a63220efce5c3f7a8d059b639d01b79ddba40a,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",38.339999999999996,
453305071,453305072,3368,2d10c0d6b566b8b90986326fb44e5d5070a3bcb8,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",39.07999999999999,
453306267,453306268,3369,6fc8243868b2d6487c6457fd25efa660937ead1f,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",40.68999999999999,
453308274,453308275,3370,876fb4547029f16aa2c2b6a37272d19f1bcd4d7d,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",38.60999999999999,
453309252,453309253,3371,385f2ed00b075d3e42e49c230ca5a5c64d594e03,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",39.60999999999999,
453311083,453311084,3372,8324518dafc4c3e9422712641d9c012f5e24c90c,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",40.27,
453314732,453314733,3373,00a20924d6328e62ffac130b2d02efdabad6d69b,python,broken,1,python,unittest,true,false,-22,35,13,55,,,,"Test that an additional data attribute can be added to the statement#The storage adapter should not create a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.",48.49,
453314790,453314791,3374,59331d52406534423d8b47f3c9034bc5712b85b3,python,broken,0,python,unittest,true,false,-22,35,13,55,,,,"Test that an additional data attribute can be added to the statement#The storage adapter should not create a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.",47.29,
453357217,453357218,3375,522d136c35d71b695f3fceab738da70cd98dfa0a,python,broken,1,python,unittest,true,false,-22,35,13,55,,,,"Test that an additional data attribute can be added to the statement#The storage adapter should not create a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.",31.38,
453357223,453357224,3376,184ebb0e716403d308e2b4edc93f79a5c2b0a832,python,broken,0,python,unittest,true,false,-22,35,13,55,,,,"Test that an additional data attribute can be added to the statement#The storage adapter should not create a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.",31.84,
453383497,453383498,3377,cd44f8b2011aff981b3d30899f8f68dcfdecab7a,python,broken,1,python,unittest,true,true,2,52,54,55,,,,"",44.260000000000005,
453445658,453445659,3378,5d82bfabe70eca4d25f8489af2d0c7751c699bf9,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",44.68,
453445864,453445865,3379,044028f1588436ce108d4d8404dcf7832e34a857,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",44.31999999999999,
453446495,453446496,3380,9b2f3433a416172732163dfe56f1b0ef31c2718d,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",45.76,
453446890,453446891,3381,51d2e85eb710f7e35fa9c5ea66621dc16a9eb933,python,broken,1,python,unittest,true,false,-22,35,13,55,,,,"Test that an additional data attribute can be added to the statement#The storage adapter should not create a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.",31.9,
453446911,453446912,3382,b25e2cb188938863c56e3dd3b36dc0ca44abdbb6,python,broken,1,python,unittest,true,false,-22,35,13,55,,,,"Test that an additional data attribute can be added to the statement#The storage adapter should not create a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.",31.52,
453585100,453585101,3383,037a26fe66525d2b85bb1061798dc1919c10f2de,python,ok,2,python,unittest,true,false,13,0,13,55,,,,"",55.47,
453585427,453585428,3384,2098eb6b05bce530e854185219a249ecc43e087f,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",52.18999999999999,
453589735,453589736,3385,92c0119c1605c89bcbd30e577c8def2c88e4271d,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",54.099999999999994,
453593136,453593137,3386,d1c999ecac3ab8a30facd1d09ae13b932cd61ccd,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",60.010000000000005,
453593159,453593160,3387,0145d03ff82ed248a9c959d3bebbefaeb9c9bbd5,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",53.76,
453596509,453596510,3388,b4aeac67a667c8976c1fc620458d36ccbcef30c3,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",54.02,
453596513,453596514,3389,cb9c156a96134314e6e6c9843a347e43a4807764,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",54.45,
453624899,453624900,3390,5dc8d706e4056a6c973ffa36678d732848706e93,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",54.71,
453624903,453624904,3391,c2103d81a4f51e6329fba9a8e17acea3c6c710ec,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",55.54,
453628164,453628165,3392,2fc66b79191ecf8255577f7ead773e51c655d704,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",52.589999999999996,
453631110,453631111,3393,ad45e1d49bdf96e75119da9cbb4430fc5f8b18c0,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",54.300000000000004,
453631186,453631187,3394,8a45383bc1560bd479caa1c8b00a44b61c669733,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",51.300000000000004,
453633040,453633041,3395,e6fa2b38ef61f67745d54ff17fa652f2c5f58182,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",61.41,
453633326,453633327,3396,2483784251b9af68451472ab51b0960f14d33a34,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",53.56,
453639509,453639510,3397,dd77a85843cebadb64f2c710afd426231ade0fd1,python,broken,1,python,unittest,true,false,11,2,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.,46.839999999999996,
453639538,453639539,3398,d713b6df380bce3537b0f6f2c865a0266469b36d,python,broken,0,python,unittest,true,false,11,2,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.,53.17999999999999,
454734725,454734726,3399,3dcbdc196e4eb81565372091260d296aab574b4c,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",54.61,
454735434,454735435,3400,c7cf6e9d3957e7e6436b47bf638196556da6998b,python,ok,32,python,unittest,true,false,13,0,13,55,,,,"",53.44,
454738283,454738284,3401,3b9922e772c507fb28143a4e1b1d8c36203b4fcf,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",58.54,
454740658,454740659,3402,aecaa29200e99ec9f04cdfd242003640a7c42cc2,python,broken,1,python,unittest,true,false,11,2,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.,46.89999999999999,
454740668,454740669,3403,f1ac7bffd6b1d335e3641c6d35b5dbf813d67712,python,broken,0,python,unittest,true,false,11,2,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.,48.169999999999995,
454809782,454809783,3404,0ea535738fba765073b87124c45cca59e3abf6cd,python,broken,1,python,unittest,true,false,10,3,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Tests if the bot returns the same response for the same,51.54,
454809788,454809789,3405,4a5180225479e237cb18131f8e48a62cd6e00bb2,python,broken,0,python,unittest,true,false,10,3,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Tests if the bot returns the same response for the same,46.55,
455533604,455533605,3406,c2aa22a017b181605c471ba7057f0c6cc3103da3,python,ok,2,python,unittest,true,false,13,0,13,55,,,,"",52.68,
455535022,455535023,3407,438aed50d83763de27c990442f0c905256ad4d81,unknown,unknown,,plain,"",false,,,,,,,,,"",,
455535133,455535134,3408,30bd39eb5127cb6a24dbcbc1df301c2fce4a1065,python,ok,4,python,unittest,true,false,13,0,13,55,,,,"",61.21000000000001,
455535168,455535169,3409,9a49bbefb2314f0b2c73f95ed92464d0998fd829,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",59.56,
455535769,455535770,3410,215c1fe545604a977a33f0096117b63bc7d65034,python,ok,5,python,unittest,true,false,13,0,13,55,,,,"",49.559999999999995,
455535847,455535848,3411,9587ba3875c9cef4b249ab6476fb1906520bc2a7,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",52.92999999999999,
455536453,455536454,3412,d00a755c253190c0a59d0a44a3c4df11b01604d4,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",51.17,
455536484,455536485,3413,52e15f9d7afc221c31fb42964a8a3026f2eab52b,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",53.410000000000004,
455539550,455539551,3414,8b749234fd803eebef24d5f8d1b5565943d9d9d9,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",55.28,
455540093,455540094,3415,5b0b39d5dc0a89cbd17fee1b660f8f0cee21af7e,python,broken,4,python,unittest,true,false,10,3,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Tests if the bot returns the same response for the same,46.27,
455540127,455540128,3416,b8c05931be25c160021442c24173f3c0c451da6a,python,broken,1,python,unittest,true,false,10,3,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Tests if the bot returns the same response for the same,44.769999999999996,
455560864,455560865,3417,7adcdc9479876987e405bf83d1c0cf47bb914f77,python,broken,1,python,unittest,true,true,39,15,54,55,,,,"Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that repetitive responses are filtered out of the results.#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Tests if the bot returns the same response for the same",47.46,
455560878,455560879,3418,b95b0c2521aee520cee0c5a4f4051ef922d9587f,python,broken,0,python,unittest,true,true,39,15,54,55,,,,"Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that repetitive responses are filtered out of the results.#Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Tests if the bot returns the same response for the same",45.55,
455771929,455771930,3419,70d7cddaab45399c18a6683d9662fd3ccb1b8b96,python,broken,1,python,unittest,true,false,10,3,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Tests if the bot returns the same response for the same,47.85999999999999,
455771939,455771940,3420,88dafc2344cbda01c02ce276a418403a8e781b83,python,broken,0,python,unittest,true,false,10,3,13,55,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Tests if the bot returns the same response for the same,45.67999999999999,
456647897,456647898,3421,7c0ecaf65a955f45c185f16e1f4311f491562103,python,ok,1,python,unittest,true,false,13,0,13,55,,,,"",52.49999999999999,
456649465,456649466,3422,616977b7e29b086efed688af376be8773e4348e5,python,ok,0,python,unittest,true,false,13,0,13,55,,,,"",52.61,
456754400,456754401,3423,c4d399c350f552acdf1069259766e34f61c4f922,python,broken,1,python,unittest,true,false,13,0,13,49,,,,"",53.79999999999999,
456754605,456754606,3424,8fac282f676092f907c37e07c9c09e83d3005322,python,broken,0,python,unittest,true,false,13,0,13,49,,,,"",52.919999999999995,
456756004,456756005,3425,9eefb5fb41fcbdfcd295f42767979f8ef625e1e2,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",55.5,
456756008,456756009,3426,5af0a097f75cac6f1d9b94ef8d596061a21cbabe,python,ok,0,python,unittest,true,false,13,0,13,49,,,,"",53.559999999999995,
456757265,456757266,3427,6dcdb07a9aa2683192fd4222633d422449d7e593,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",54.18,
456758485,456758486,3428,635d5823710158d757557d74b3091aeb0dca7c94,python,broken,1,python,unittest,true,false,12,1,13,49,,,,Test that repetitive responses are filtered out of the results.,53.24,
456758491,456758492,3429,e25d1d7d2254bccefd81f85067b365d8d0f07667,python,broken,0,python,unittest,true,false,12,1,13,49,,,,Test that repetitive responses are filtered out of the results.,54.21,
456760134,456760135,3430,3d9d6b81768a2e4c433d2b71b57259f5b3c981be,python,broken,1,python,unittest,true,false,12,1,13,49,,,,Test that repetitive responses are filtered out of the results.,50.83,
456760142,456760143,3431,3789d054343e7a05857a64e46d8153c87e8885da,python,broken,0,python,unittest,true,false,12,1,13,49,,,,Test that repetitive responses are filtered out of the results.,52.879999999999995,
456760276,456760277,3432,8e1c35aa85d4eb6944e3070c2444f0a83ae95e4a,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",53.96,
456760280,456760281,3433,2fba2e8c5a7b9bd3b9848c818a9a9183f4820fb5,python,ok,0,python,unittest,true,false,13,0,13,49,,,,"",55.83,
456761349,456761350,3434,f643dc73c5e353b7bccd644fb6a682fd128c2777,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",53.88999999999999,
456761925,456761926,3435,7a691357283f445fbf4becea8ee0ea038aa2d796,python,broken,1,python,unittest,true,false,9,4,13,49,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Test that the ``clean_whitespace`` preprocessor is used during#test_second_response_format,54.25,
456761931,456761933,3436,36a3d30a8e5734b56373415cc986384ed89c55bc,python,broken,0,python,unittest,true,false,10,3,13,49,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Test that the ``clean_whitespace`` preprocessor is used during,50.709999999999994,
456762741,456762742,3437,c133c8b6f713e8990f1858aaadb578e10125eba3,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",56.33,
456762784,456762785,3438,647597b0cb8580375d107601875069adb455c061,python,broken,1,python,unittest,true,false,10,3,13,49,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Test that the ``clean_whitespace`` preprocessor is used during,48.59,
456762794,456762795,3439,5aff734a91e6c2009946c03da44bf28cf8947fc8,python,broken,0,python,unittest,true,false,10,3,13,49,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Test that the ``clean_whitespace`` preprocessor is used during,46.54,
456888166,456888167,3440,6d0ebb36dc7522b1942a1730a1b35586554eb672,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",53.24999999999999,
456888885,456888886,3441,44ac897e4ad6377d4224414a9146d3240c50355e,python,ok,0,python,unittest,true,false,13,0,13,49,,,,"",51.839999999999996,
456890923,456890924,3442,a7f8b21389209e7f9be5c2b2eeb29d5961312e97,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",52.699999999999996,
456896258,456896259,3443,b0b099048b5e8ef6292641b29ba7fdb61750da64,python,ok,2,python,unittest,true,false,13,0,13,49,,,,"",54.339999999999996,
456896340,456896341,3444,ed1be017d10d8e6eb96708a1a223896efa2a5dd5,python,ok,0,python,unittest,true,false,13,0,13,49,,,,"",54.17,
456899298,456899299,3445,2f83d82cf5ee87ff30d72ae0188a19847e568bb8,unknown,unknown,,plain,"",false,,,,,,,,,"",,
456899540,456899542,3446,f6cace33186388b6520906da641f2dff31e667c5,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",53.05,
456913799,456913800,3447,894355c976ba4c4cf2e091195822eb9994a96d49,python,broken,1,python,unittest,true,true,-37,92,55,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.19,
456914773,456914774,3448,851946567cce9f966de8deb1e50e58883a698e85,python,broken,0,python,unittest,true,true,-37,92,55,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.19,
456922394,456922395,3449,fe3484c200f68c61e58c87b7f981f758eca2e186,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",47.669999999999995,
456922566,456922567,3450,f7e988fe453b5aa03bd7de97b46e72606fc61244,python,ok,0,python,unittest,true,false,13,0,13,49,,,,"",43.97999999999999,
456923884,456923885,3451,114dff905fcfa9507c39bb2da0c967fd0a852bfd,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",44.75,
456924196,456924197,3452,2e369f70db491ec7e0fa06b0e36b56414044295b,python,broken,2,python,unittest,true,true,-37,92,55,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.18,
456924210,456924211,3453,064760647cf9b94a87502f096cdf04b0858bd7c2,python,broken,0,python,unittest,true,true,-37,92,55,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.16999999999999998,
456926439,456926440,3454,853d8f6e0ae81934a74ed62ec091207abced1f6c,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",44.32999999999999,
456926458,456926459,3455,00d173e9e9b53107d02c332b0b0d566d129da571,python,ok,0,python,unittest,true,false,13,0,13,49,,,,"",44.32,
456927685,456927686,3456,f4cc738a50d14c1310536e89fd6ef86c8ef35e9a,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",43.190000000000005,
456927961,456927962,3457,b4c7320458efd1d13e887c1a25040cfbb4df7db4,python,broken,1,python,unittest,true,false,9,4,13,49,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Test that the ``clean_whitespace`` preprocessor is used during#test_second_response_format,36.379999999999995,
456928000,456928001,3458,5932b68b5b22b2d8f2d11ff24fc1c4b175da6017,python,broken,0,python,unittest,true,false,10,3,13,49,,,,Test that we are able to get a list of only statements#Responses generated by the chat bot should not be included in results.#Test that the ``clean_whitespace`` preprocessor is used during,35.959999999999994,
457235789,457235790,3459,ecd51e948ffd27999f9c0d5943ec694a8f5ca0c5,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",46.71,
457236273,457236274,3460,964eec63e3ec1acc43bce8ff855d15a30b0a9e24,python,ok,0,python,unittest,true,false,13,0,13,49,,,,"",43.66,
457256769,457256770,3461,7678511c2fc5a171c5ea36e252684db4bc655ba0,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",44.029999999999994,
457750427,457750428,3462,1c41db63f39dc44e9dcfc654876cf2ae00775f88,python,broken,1,python,unittest,true,false,1,12,13,49,,,,"Note, the content of the in_response_to field for each of the#Test the synset distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that text capitalization is ignored.#test_response_format#test_response_known#test_second_response_format",38.650000000000006,
457750607,457750608,3463,ccdf60469e2939366ed0d42e1e4897503c9d58fc,python,broken,0,python,unittest,true,false,1,12,13,49,,,,"Note, the content of the in_response_to field for each of the#Test the synset distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that text capitalization is ignored.#test_response_format#test_response_known#test_second_response_format",40.04,
457751102,457751103,3464,3b2f323865ca13ca92af98d701f6cc430157f6d3,python,broken,1,python,unittest,true,false,4,9,13,49,,,,"Note, the content of the in_response_to field for each of the#Test the synset distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that text capitalization is ignored.",38.980000000000004,
457751114,457751115,3465,65e5eb37ccc5de8f9076bdaecda9b2f1faf5acab,python,broken,0,python,unittest,true,false,4,9,13,49,,,,"Note, the content of the in_response_to field for each of the#Test the synset distance comparison algorithm.#Test the synset distance comparison algorithm.#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that text capitalization is ignored.",38.93,
457757513,457757514,3466,a96745cec0318ba36e16987b541e3e93ca8ae287,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",43.769999999999996,
457757515,457757516,3467,712c77b77ce4133c010608a91e6f0fd3ec539d91,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",43.629999999999995,
457760180,457760181,3468,f91a52a4f3f5c510f035869076d2853c66386e89,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",46.62,
457916541,457916542,3469,7f78843566eb4e51e045db45a1ba0797556ff8e1,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",45.480000000000004,
457916713,457916714,3470,27ffeadb333e09fc2ae073b3422a4f6cb2a37d4c,python,ok,0,python,unittest,true,false,13,0,13,49,,,,"",43.41,
457919681,457919682,3471,c40549c98b3b2da17ee0ea1de8d52c79ce36e035,python,ok,1,python,unittest,true,false,13,0,13,49,,,,"",43.410000000000004,
458963278,458963279,3472,26e630c5381e72d29b555e054652d846a801d7f0,python,ok,1,python,unittest,true,false,13,0,13,50,,,,"",45.86,
458963511,458963512,3473,c9661efa2656eec001e530d78415012cdfccf0f0,python,ok,0,python,unittest,true,false,13,0,13,50,,,,"",43.46,
458964586,458964587,3474,b0daf05f15e35dd9d5121926b6c9701b2b13b314,python,ok,1,python,unittest,true,false,13,0,13,50,,,,"",44.33,
459137367,459137368,3475,fb5cfa219320e536eaaf455351834f68a594e882,python,broken,1,python,unittest,true,false,-23,36,13,50,,,,"",44.23,
459137467,459137468,3476,e07af3cb4bad756ec82d8865df510988cd291f40,python,broken,0,python,unittest,true,false,-23,36,13,50,,,,"",44.46,
459139910,459139911,3477,e6d05ad9157c16d86c511539239f0895437eb372,python,ok,1,python,unittest,true,false,13,0,13,50,,,,"",42.739999999999995,
459139918,459139919,3478,ba9c09d72bf8b6328bf762bba82b8ed5c8a4981e,python,ok,0,python,unittest,true,false,13,0,13,50,,,,"",42.92,
459143177,459143178,3479,3bb3ab2f75b456c420bdb1b6c577d0f1be80c7f2,python,ok,1,python,unittest,true,false,13,0,13,50,,,,"",43.86,
459157145,459157146,3480,71a20b87a2615eabb62d342fb334c0746db32c5d,python,ok,1,python,unittest,true,false,13,0,13,48,,,,"",49.46,
459157368,459157373,3481,17ffe10d94786bc34e69f1f12d2e44ade02730c8,python,broken,2,python,unittest,true,false,12,1,13,48,,,,test_second_response_format,51.709999999999994,
459182947,459182948,3482,ce8b1beae35522f67adbfa2d38e1d0fd3241007d,python,ok,1,python,unittest,true,false,13,0,13,48,,,,"",50.73,
459182999,459183000,3483,9275bb818566a28a356deabba386bd9f74293fcd,python,ok,0,python,unittest,true,false,13,0,13,48,,,,"",52.23,
459185604,459185605,3484,aad38b608150a7acc43786bccb0eaa9e226d758e,python,broken,1,python,unittest,true,false,12,1,13,48,,,,test_second_response_format,50.31,
459201889,459201890,3485,0c00a9e2d54370deafbe43339da2df877c1e6829,python,ok,1,python,unittest,true,false,13,0,13,48,,,,"",52.699999999999996,
459202043,459202044,3486,20085a8820c9a5a4825670d6296b2dd13bdffb8a,python,ok,0,python,unittest,true,false,13,0,13,48,,,,"",48.5,
459203288,459203289,3487,fbc72cc8d96ba01c69d1f4fa3120831fa0c3ac83,python,ok,1,python,unittest,true,false,13,0,13,48,,,,"",52.35,
459205407,459205408,3488,7c627aa89a551c7b20a10a1b20610afccbba5984,python,broken,1,python,unittest,true,false,5,8,13,48,,,,"test_confidence_half_match#Note, the content of the in_response_to field for each of the#test_close_input#test_different_punctuation#Note, the content of the in_response_to field for each of the#Test the case that a high confidence response is known.#test_answer_close_to_known_input#Tests if the bot returns the same response for the same",36.4,
459205479,459205480,3489,f4c78fad8b6e7b2c6c530ff9c4b3fbcbcb436b6c,python,broken,0,python,unittest,true,false,5,8,13,48,,,,"test_confidence_half_match#Note, the content of the in_response_to field for each of the#test_close_input#test_different_punctuation#Note, the content of the in_response_to field for each of the#Test the case that a high confidence response is known.#test_answer_close_to_known_input#Tests if the bot returns the same response for the same",37.019999999999996,
459237484,459237485,3490,35a7fad92a8e90c5719aec3a96f9985bba57d678,python,broken,1,python,unittest,true,true,49,5,54,48,,,,"test_confidence_half_match#Note, the content of the in_response_to field for each of the#Test that repetitive responses are filtered out of the results.",37.38999999999999,
459237492,459237493,3491,e139eb7677a25508b91177f0e359644b6507103a,python,broken,0,python,unittest,true,true,49,5,54,48,,,,"test_confidence_half_match#Note, the content of the in_response_to field for each of the#Test that repetitive responses are filtered out of the results.",35.97,
459409002,459409003,3492,a4f84fba434b3e27e9e3dd2999c5adfa98179819,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",51.41,
459409173,459409174,3493,f47f109f1950d7758dc7b066dd8e27ce291444a2,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",49.31999999999999,
459410045,459410046,3494,b5288d13cf519201b4d870d6457ddef0e4c270c2,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",51.66,
459411294,459411295,3495,271b93ac7b15e2ad0abe4778337ab5728aaabdb0,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",52.42,
459411474,459411475,3496,20d391775006551b23e725ce609d14194c17cefd,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",50.9,
459412369,459412370,3497,c6c680447461ed1880ca432888100edee518a764,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",51.720000000000006,
459433096,459433097,3498,63fe707fbe41d17ce75260cc22229c822ed6132d,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",52.21999999999999,
459433312,459433313,3499,29c842f035d0ebe47e958c933e896a83ce5e0b1f,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",51.23,
459435808,459435809,3500,3b5c2767755b46088897df257bacf5957252f203,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",51.33,
459458492,459458493,3501,c8691f2eee3326ca4c8ae80039d6b14a469ce0c6,python,broken,1,python,unittest,true,false,13,0,13,15,,,,"",51.129999999999995,
459458719,459458720,3502,56754be861d1792520f1e4c9976fab729fb4938f,python,broken,0,python,unittest,true,false,13,0,13,15,,,,"",51.08,
459459409,459459410,3503,df36e7223ddef658eec8f29ad0c02da1dd45374e,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",52.599999999999994,
459459414,459459415,3504,5c90ab23a8bcbaf3c1aaa4357cd9dc21fc18e0fe,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",49.239999999999995,
459460626,459460627,3505,153d944604e0d38c0923509353ecc8a09af59492,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",51.27,
462351767,462351768,3506,153d944604e0d38c0923509353ecc8a09af59492,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",50.06,
463855735,463855736,3507,0ba91566c40d66ab7fb19e392f1e2e909918d7b4,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",49.41,
464146572,464146573,3508,f97942751c599011e5b992ed99e13146e3f45393,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",51.71,
464449443,464449444,3509,40319bbdb8a496d322abd1b078073f944530e017,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",49.94,
464937821,464937822,3510,2874e8b8b2e51ec5c143f83c43c6e1f4b52fb1be,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",48.269999999999996,
465365644,465365645,3511,84771749040c44f4aba48b157cd8d34c5677489c,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",47.29999999999999,
465365871,465365872,3512,64709ed664c3513ad960627b0e4465236991500e,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",49.49,
465367239,465367240,3513,91975d04efe7b6a63aaa379ed682a8dae64c47cf,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",49.300000000000004,
465641863,465641865,3514,7289b9a2e4059c1b73854c54538a1d8b0e076ead,python,broken,1,python,unittest,true,true,52,3,55,15,,,,Test that repetitive responses are filtered out of the results.,54.61,
465641871,465641872,3515,d67e70b3f2e650326010a425f48eb3797e96c7d5,python,broken,0,python,unittest,true,true,52,3,55,15,,,,Test that repetitive responses are filtered out of the results.,57.03,
465662172,465662173,3516,e1053d9b00f1f9b954c0e93e440c353c7bd900b9,python,broken,1,python,unittest,true,true,53,4,57,15,,,,"",47.940000000000005,
465662567,465662568,3517,9236bab7337944dfb1e36bb80c5e3b339ff6caf3,python,broken,0,python,unittest,true,true,53,4,57,15,,,,"",48.349999999999994,
465716266,465716267,3518,d1be49ed827a9c55ec1ea31032798bb769a50a3f,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",50.04,
465716280,465716281,3519,1d50bd220edfecff78ed6721dffa6c017bf397bd,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",49.449999999999996,
465717223,465717224,3520,4cfa79aba318007a913cd1bdd86a654ef8549021,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",49.65999999999999,
465718725,465718726,3521,f6e0df2440853778cc0e25e8ead21c5044778014,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",59.379999999999995,
465718734,465718735,3522,c109528fca2c6409ef8a48ac24b2985765b4b70e,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",58.27,
465725451,465725452,3523,d36eae7c50f0b9b247b2735a7f789006fa62a54d,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",48.21,
465725742,465725743,3524,b582a0ee3e2787d4aa1a149ecc14d0781a819dd3,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",51.53,
465733677,465733678,3525,e2c0c7369275028cab0d467f777543b6dba9cb0b,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",51.07000000000001,
465734742,465734743,3526,ece29e6aef5fab617fcbdcecad9d586d8f8326c2,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",60.660000000000004,
465734750,465734751,3527,e0c705c20b841325c152d74b01a28f970744cb1f,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",61.76,
466959668,466959669,3528,bf9a339e89a3df2602cef80e11c3b4b303a04463,python,broken,0,python,unittest,true,false,12,1,13,15,,,,"",49.93,
467030436,467030437,3529,19293baa04d23cee185acbd1a152b6a32cba214c,python,broken,0,python,unittest,true,false,12,1,13,15,,,,"",48.199999999999996,
467031043,467031044,3530,2a92dd69b5fd3823db615955bffa8c965ad25dcb,python,broken,0,python,unittest,true,false,12,1,13,15,,,,"",48.029999999999994,
468418439,468418440,3531,adac2483acedd27896f0e0038a7ef6170367639a,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",59.24,
468418452,468418453,3532,928c6c0ca8fc71ab3ede64bd49b966a85971003a,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",58.94000000000001,
468426085,468426086,3533,0b4b913ffbf2c44ebe82b535144d28763376950f,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",58.53,
468426099,468426100,3534,63d22dabea2fd5af8b32e1ad46d2a92b117657dc,python,ok,0,python,unittest,true,false,13,0,13,15,,,,"",62.0,
468427558,468427559,3535,a48b3eda404e590590cd9a06ea29a1225e07c255,python,ok,1,python,unittest,true,false,13,0,13,15,,,,"",60.77,
468441823,468441824,3536,af3789292b2ee920531bf3709886a22667f8257e,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",59.75,
468442689,468442690,3537,460b6514f65db31d67ffd486025612ae99eaed5b,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",60.769999999999996,
468446621,468446622,3538,676aef3077daebbaba6ac599b86c715fa30ae7d0,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",58.300000000000004,
468455659,468455660,3539,18fc7f22ad4b60b32a8a2ff2131f2303ab07ff4f,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",61.13,
468455872,468455873,3540,aced8570a9f06f2d3eaa2f38fa09aaaa62b555d4,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",63.84,
468458303,468458304,3541,8eaab0865158aeb81a2deb4ca9d48d4ae8b483a3,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",60.42,
468461835,468461836,3542,8eaab0865158aeb81a2deb4ca9d48d4ae8b483a3,python,ok,2,python,unittest,true,false,13,0,13,14,,,,"",60.36,
472797173,472797174,3543,65f28927b2083b1b19b89ce9a41b2a21590effc9,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",58.32,
472797247,472797248,3544,a50e19dbd357e2c380a99fc21b0e81d34d5d379e,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",58.010000000000005,
472797600,472797601,3545,28feba5476b3ecd8bc60243a534e97ee5bbcd729,python,broken,1,python,unittest,true,true,-40,98,58,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.23,
472797999,472798001,3546,08077fc4270ac4e1e7a17bbce29ec48835ad92f0,python,broken,0,python,unittest,true,true,-40,98,58,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.2,
472798988,472798989,3547,8f39f077a4265e9d882164ac78b9fb7066f78825,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",60.989999999999995,
472799083,472799084,3548,ba5a0a473073439cf4dc57adc1fbec986ce70eff,python,broken,1,python,unittest,true,true,-40,98,58,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.2,
472799181,472799183,3549,f10345fb331362f3bc9428a9b369c5a28ed23bde,python,broken,0,python,unittest,true,true,-40,98,58,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.22999999999999998,
473124468,473124469,3550,7fd76adf9ba0a185a2c9d118ccfeb7776b7da706,python,broken,2,python,unittest,true,true,-40,98,58,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.22999999999999998,
473124485,473124486,3551,84b40eac10426d3ff577c7e9a7904666d495cf95,python,broken,0,python,unittest,true,true,-40,98,58,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,0.22999999999999998,
473127129,473127130,3552,258c1132289b1627384cc15ed087560569856b34,python,broken,1,python,unittest,true,true,-176,234,58,14,,,,"Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Test that the logic adapter cannot return a response containing#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#ChatterBot should return close matches to an input#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that repetitive responses are filtered out of the results.#Test that a response time is returned.",18.759999999999998,
473127150,473127151,3553,cf111a89dc228a0ba11979c175142c49f2973d09,python,broken,0,python,unittest,true,true,-176,234,58,14,,,,"Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Note, the content of the in_response_to field for each of the#In the case that a match is selected which has no known responses.#Test that the logic adapter cannot return a response containing#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#ChatterBot should return close matches to an input#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that repetitive responses are filtered out of the results.#Test that a response time is returned.",19.49,
473128192,473128193,3554,a482e0ff8c8f26fc86523310c1d257e4c47dc700,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",60.1,
473128274,473128275,3555,bc03bbbfb64784220040b9c4b9bdb060cbbddf27,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",58.29,
473129402,473129403,3556,e66d0b780220854dc7cdd640fbca3517edf4643f,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",61.34,
473135665,473135666,3557,ddb7bffc0afc074327ef1776f198b499b3a18d73,python,ok,4,python,unittest,true,false,13,0,13,14,,,,"",60.63000000000001,
473932835,473932836,3558,4e937a6decc36ec8fa18b7ff8ec92971e8b6a742,python,ok,2,python,unittest,true,false,13,0,13,14,,,,"",61.39999999999999,
473933580,473933581,3559,815c3e19449abf827db26ed0354b54a989b933ba,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",60.79,
473938682,473938683,3560,8d88d4594478aa40c394684118569faf7e2f4b54,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",62.0,
473938688,473938689,3561,97dbec52748d6d983c75c9e6544c95e0f694327c,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",59.96999999999999,
473940348,473940349,3562,86202376e202748e606350daf16fc79f893020ff,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",59.779999999999994,
473940364,473940365,3563,5d1a42ae15489cf31dbab922b23f302f6446a4c2,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",60.220000000000006,
473940743,473940744,3564,4cb4eae7d4c6e926c7661b2cd03c59526fc3a222,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",59.28999999999999,
473940747,473940748,3565,32f27c02272c879a2ec9cd46d165ffa21242831e,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",60.6,
473941139,473941140,3566,a79d38049a90581cfb3709e28338aad8a6dde4f3,python,broken,1,python,unittest,true,true,-179,237,58,14,,,,"Test that the logic adapter cannot return a response containing#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#ChatterBot should return close matches to an input#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Test that a response time is returned.#Test that the initialization functions are returned.#Test that the initialization functions are returned.",18.37,
473941156,473941157,3567,0999ed328cb75b72e01604b1b22a06fe163200c9,python,broken,0,python,unittest,true,true,-179,237,58,14,,,,"Test that the logic adapter cannot return a response containing#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#ChatterBot should return close matches to an input#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Test that a response time is returned.#Test that the initialization functions are returned.#Test that the initialization functions are returned.",18.77,
473942612,473942613,3568,a3e9101903949f60654ab3c822511763adf0c649,python,broken,1,python,unittest,true,true,-177,235,58,14,,,,"Test that the logic adapter cannot return a response containing#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#ChatterBot should return close matches to an input#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Test that a response time is returned.",19.140000000000004,
473942624,473942625,3569,a322c513ffaa37ea951cd1009a8b491e2ce06f0d,python,broken,0,python,unittest,true,true,-177,235,58,14,,,,"Test that the logic adapter cannot return a response containing#An exception should be raised if there is no data in the database.#Test that an additional data attribute can be added to the statement#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#ChatterBot should return close matches to an input#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Test that a response time is returned.",18.720000000000002,
474147681,474147684,3570,eb619cda6f691ade5fa0005107bceee10b1b6746,python,broken,1,python,unittest,true,true,-181,239,58,14,,,,"Test that the logic adapter cannot return a response containing#A response to the input should be returned if a response is known.#The response to the input should be returned if a response is known.#The input should be returned as the closest match if there#If there is no data to return, an exception should be raised.#A match can be selected which has no known responses.#Test that an additional data attribute can be added to the statement#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#ChatterBot should return close matches to an input#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Test that a response time is returned.",19.099999999999998,
474147686,474147687,3571,cbbba6b8b3702ced4e935edc0607815fd8d119e0,python,broken,0,python,unittest,true,true,-181,239,58,14,,,,"Test that the logic adapter cannot return a response containing#A response to the input should be returned if a response is known.#The response to the input should be returned if a response is known.#The input should be returned as the closest match if there#If there is no data to return, an exception should be raised.#A match can be selected which has no known responses.#Test that an additional data attribute can be added to the statement#Test the case that a high confidence response is known.#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#The storage adapter should not create a statement with tags#The storage adapter should not create a statement with tags#The storage adapter should not update a statement with tags#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the ``clean_whitespace`` preprocessor is used during#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the synset distance comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#ChatterBot should return close matches to an input#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that text capitalization is ignored.#Test that text capitalization is ignored.#Test that repetitive responses are filtered out of the results.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Test that a response time is returned.",19.000000000000004,
474156402,474156403,3572,bcf43be6977f6ea9dd4f19b4ffa4f734c00bec8e,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",61.00000000000001,
474156406,474156407,3573,a20d676c0c9c23d49b1b391edd731952d8f45e08,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",61.26,
474158061,474158062,3574,e1b39f9b6933b766159a76039e4a78a7fdd078f8,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",60.949999999999996,
474158088,474158089,3575,d7697ad2d844a962b15c647bcb77fb9765cf7f0e,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",59.05,
474159606,474159608,3576,4d49b254fb1d2409a7e4675b7972d1523b0c8d68,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",59.599999999999994,
474230314,474230315,3577,938a7f8a9146c146a00d640d495116e2ccebc3d0,python,broken,1,python,unittest,true,true,1,12,13,14,,,,"",59.01,
474230643,474230644,3578,115c0cb6b0d9bc94c09acf8f2083056f125db580,python,broken,1,python,unittest,true,true,1,12,13,14,,,,"",60.440000000000005,
474230812,474230813,3579,1412f21ddb095c4763f6726621969fa7ad171d46,python,broken,0,python,unittest,true,true,1,12,13,14,,,,"",60.989999999999995,
474240450,474240451,3580,f46422bfbb5a9d7667a8312b57643f0a6c9dd1b1,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",62.230000000000004,
474240464,474240465,3581,2de515a543a24c8030d1826b0de5abcd87b25b94,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",62.330000000000005,
474242048,474242049,3582,f0ac3d456291bd6da73ba88c426c6573a659d6d3,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",73.59,
475793528,475793529,3583,6f23cb0442205ae1be552c73ef72e2da6326a9c6,python,broken,1,python,unittest,true,false,13,0,13,14,,,,"",60.65,
475794166,475794167,3584,8cefc3b9725287f0fd19a7a0533cd0c7f458fd35,python,broken,0,python,unittest,true,false,13,0,13,14,,,,"",58.480000000000004,
475795540,475795541,3585,fe192e78f54503680f695debda826857ec8b5a35,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",59.050000000000004,
475795544,475795545,3586,d0280c7ea516b61b3327eb3d028431d4f7e3cc03,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",59.78,
475798339,475798340,3587,870025c601dc9ab7703365e6d545079fa10b10ae,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",60.24,
475843772,475843773,3588,111f2c8e5a8a829cc7774c11edc1c6742ac4a94c,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",60.84000000000001,
475844117,475844118,3589,1ee56013c0e98635b7db840358ed35640a8c3fb5,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",65.92,
475845364,475845365,3590,41c8987a624d751e8935e5ac34da6d7b2b623e1f,python,ok,2,python,unittest,true,false,13,0,13,14,,,,"",59.419999999999995,
476053215,476053216,3591,f9852c342cc69f9e31e7e84d2c8c927ff5a01388,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",60.02,
476053406,476053407,3592,0b45028f3e6098fde546f77aaf6e66ceaaa8fde5,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",61.71,
476061332,476061333,3593,091f7c3672b1f71ba967065afff9506654139bb3,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",64.32,
476271319,476271320,3594,1c7017ab6ad275dc106f846c5c1cd522794d566e,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",59.32,
478757100,478757101,3595,7be123618696ac22d1bae0aad05f21f3615803ca,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",60.29,
478760634,478760635,3596,2a7761f699a35ab12e24f5e6ed59a5ba2893afbf,python,ok,2,python,unittest,true,false,13,0,13,14,,,,"",59.71,
478760810,478760811,3597,1a051729fdaac74809f314b7d22f14cedf2b41f7,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",59.46,
478761746,478761747,3598,a382adf7059c91c38cf54ba07f324fd7363667e3,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",59.94,
478776979,478776980,3599,4ce09bdd427346928861d73b175901d4c1674508,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",59.64000000000001,
478777279,478777280,3600,99ba512c08e9948f9f8163cef6776201ba51aca9,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",59.89,
478798345,478798346,3601,a4845aff79b1efb89a210b3b2cc57739cc27bebf,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",58.74000000000001,
478856997,478856998,3602,33727a45ab8064fc3be470c25f509f5209642b71,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",58.800000000000004,
478861351,478861352,3603,6a153ecf8a77f2509705c9c6df3b495a6106818a,python,ok,0,python,unittest,true,false,13,0,13,14,,,,"",55.67,
478870515,478870516,3604,b14086b33c51d4476c14920b6f167b0109451402,python,ok,1,python,unittest,true,false,13,0,13,14,,,,"",58.760000000000005,
479131822,479131823,3605,19c0ffaa2b9dc1dfda7ce6d97dd96601ceeb0b09,python,ok,1,python,unittest,true,false,13,0,13,10,,,,"",58.17,
479134120,479134121,3606,aed908bcbf072ae31b4fdd630c9c81c70e201990,python,ok,0,python,unittest,true,false,13,0,13,10,,,,"",57.870000000000005,
479135442,479135443,3607,6e38965b54faa98fc834d492e05c19e3afd5d7ab,python,ok,1,python,unittest,true,false,13,0,13,10,,,,"",56.96000000000001,
479135914,479135915,3608,c0dbdeb981051a6f65d8b341080a308a3807c94d,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",55.19,
479136122,479136123,3609,28f86074d944cedbee644874059f330dc5f82f69,unknown,unknown,,plain,"",false,,,,,,,,,"",,
479136152,479136153,3610,ffd48b34eb4d59056bd60011a8014dcd6efe0dd0,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",57.120000000000005,
479136172,479136173,3611,f6c8d63d2adf7370766ffee6ff69ea4ed5bed045,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",69.25,
479143144,479143145,3612,2168a93c38b88dc83fe01f30f53696650958ae23,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",88.74000000000001,
479186978,479186979,3613,096aa12db862cba46eb94c2c1fb8bded2fa09865,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",56.77,
479187086,479187087,3614,7a8dd6e0623c291e53d8777be18b9359f8d530ed,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",56.96999999999999,
479187889,479187890,3615,c174ad95cbd337c7bae394cceb3110b5a233012e,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",56.94,
479815188,479815189,3616,44db7e5b652b7a8c91dccadb607ad1edea997f46,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",56.599999999999994,
479816443,479816444,3617,274cd271c021b9fa7131965d876e97a67a2c60a5,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",59.040000000000006,
479824266,479824267,3618,088fbe11feb221290e0b1b55232167d6c4349678,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",56.49000000000001,
479832175,479832176,3619,e74e4e1108cac7d8438e4b412e72f016323636a1,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",55.62,
479833919,479833920,3620,e74e4e1108cac7d8438e4b412e72f016323636a1,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",53.9,
479836109,479836111,3621,094dd27176f8e61e645af2edef70ac6bf83ee379,python,ok,3,python,unittest,true,false,13,0,13,9,,,,"",54.92,
479837009,479837010,3622,094dd27176f8e61e645af2edef70ac6bf83ee379,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",56.49999999999999,
479843318,479843319,3623,bfaa64abc3bb9a72ee844abb221c97f5cadc5dca,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",54.14,
479843440,479843441,3624,a29ec4348e663cf1d4ec8eb8e9c754c85bb7e79c,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",56.620000000000005,
479844522,479844523,3625,b12d44c746bb757af8f1e7e290b87857d4ea988d,python,ok,3,python,unittest,true,false,13,0,13,9,,,,"",56.72,
479846283,479846284,3626,da6b828a7b74d870f7846d57c7d54a5ba7b7f29b,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",56.22,
479846556,479846557,3627,43ac92d6bc1d02fd27ab62a6438eecf547169192,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",55.120000000000005,
479850247,479850248,3628,99e4c694c86f2d3102801767c2487daa0166fe51,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",56.82,
481165017,481165018,3629,6576e3a70f4211c8f66a12505635a49d111c0066,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",58.839999999999996,
481165196,481165197,3630,9f8e0a7a5d752bbe192a1c635cc32ccf8e7396b5,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",56.09,
481168813,481168814,3631,b0baaab527e727d9b65f220dc5101b2b157fba76,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",54.15,
481757263,481757264,3632,cf86ee2494f2030842e3c3a06ebbcee259c29dc4,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",54.230000000000004,
482048986,482048987,3633,dff095b70d61490f44d5e202a0d3de51588eba6f,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",58.25,
482684888,482684889,3634,19333622fa02d1e4fd24d57c7ab148ea8ba73dc4,python,broken,1,python,unittest,true,false,13,0,13,9,,,,"",57.71,
482685861,482685862,3635,8f7b2a7c8aa779a38dd6ab159706522bf6de7a4a,python,broken,0,python,unittest,true,false,13,0,13,9,,,,"",56.260000000000005,
482692831,482692832,3636,d2d23d05c71f6783dcc1f1c01e26e3b1d661640a,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",55.720000000000006,
482692874,482692875,3637,8c17d776b067233a56de9198efeebd852bf5cade,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",54.87,
482694349,482694350,3638,90fb86577d2201eb66f4c8b86902cee5ac394d13,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",58.07,
484347567,484347568,3639,8fc0759d77a9286e7f5260de816ad643392af933,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",59.480000000000004,
484347706,484347707,3640,1461f15408f11c3d51c63445bd1ad0997c79fe0c,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",54.029999999999994,
484370035,484370036,3641,f830b651f6e724eee5e9522927b46c642e232478,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",59.86,
484404081,484404082,3642,e9d8c8e308d4210627a98a544971f868eb542a9e,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",57.489999999999995,
484404906,484404907,3643,e9d8c8e308d4210627a98a544971f868eb542a9e,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",63.24999999999999,
485018859,485018860,3644,a3616123a27c383ef4c5465a7a2e165847f5fb45,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",54.71999999999999,
485023327,485023328,3645,d63880039a3f26557a2320d9b69cc79a81c25e52,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",64.69999999999999,
485023371,485023372,3646,b8ff440ddae470a034c7d7e87b3383db9726f14d,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",63.69,
485032046,485032047,3647,539506a2c3d772a3542dbfa1b85e1f9f2324f3e5,python,ok,2,python,unittest,true,false,13,0,13,9,,,,"",60.449999999999996,
485279643,485279644,3648,64ffab9b55ec92d56a1406c7e2c28147501086f5,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",61.480000000000004,
486202890,486202891,3649,f30a25de00b25606b86d3a9e5019f84d016cea0d,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",64.58999999999999,
486203032,486203033,3650,d7723914416b4d4371a9ffaaaead51e1211a0f66,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",60.28,
486204262,486204263,3651,145d5d9018c9736ed77cc1460bbd6d536c31045a,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.09,
486205454,486205455,3652,f753f061ac964aa7a11e18ea68931d8db1275641,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.51,
486730752,486730753,3653,c26309f6f50499dca059babd00ae38247af2d941,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",60.269999999999996,
486731148,486731149,3654,e398138243b1d04255854b77001dde91b75ae9fd,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",61.31,
486732272,486732273,3655,cac37888f041b244a02e383a94915cf9c50a45b3,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",61.29999999999999,
486735101,486735102,3656,2c103092e7445f1b7d9a064b7f042a34c490f6df,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",61.250000000000014,
486735141,486735142,3657,06372d5f3c648210bdbe39a072a005f4abbae2c4,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",61.89999999999999,
486740025,486740026,3658,16552effad7f57ae57f116da74a8a532fb1c99d6,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",61.03,
487203260,487203261,3659,2c103092e7445f1b7d9a064b7f042a34c490f6df,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",60.489999999999995,
487203851,487203852,3660,2c6acb60ffb9b07e917c117e477b62ca6f17e585,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",60.339999999999996,
487204219,487204220,3661,67d458d6f3039b462c7c9b0d4b4d0ad8cb63ad4d,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",59.900000000000006,
487205962,487205963,3662,17a49bb06ba0f25ad6ddfaae8636ef868187dd8d,unknown,unknown,,plain,"",false,,,,,,,,,"",,
487206304,487206305,3663,3eccceddd2a14eccaaeff12df7fa68513a464a00,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",60.87,
487208348,487208349,3664,3eccceddd2a14eccaaeff12df7fa68513a464a00,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.160000000000004,
487750805,487750806,3665,3eccceddd2a14eccaaeff12df7fa68513a464a00,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.3,
487871350,487871351,3666,b6f8014db634a2c4e299735e71431e13701182c2,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",61.61000000000001,
487871630,487871631,3667,a25d856479425887513e84cc4010f964e422ad62,unknown,unknown,,plain,"",false,,,,,,,,,"",,
487871679,487871680,3668,0326f5afd7d10b44f7ca5408be595f44883d3c8c,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",63.300000000000004,
487871691,487871692,3669,6e1942a3fd6661164c451ae79123f0da34ab6135,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",60.330000000000005,
487877860,487877861,3670,3a84ed00b74704cff65d979ee3131d9d01bd4591,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",61.190000000000005,
487882336,487882337,3671,b1bc48e79004d99306ba18296321b84b527de49b,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",59.72,
487882777,487882778,3672,a6a266a53ca1e0d0c8844601434d068b6c8013dc,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",62.41,
487885593,487885594,3673,b2f11b77b7c1f68f4349e0525e987fffbb4fda15,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",64.08,
487918661,487918662,3674,7a6fbdd5780eac639977640506360828c72a5058,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",61.49,
487919637,487919638,3675,537251edacc7765032a843b9cfff9090e11f1ffc,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",63.68,
487928939,487928940,3676,58a1e048daae20953eabb7fa159105f2f336e45f,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",61.160000000000004,
487929818,487929819,3677,d30366daab8e95bc3185ed4183fd284d3e0d72a3,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",61.36,
487929901,487929902,3678,97dba196a52da7a33566a166aea8dc8bdf6ddd36,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",61.63,
487931019,487931020,3679,7b978be806c9ca12b2f621860f850d9f496c7d5e,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.14000000000001,
487944508,487944509,3680,9a47d14dbcb7eced3827b8493ccd0c075328e4b7,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.64,
487945243,487945244,3681,eba5e0b4eafc318dca00e4d72176a4fcb40ce9b9,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",60.199999999999996,
487945252,487945253,3682,a9cc896fce4ab955667347b0bf7e6e499d6965ff,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",61.35999999999999,
487946564,487946565,3683,c12aeaf6cc672358767b6dad531fcf08fc17e434,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",63.32,
487951702,487951703,3684,11c0ae58b3c8f9c0337eb81d82aff916364a6635,python,ok,2,python,unittest,true,false,13,0,13,9,,,,"",61.84,
487951726,487951727,3685,85ffd1916f2cd9e56319ea9c28e56acb0495c866,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",62.720000000000006,
488018763,488018764,3686,dc00e7249c4f47d27d04d7f64f6a26973a4c85bd,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",61.94,
488018765,488018766,3687,6662c99abe48ea9d85a7c785327a1c6e9f5c4396,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",62.279999999999994,
488019306,488019307,3688,7b24dc129c2f204bc5c0078fe7ad3c4f348fe1a7,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",63.620000000000005,
488287858,488287859,3689,b38ed2f0f2400f5fdc5a9154f7905961ef17668d,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",64.69,
488288335,488288336,3690,6a290d32c2c9fa2571146db90ffbdbd984fdc86c,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",77.0,
488289793,488289794,3691,391e6b4d502cbcd06eb6170201c421025acef7ef,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",63.09,
489327285,489327286,3692,2ead83e6a320f378a8d543f2486694f0f0b759a5,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",63.370000000000005,
489978996,489978997,3693,aa3138b013cd4d6cd6760a54b6f72b205c1111db,python,broken,0,python,unittest,true,true,-51,134,83,0,,,,"",2.09,
490391282,490391283,3694,96837ff104e79cbaff387456da4c17a52e44aee0,python,broken,0,python,unittest,true,true,-51,134,83,0,,,,"",2.1,
497490673,497490674,3695,acc0cf7a9e44ca11384d7d2b0dcd743af6e99ef9,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.21000000000001,
497493719,497493720,3696,acc0cf7a9e44ca11384d7d2b0dcd743af6e99ef9,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.45,
497818777,497818778,3697,489886a6802c473cd0a41a17f0222eda2403b329,unknown,unknown,,plain,"",false,,,,,,,,,"",,
497819003,497819004,3698,c7f0c8f6129cae9e38b8027d992044f00838967d,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.77000000000001,
497820708,497820709,3699,663643f6b6837af9459de4dc38cac571d6d7d8ca,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",59.88,
497822542,497822543,3700,65c0b8fd1c65ca6e242b2341a707ab9359be99bb,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.13999999999999,
497825185,497825186,3701,c26a14d7776576da1fe821d55b8e707b6a6e19a4,python,ok,2,python,unittest,true,false,13,0,13,9,,,,"",60.81999999999999,
497826019,497826020,3702,c26a14d7776576da1fe821d55b8e707b6a6e19a4,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",62.97,
497832162,497832163,3703,2e1d5b16abfcd865d7f4cb5efa32fe410e43da5e,python,broken,2,python,unittest,true,true,363,1,364,9,,,,"",59.94,
497832332,497832333,3704,46b67aba00d99a401935b737aa7eaa991ed7ae04,python,broken,1,python,unittest,true,true,363,1,364,9,,,,"",61.46,
497834559,497834560,3705,b152a33904e1ce10ae1cd404fd097914eacd8a53,python,broken,1,python,unittest,true,true,65,18,83,9,,,,Test response time after training with the ChatterBot corpus.#Test response time after training with the ChatterBot corpus.,22.68,
497834563,497834564,3706,ace378b016f577a52464383105a80ea919f9e251,python,broken,0,python,unittest,true,true,65,18,83,9,,,,Test response time after training with the ChatterBot corpus.#Test response time after training with the ChatterBot corpus.,22.509999999999998,
497835928,497835929,3707,3060bd51f4526a40e05d00273bf3113329ee30a9,python,broken,1,python,unittest,true,true,65,18,83,9,,,,Test response time after training with the ChatterBot corpus.#Test response time after training with the ChatterBot corpus.,22.6,
497835959,497835960,3708,e3249b2597f11bdf23626dec9cac84f38050217f,python,broken,0,python,unittest,true,true,65,18,83,9,,,,Test response time after training with the ChatterBot corpus.#Test response time after training with the ChatterBot corpus.,21.93,
497838247,497838248,3709,4d67795e3d566146a4cc269337ac74f0590e2c5c,python,broken,1,python,unittest,true,false,12,1,13,9,,,,"",78.98,
497838273,497838274,3710,b8c165866705f25e3df18841f2ce33d492a5fd58,python,broken,0,python,unittest,true,false,12,1,13,9,,,,"",80.22,
497839776,497839778,3711,30866bddebe335771b3fb673cd25da649ed1aa57,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",79.25,
497839791,497839792,3712,373df6f3f207e15902fc457899ca42044a7d4298,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",80.61,
497840843,497840844,3713,92dd93daef022ff59796b99849e1fd375b1af2cc,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",79.16,
497873181,497873182,3714,0befe0ba8393012356bbbcf5e5118c2669d644cf,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",79.68,
497873683,497873685,3715,12758efb5d9096c5a9bd0eaafc52944281910b97,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",79.92,
497876099,497876100,3716,021d39edf6f31181f5630f26e73a949d5341dfb1,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",77.71,
500662958,500662959,3717,021d39edf6f31181f5630f26e73a949d5341dfb1,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",79.27,
502283839,502283840,3718,e236cbdb427dde4e1eff524c45d0189448d96bf2,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",85.60999999999999,
502287468,502287469,3719,15d4c4a8778f278a918048e10f63374b189d0d1d,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",81.24999999999999,
502295390,502295391,3720,2a2bf23216e8a9c1fdbc10b82a9ffe536cdf59d4,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",83.41999999999999,
504112363,504112364,3721,97157ac4266bd18fc25ae4311fdd5bfb302e328c,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",79.11,
504307447,504307448,3722,6e373b6dd45b1f3fca81f9809a5c23bb87e4b256,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",78.84,
504307563,504307564,3723,54bc36f14e124308102e94d591eccdbec90bfb5c,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",78.57,
504310008,504310009,3724,6cdcb0c9189a80eaf00cde2728715ec84096e753,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",88.15,
504380024,504380025,3725,85fec43692273a38e44e35caf030360ce65b92b3,python,broken,1,python,unittest,true,true,-66,149,83,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,1.31,
504380559,504380560,3726,647aa567c3f904b007834de1943f8df13c1950e1,python,broken,1,python,unittest,true,true,-66,149,83,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,1.38,
504386224,504386225,3727,03d72183334950575358ab9e6c19e9d74023f47e,python,unknown,1,python,"",false,,,,,,,,,"",,
504386243,504386244,3728,7947aaaa13c5dbbf480d8633e65b03407c728e8d,python,unknown,0,python,"",false,,,,,,,,,"",,
504386920,504386921,3729,9ddaf9d12edd5fd572b26ed0f3d394421fa4befa,python,broken,1,python,unittest,true,true,-66,149,83,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,1.2300000000000002,
504386924,504386925,3730,6e1a05bad02e0b6be1533f818339778e337711b8,python,broken,0,python,unittest,true,true,-66,149,83,0,,,,test suite for <module 'tests' from '/home/travis/build/gunthercox/ChatterBot/tests/__init__.py'>,1.37,
504402651,504402652,3731,73ee740a12f9a0ac8284fb154f963362e82265cc,python,broken,1,python,unittest,true,false,-5,18,13,9,,,,"",79.07000000000001,
504402669,504402670,3732,6259122d59be1e4cdc9f3071259480d48765a664,python,broken,0,python,unittest,true,false,-5,18,13,9,,,,"",81.55,
504412249,504412250,3733,da1c370e726a62375a2d1cd281431bc256dee5d8,python,broken,1,python,unittest,true,false,-5,18,13,9,,,,"",83.95,
504412255,504412256,3734,23c40bfcf6aa59abcede2d65171b68fbbfd8cedc,python,broken,0,python,unittest,true,false,-5,18,13,9,,,,"",87.43,
506740651,506740652,3735,fdf0e1759d3b253bfb9d9a47a16670ea0ba6bc46,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",81.64999999999999,
510306512,510306513,3736,540835f6e95c720ae0e9083cf92e10b409e2b9a0,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",81.42,
510329868,510329869,3737,463483ffad9cdab613b101ad892e4d3341186ddf,python,broken,1,python,unittest,true,false,-5,18,13,9,,,,"",79.02,
510329885,510329886,3738,c8d8d673ece7fb849b3917b3ca7ad23c91a27a58,python,broken,0,python,unittest,true,false,-5,18,13,9,,,,"",80.04,
510332207,510332208,3739,5b6fdbf71611b7b4770e6e249ae835228c27a84e,python,broken,1,python,unittest,true,false,-5,18,13,9,,,,"",80.28,
510332215,510332216,3740,827047b844163f40ccac7d2124315dabec93a08a,python,broken,0,python,unittest,true,false,-5,18,13,9,,,,"",83.58000000000001,
510341626,510341627,3741,9e69104221e4f15bfe1fc505770fb6286facc864,python,broken,1,python,unittest,true,false,3,10,13,9,,,,test_get_bigram_pair_string_five_characters#test_get_bigram_pair_string_four_characters#test_get_bigram_pair_string_multiple_words#test_get_bigram_pair_string_single_character_words#test_get_bigram_pair_string_three_characters#test_get_bigram_pair_string_two_characters#test_string_becomes_lowercase#test_tagging_german#test_tagging_long_words#test_tagging_medium_sized_words,167.90999999999997,
510341640,510341641,3742,3a6dc57cbc7c38127834a1ec71841e1f226e276e,python,broken,0,python,unittest,true,false,3,10,13,9,,,,test_get_bigram_pair_string_five_characters#test_get_bigram_pair_string_four_characters#test_get_bigram_pair_string_multiple_words#test_get_bigram_pair_string_single_character_words#test_get_bigram_pair_string_three_characters#test_get_bigram_pair_string_two_characters#test_string_becomes_lowercase#test_tagging_german#test_tagging_long_words#test_tagging_medium_sized_words,166.82,
510354009,510354010,3743,323f62f8cfc647c0c63b78259174ca34536a0f61,python,broken,0,python,unittest,true,false,13,0,13,9,,,,"",77.77,
510368649,510368650,3744,72a787045a0c9bdb66338b6e97392d364eee19ac,python,broken,0,python,unittest,true,false,13,0,13,9,,,,"",167.01000000000002,
510368658,510368659,3745,15c4a369247b0a925426d48f791148aa63c24410,python,broken,1,python,unittest,true,false,13,0,13,9,,,,"",168.39000000000004,
510374469,510374470,3746,87a83abc87df53a11d3ab5ac0dfb98406e270917,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",176.10000000000002,
510374482,510374483,3747,4075ed5489f034e76f49985449cb2a8e54e4582f,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",167.62,
510378863,510378864,3748,82f60b7b13bdbb7a0e52e923b3292f031fd7fd36,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",163.64,
510387661,510387662,3749,ec5b9be465eb212ac3ce55d06e3299221e41252d,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",165.42999999999998,
510595308,510595309,3750,9bd6e57347d2efc1e4b691a147db6fca8bde9851,python,ok,2,python,unittest,true,false,13,0,13,9,,,,"",167.01,
510600279,510600280,3751,9bd6e57347d2efc1e4b691a147db6fca8bde9851,python,ok,2,python,unittest,true,false,13,0,13,9,,,,"",167.31,
513467588,513467589,3752,9bd6e57347d2efc1e4b691a147db6fca8bde9851,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",166.66,
513510733,513510734,3753,2469e3c10658d022e3378203d1caba1bd3fb2960,python,broken,1,python,unittest,true,false,-71,84,13,9,,,,"Test that the logic adapter cannot return a response containing#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#A response to the input should be returned if a response is known.#The response to the input should be returned if a response is known.#The input should be returned as the closest match if there#If there is no data to return, an exception should be raised.#Test that an additional data attribute can be added to the statement#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Test that the ``clean_whitespace`` preprocessor is used during#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test that the process of looking up the previous response#If there is no statements in the database, then the#ChatterBot should return close matches to an input#test_get_nltk_data_directories",134.62,
513511197,513511199,3754,ba2469d5b3df96688f8fc800d3bfac84abefad51,python,broken,0,python,unittest,true,false,-71,84,13,9,,,,"Test that the logic adapter cannot return a response containing#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#A response to the input should be returned if a response is known.#The response to the input should be returned if a response is known.#The input should be returned as the closest match if there#If there is no data to return, an exception should be raised.#Test that an additional data attribute can be added to the statement#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#If no parameters are passed to the filter,#The count method should return a value of 1#Test that a matching statement is returned#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Test that the ``clean_whitespace`` preprocessor is used during#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#Test the case that a string contains ""corrupted"" text.#Test that the process of looking up the previous response#If there is no statements in the database, then the#ChatterBot should return close matches to an input#test_get_nltk_data_directories",135.75,
513513475,513513476,3755,4f6019e705a6f38926e19e732b956f17abd1d6f8,python,broken,1,python,unittest,true,false,9,4,13,9,,,,test_training_sets_search_in_response_to#test_training_sets_search_text#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,209.81,
513513479,513513480,3756,24f26a6b44cbda4b1abdd26d99088c99758999af,python,broken,0,python,unittest,true,false,8,5,13,9,,,,Tests if the bot returns the same response for the same#test_training_sets_search_in_response_to#test_training_sets_search_text#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,209.26,
513517446,513517447,3757,63cd74f5c69e56d3729e3a3931263a4717196288,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",172.01999999999998,
513517448,513517449,3758,5eab2492285329c9161d589930d9dc108a50d633,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",167.89,
513521789,513521790,3759,220382c3886cf1cc4fc15fffba6982d828da13c4,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",171.57999999999998,
513845006,513845007,3760,f7070b822ad62dc9182b327ad6d2d426a491b001,python,broken,1,python,unittest,true,true,75,8,83,9,,,,"Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Note, the content of the in_response_to field for each of the#test_different_punctuation#Note, the content of the in_response_to field for each of the",548.3900000000001,
513845968,513845969,3761,867c6d6b8164d876c71968a6d43b45307651ef44,python,broken,0,python,unittest,true,true,75,8,83,9,,,,"Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Note, the content of the in_response_to field for each of the#test_different_punctuation#Note, the content of the in_response_to field for each of the",531.02,
513909314,513909315,3762,3741b6632bee759bec0c3bac2b27ad80e5af2b1f,python,broken,1,python,unittest,true,true,75,8,83,9,,,,"Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Note, the content of the in_response_to field for each of the#test_different_punctuation#Note, the content of the in_response_to field for each of the",540.1,
513909319,513909320,3763,2e37b6e2b1bb0afe6d6ca8157a948c32fbec4571,python,broken,0,python,unittest,true,true,75,8,83,9,,,,"Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Note, the content of the in_response_to field for each of the#test_different_punctuation#Note, the content of the in_response_to field for each of the",541.65,
514484697,514484698,3764,220382c3886cf1cc4fc15fffba6982d828da13c4,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",169.31000000000003,
515924568,515924569,3765,ba24022f3886592df1ea227733053f05f95e3e66,python,unknown,4,python,"",false,,,,,,,,,"",,
515924703,515924704,3766,5f20febd96ea642095b77eb5ed7ef9913d41ab5a,python,unknown,4,python,"",false,,,,,,,,,"",,
515924773,515924774,3767,ef9cd393e8d5a4e161c5a3467b56cf97715cca14,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",168.19,
516561228,516561229,3768,845d83a9bb6503b195f0adca14c8d7a2b135fe2c,python,broken,1,python,unittest,true,true,78,5,83,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,531.95,
516561242,516561243,3769,bc3b10169450452a3a0e5ae583d4664cbdc77f15,python,broken,0,python,unittest,true,true,78,5,83,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,540.29,
516569048,516569049,3770,a9d7cb3010c623849d180999beeee39cc0ba8f62,python,broken,1,python,unittest,true,false,10,3,13,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,541.4,
516569054,516569055,3771,13103bb705377c20d7c067b95c02cd8a7e82069d,python,broken,0,python,unittest,true,false,10,3,13,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,530.6200000000001,
516595829,516595830,3772,6cf2627ccc7daa9c10f17fbc1fca949b1484226e,python,broken,1,python,unittest,true,false,10,3,13,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,575.04,
516595890,516595891,3773,73f028e10ac8b495df11e6c731ba17e952ad1584,python,broken,0,python,unittest,true,false,10,3,13,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,538.7900000000001,
516599985,516599986,3774,8e651cd81f8799bf26ad955cd54668f1eb0ea0c3,python,broken,1,python,unittest,true,false,10,3,13,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,575.6500000000001,
516599997,516599998,3775,b916ef9ea8ae2f1b4c4353285f9d67a829d8d08c,python,broken,0,python,unittest,true,false,10,3,13,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,539.6200000000001,
516610775,516610776,3776,ff4571852d4b30580642fa7ad617e3a587b9fbe3,python,broken,1,python,unittest,true,false,10,3,13,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,551.5300000000001,
516610794,516610795,3777,232c93887ac35d8d46b3a65ba4bb75d9002022a3,python,broken,0,python,unittest,true,false,10,3,13,9,,,,Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.,533.34,
516623542,516623543,3778,f99ec8d93c8294b3dc3b9db8cc264bb661546217,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",548.32,
516623579,516623580,3779,1df3f2ebf29310c55cebed129f4c975423d084f6,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",553.7600000000001,
516628128,516628129,3780,f002e396d456c0c81311cb7c6388a4995f2167e3,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",547.21,
516682485,516682486,3781,c22d5b228bdb2cff525982c4913e5d35e0a21ae0,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",542.61,
516683002,516683003,3782,50a530829950667fd5cd6897b23cbeeda81d5abf,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",529.6600000000001,
516687384,516687385,3783,21dfaf0c8e03421b6c14b6c7bcd13ef3eea4fd49,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",533.4100000000001,
516967708,516967709,3784,21dfaf0c8e03421b6c14b6c7bcd13ef3eea4fd49,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",561.9200000000001,
517352622,517352623,3785,c6a2a686bd0c9db7435807fc6bcc713a45aee96d,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",537.6500000000001,
518306871,518306872,3786,e0c7455e99c729799ca8887bda8da3b4b10f30ca,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",537.64,
518312132,518312133,3787,8129ff15354fe2fd6377e12aff36819afed13fa9,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",521.58,
518319739,518319740,3788,4580dfc31ee836dd4a985f5b07130e43de7aef20,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",500.8,
518320369,518320370,3789,4580dfc31ee836dd4a985f5b07130e43de7aef20,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",541.6600000000001,
519015972,519015973,3790,7d0755ff71747faca33a430f66dd88047b638fa6,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",540.97,
525195609,525195610,3791,11cc9cd42f365af2bf507d2a56fd50bd5e1f74bb,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",517.76,
525195870,525195871,3792,f7a6109ed7c7fdc17691bcc5bc032726e67d2535,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",167.24,
525195898,525195899,3793,bb9c1bec4e9daa8288d71e370983d0c4d94db278,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",166.23999999999998,
525198366,525198367,3794,a9d620ed09285fe4549ec31cea6b370e2c93e9ff,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",164.7,
525198383,525198384,3795,1a03dcb45cba7bdc24d3db5e750582e0cb1518e2,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",526.7,
527133408,527133409,3796,1a03dcb45cba7bdc24d3db5e750582e0cb1518e2,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",536.7900000000001,
532062736,532062737,3797,a3383159b7ddf84a6c5acfc6b0c536537f63c671,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",492.43,
533747930,533747931,3798,dd9b8b897c9f02b4dbdd2a8e3b24e40103e8d23e,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",547.6800000000001,
533748178,533748179,3799,a9058dbcbe08bb48c57d17efe388d06b6e859b88,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",534.11,
533754707,533754708,3800,ccd50f22d2c694e22fffd21975be42755bbf2504,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",543.19,
534032953,534032954,3801,abd974e668f62f3916fdd0607869be5d85207807,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",552.19,
534033275,534033276,3802,aa87984d1fed772e41ccaf648c056534fdb9adc2,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",561.5600000000002,
534039935,534039936,3803,79221d43df217fcdb35b3db5f74ac097ae710adb,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",553.49,
534040336,534040337,3804,79221d43df217fcdb35b3db5f74ac097ae710adb,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",551.1800000000001,
534047517,534047518,3805,c429fa50c5edf9198030880b9d9151de73a6dced,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",563.8500000000001,
534048872,534048873,3806,c429fa50c5edf9198030880b9d9151de73a6dced,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",531.2,
534644432,534644433,3807,75a96977212fdb8b2fd60e2ace95c8971e721426,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",544.4300000000001,
534647906,534647908,3808,0f0b0e9497567b1daa83f1c13351183a9c5cbc5c,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",537.6100000000001,
538757291,538757292,3809,165bee3e7094e1359dd2284d19c574c509980f17,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",532.63,
539088669,539088670,3810,15e3c05a1be72a34e917d6f9d01a9c5ea9cd927a,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",535.1300000000001,
539973091,539973092,3811,8f08e8be9128e519efef328aef3c75bebf810155,python,broken,0,python,unittest,true,false,12,1,13,9,,,,test_generate_export_data,572.5800000000002,
539982698,539982699,3812,0a2ca57d2d5a7aa4210dba3bb20cd4b1577ef445,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",545.84,
540276234,540276235,3813,c429fa50c5edf9198030880b9d9151de73a6dced,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",526.98,
540319460,540319461,3814,f2758372426715a68a86bdbf2f0d64881fac2771,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",546.22,
541098406,541098407,3815,25993f8117bd34777b171c032f6c7c6185a97027,python,broken,0,python,unittest,true,false,12,1,13,9,,,,test_search_text_contains_multiple_matches,515.5,
543448383,543448384,3816,b1c99a9ce340d306474102ef2869286ddb3d9a2c,python,broken,0,python,unittest,true,false,13,0,13,9,,,,"",537.7600000000001,
543451716,543451717,3817,567bcba51a0495d29d3ade07da6e9445b8b6dcff,python,broken,0,python,unittest,true,false,13,0,13,9,,,,"",514.2399999999999,
543453131,543453132,3818,e6d8724a9d94875a2387330aa054d8900b814225,python,broken,1,python,unittest,true,false,13,0,13,9,,,,"",535.3,
543454052,543454053,3819,d031dd83531dec11f257e7391a20901975ea6028,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",555.1500000000001,
543514968,543514969,3820,ee81df03eb53e6e36a4240e62235a4e548ef5c74,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",538.7300000000001,
546373320,546373321,3821,968e4a3914a8188f174fa4d66149280d6b96edab,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",537.9899999999999,
546879234,546879235,3822,64e5310d6d7eb8bad11696676d5a21a166d489ae,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",539.1300000000001,
546920233,546920234,3823,57ce7c9e57ee82d5fc87b71c7df3a0d9dd28807c,python,broken,0,python,unittest,true,false,11,2,13,9,,,,test_search_text_contains#test_search_text_contains_multiple_matches,559.4800000000001,
546936055,546936056,3824,7a1c9cb8148f7e55d368f7e68953dbc55b1aa5d5,python,broken,1,python,unittest,true,false,11,2,13,9,,,,test_search_text_contains#test_search_text_contains_multiple_matches,566.3300000000002,
546961985,546961986,3825,d80ee204c392207c09174ce859d1c8308c6debef,python,broken,0,python,unittest,true,false,11,2,13,9,,,,test_search_text_contains#test_search_text_contains_multiple_matches,552.2,
546969747,546969748,3826,0862a98f131d42a65156ad867f0ce4d99ce3da30,python,broken,1,python,unittest,true,false,11,2,13,9,,,,test_search_text_contains#test_search_text_contains_multiple_matches,536.3699999999999,
546994913,546994914,3827,d27cc6807825fb18bdb26779a77f07380d4153fd,python,broken,0,python,unittest,true,false,12,1,13,9,,,,test_search_text_contains_multiple_matches,553.71,
547366764,547366765,3828,c7f64a589e8d5061737e62eb0c69c65f2823a34e,python,broken,0,python,unittest,true,false,12,1,13,9,,,,test_search_text_contains_multiple_matches,531.3299999999999,
547399374,547399375,3829,3696c0cc1889a5acba41d84b6a7e8fb0b7db6c01,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",556.31,
547686749,547686750,3830,75e51f9669d7102cef0832923c36c05ab4191840,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",522.42,
547687515,547687516,3831,78d969e05a92fb1e204009de9890426f441e2b5f,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",566.8400000000001,
548037420,548037421,3832,9a96ab0ca979bc6c5cc9307156fa9656b7116122,python,broken,0,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,505.62,
548068910,548068911,3833,55e0a42c79cc2054221198ce6f98d67fa967bbc6,python,broken,0,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,532.6899999999999,
548132860,548132861,3834,71fbf0b5c04c92c4928b0a4c117ffc84d8cf4613,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",568.5600000000001,
548463354,548463355,3835,b0828cb42f22c8d3f104e0555a3dbf5d21853f74,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",538.18,
549108784,549108785,3836,d27765946487b31995c8feabdcc18a5181965875,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",565.2300000000001,
552333930,552333931,3837,73d095e51360b383cf8e13a2d7da97ac04cae63d,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",554.4599999999999,
553094785,553094786,3838,d27765946487b31995c8feabdcc18a5181965875,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",555.1900000000002,
559547746,559547748,3839,b90733dac19c9682f62a3d11c7dcffde1a63713b,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",547.1700000000001,
560227585,560227586,3840,31ea80d5fc01c9c9e045bc5db00f2085cf4800ca,python,broken,1,python,unittest,true,false,13,0,13,9,,,,"",553.0900000000001,
560755779,560755780,3841,d3d8a013d491300ce377765fa1f7c2275bb45975,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",519.85,
561803085,561803086,3842,23adfbcc3c733e09ca9266025b5d37095b62fd61,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",550.87,
564500752,564500753,3843,b484273cfefd0192c6b167f92d430c989263faab,python,broken,1,python,unittest,true,false,12,1,13,9,,,,test_captured_pattern_minutes_from_now,531.5600000000001,
566777763,566777764,3844,d3d8a013d491300ce377765fa1f7c2275bb45975,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",525.3299999999999,
567354545,567354546,3845,17315bccca3ab1f05c9dcf86a41454e222e2c682,python,ok,3,python,unittest,true,false,13,0,13,9,,,,"",539.42,
567355359,567355360,3846,0666bb596dfa14e66a914188e54d69e22a036338,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",538.5,
579616642,579616643,3847,0666bb596dfa14e66a914188e54d69e22a036338,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",533.6600000000001,
582142731,582142732,3848,6cefaf9bff6d7f08f000ef00d4c16d98add05d77,python,broken,1,python,unittest,true,true,-8,92,84,9,,,,"Test that an additional data attribute can be added to the statement#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Test that the ``clean_whitespace`` preprocessor is used during#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#Test that the process of looking up the previous response#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that repetitive responses are filtered out of the results.#Test that a response time is returned.",559.1600000000001,
582152479,582152480,3849,488f9308967d2b7feb68c0631e1dacd34e1cb0b1,python,broken,1,python,unittest,true,true,-8,92,84,9,,,,"Test that an additional data attribute can be added to the statement#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test consecutive trainings with the same responses to different inputs.#Tests if the bot returns the same response for the same#Test that the training method adds statements#Test that the ``clean_whitespace`` preprocessor is used during#Ensure that the training method adds statements containing emojis.#Test training with an 8-bit bytestring.#Ensure that the training method adds unicode statements#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#The response returned from the chatbot should be set to the name of the chatbot.#In the case that multiple adapters agree on a given#Test the case that a string contains ""corrupted"" text.#Test that a new statement is not learned if `read_only` is set to True.#Test the case that the input string contains an emoji.#Test the case that a non-whitespace C1 control string is passed in.#Test the case that a string containing two-byte characters is passed in.#Test the case that a unicode string is passed in.#Test that the process of looking up the previous response#If there is no statements in the database, then the#Test the case where a single statement is known, but#Test the case that one response is known and there is a response#If an input statement has tags added to it,#An input statement should be added to the recent response list.#Test the case that one response is known and there is a response#Test that repetitive responses are filtered out of the results.#Test that a response time is returned.",519.5699999999999,
582175838,582175839,3850,79ecd9c03678106bbd9cfd4704389471541237c2,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",514.6099999999999,
591934304,591934305,3851,9c02d4320e0a12e3175f21901447ae83f1e04d7b,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",503.9800000000001,
592368851,592368852,3852,0666bb596dfa14e66a914188e54d69e22a036338,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",498.13000000000005,
594650708,594650709,3853,f7f3681e577cf845d643d819d2feb94b18a8fe52,python,broken,1,python,unittest,true,false,13,0,13,9,,,,"",510.19,
599954154,599954155,3854,06e6a6d12d069f912c7af1eb5732fe29c54fa011,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",554.65,
605577721,605577722,3855,69766303684943b06cf1e8b6c314e27505ddb864,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",526.9999999999999,
606307836,606307837,3856,0666bb596dfa14e66a914188e54d69e22a036338,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",586.5200000000001,
617025939,617025940,3857,bf452697099d03938d707d1a5034085c91c58184,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",503.2,
619196332,619196333,3858,4a1670f759c5e98966a9e5b6d6aa83920a16d227,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",526.9499999999999,
619241683,619241684,3859,0c4e38877a8a43458ac925444bb11d08aa5976fe,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",532.1999999999999,
631737130,631737131,3860,0c4e38877a8a43458ac925444bb11d08aa5976fe,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",405.52,
639308715,639308716,3861,d5362c3f2ef294d8164e01ec43d4bec46bc93710,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",445.33,
644500044,644500045,3862,17ecbdc1d62c255b1838158c4bd5e3e6278712a0,python,broken,1,python,unittest,true,false,359,0,359,9,,,,"",377.73,
644958803,644958804,3863,0c4e38877a8a43458ac925444bb11d08aa5976fe,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",403.4,
652856986,652856987,3864,e412c5f611eee6edbf879f5cc9a80126d0a5bb60,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",426.55,
652856993,652856994,3865,0c4e38877a8a43458ac925444bb11d08aa5976fe,unknown,unknown,,plain,"",false,,,,,,,,,"",,
652856997,652856998,3866,9c996417289551da229f54bc4b06dae8b23549da,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",419.78999999999996,
654571674,654571675,3867,075165c475f79b91384ae9b0b514f12b6b78ef91,python,broken,0,python,unittest,true,false,13,0,13,9,,,,"",461.88,
657121992,657121993,3868,0c4e38877a8a43458ac925444bb11d08aa5976fe,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",459.69000000000005,
664730956,664730957,3869,38f34054e9aa3333444f518b7dcb5f865763a0bc,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",455.92,
664730958,664730961,3870,30a9e930e25f16df8b85ca37dcecf258cd9d9279,unknown,unknown,,plain,"",false,,,,,,,,,"",,
664730962,664730963,3871,0c4e38877a8a43458ac925444bb11d08aa5976fe,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",442.1000000000001,
665706460,665706461,3872,76b4ec1e47854f3f7b8317724d35628eaa771122,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",432.03,
665706765,665706766,3873,651dd3a8faeb205342bb1129592cf8eb8447111f,python,unknown,4,python,"",false,,,,,,,,,"",,
669978696,669978697,3874,0c4e38877a8a43458ac925444bb11d08aa5976fe,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",406.53999999999996,
680302817,680302818,3875,e7f3366276a3962c5b929068028be82e9762399a,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",457.74000000000007,
680303506,680303507,3876,e6a7235745b998a6078ddc16b2fe394a9c33d2a4,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",425.8399999999999,
680305968,680305969,3877,7613daf9b49bee32e46fce84e9cd661f64896e4c,python,broken,1,python,unittest,true,false,13,0,13,9,,,,"",395.97,
680306403,680306404,3878,7613daf9b49bee32e46fce84e9cd661f64896e4c,python,broken,1,python,unittest,true,false,13,0,13,9,,,,"",412.77,
680307949,680307950,3879,1bb7ebd89de03f27d3e7e1d7acd8f7235e130e1a,python,broken,1,python,unittest,true,true,2,82,84,9,,,,"Test that the logic adapter cannot return a response containing#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#A response to the input should be returned if a response is known.#The response to the input should be returned if a response is known.#The input should be returned as the closest match if there#If there is no data to return, an exception should be raised.#Test that a close match is found when the text_search algorithm is used.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds unicode statements#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test sentences with different stopwords.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#test_tagging_long_words",170.89,
680308458,680308459,3880,f25456b0f41dd81feea2208201ab9a8e0eccafc7,python,broken,0,python,unittest,true,true,2,82,84,9,,,,"Test that the logic adapter cannot return a response containing#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#A response to the input should be returned if a response is known.#The response to the input should be returned if a response is known.#The input should be returned as the closest match if there#If there is no data to return, an exception should be raised.#Test that a close match is found when the text_search algorithm is used.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds unicode statements#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test sentences with different stopwords.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#test_tagging_long_words",172.53,
680316348,680316349,3881,cc18368362659c3956e96b84faaa362d21d8d7d9,python,broken,1,python,unittest,true,true,2,82,84,9,,,,"Test that the logic adapter cannot return a response containing#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#A response to the input should be returned if a response is known.#The response to the input should be returned if a response is known.#The input should be returned as the closest match if there#If there is no data to return, an exception should be raised.#Test that a close match is found when the text_search algorithm is used.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds unicode statements#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test sentences with different stopwords.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#test_tagging_long_words",165.5,
680316354,680316355,3882,9fd0eab9391a05ae53fdeb355660de26a5329a43,python,broken,0,python,unittest,true,true,2,82,84,9,,,,"Test that the logic adapter cannot return a response containing#Test the case that a high confidence response is not known.#Test the case that a high confidence response is not known.#A response to the input should be returned if a response is known.#The response to the input should be returned if a response is known.#The input should be returned as the closest match if there#If there is no data to return, an exception should be raised.#Test that a close match is found when the text_search algorithm is used.#Test that a matching response is returned#If empty input is provided, anything may be returned.#Make sure that the if the last line in a file#Test that the database maintains a valid format#Tests if the bot returns the same response for the same#Test that the training method adds statements#Ensure that the training method adds unicode statements#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test that the chat bot is trained using data from the Ubuntu Corpus.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test response time after training with the ChatterBot corpus.#Test the levenshtein distance comparison algorithm.#Test the spacy similarity comparison algorithm.#Test sentences with different stopwords.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#An empty list should be returned when the generator is#An exception should be raised if there is no data to return.#Note, the content of the in_response_to field for each of the#Note, the content of the in_response_to field for each of the#test_tagging_long_words",171.98,
680319028,680319029,3883,f7a4ba1cf4134c20c1816752f3a3e993b44c705c,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",446.66,
680319041,680319042,3884,97a9c93ac59832f904602a7edc7dd748ccd5ff38,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",413.93999999999994,
680323281,680323282,3885,1b4b51566bc89413efd7d6506bc84be4f5655274,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",448.51000000000005,
680814348,680814349,3886,4c9d56178a43b68aeb0417b61d1596db12136b7f,python,broken,1,python,unittest,true,true,82,2,84,0,,,,test_search_text_contains_results_after_training,109.93,
680814723,680814724,3887,eed2a0602a162735dce9596de8f1412f654210ac,python,unknown,1,python,"",false,,,,,,,,,"",,
680816781,680816782,3888,3f97001a24783f9a2cf165e633560df7697f581f,python,broken,1,python,unittest,true,false,13,0,13,0,,,,"",112.91,
680816783,680816784,3889,a0f96b452f2a8ee7f5dbda5b02e5ff1cc17c23c3,python,unknown,1,python,"",false,,,,,,,,,"",,
680819597,680819598,3890,407b4371efe246cb7298f8b73a50ca315d330e46,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",443.7000000000001,
680819751,680819752,3891,42d1ba9acc1e00add4c68026ae3f5455e054a830,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",427.39000000000004,
680936926,680936927,3892,8cd8f5f2f54e3ca461e133b6ea41fc2c6ede509c,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",446.17999999999995,
680938025,680938026,3893,0f0a0dce80b338d9b907c0febba1dba219af8fd6,python,unknown,1,python,"",false,,,,,,,,,"",,
680938042,680938043,3894,2f6cdbb62fc36aadbc1da845fcf4db02a49b478e,python,unknown,0,python,"",false,,,,,,,,,"",,
682104382,682104383,3895,d95a08d5b29fe10711195970afae9e184d975831,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",480.29,
682107023,682107024,3896,1a03dcb45cba7bdc24d3db5e750582e0cb1518e2,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,394.49,
682107360,682107361,3897,1a03dcb45cba7bdc24d3db5e750582e0cb1518e2,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,436.8400000000001,
682107858,682107859,3898,d95a08d5b29fe10711195970afae9e184d975831,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",451.7800000000001,
682111823,682111824,3899,d95a08d5b29fe10711195970afae9e184d975831,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",493.65000000000003,
682112658,682112659,3900,a18ffa1e9588a1de4566a5582250989891668b03,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",409.6,
682113112,682113113,3901,b5bf32a10bb68a0ffca566f429ff0261c9bb65eb,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",409.74,
682113234,682113235,3902,b5bf32a10bb68a0ffca566f429ff0261c9bb65eb,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",455.41,
689076114,689076115,3903,f37795b20135dbe1f362ed27ae6d64b2945d2fc7,python,broken,0,python,unittest,true,true,6,46,52,6,,,,Test if we can get the agent to contradict themselves.#The math questions inherently suggest that the agent#Test if we can detect any repeat responses from the agent.#Test what the responses are like if we keep giving the same input.#Does the agent respond in a realistic amount of time?,0.22,
689078116,689078117,3904,27b31275b8897751e5dfc6aea77960a9ebd8ee8d,python,broken,1,python,unittest,true,false,12,1,13,9,,,,test_tagging_german,377.40999999999997,
689078210,689078211,3905,84293fa98f7e10b2b1ed0ba459cc007c37a0903f,python,broken,0,python,unittest,true,false,12,1,13,9,,,,test_tagging_german,357.47999999999996,
689091939,689091940,3906,dbb2065df2886e5757019f1946449f6c8be2515e,python,broken,1,python,unittest,true,false,12,1,13,9,,,,test_tagging_german,349.09,
689112718,689112719,3907,6e59fc3e1c7ed574176b35cdf8e0298fded0d5fd,python,broken,1,python,unittest,true,false,12,1,13,9,,,,test_tagging_german,384.43,
693700785,693700788,3908,b5bf32a10bb68a0ffca566f429ff0261c9bb65eb,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",456.89000000000004,
697942434,697942435,3909,6a8e62f9010b0d161a3cfa7215e16a0017c5682e,unknown,unknown,,plain,"",false,,,,,,,,,"",,
697942454,697942455,3910,8b3f0a22ecd2e255c34ec84441709f97ea18fb2d,python,broken,2,python,unittest,true,false,13,0,13,9,,,,"",415.66999999999996,
699896887,699896888,3911,d1c6f6cea489e36f225a5a3e379cb4b5272d9f7b,python,broken,1,python,"",false,,,,,,,,,"",,
699896889,699896890,3912,f30f22fed7254836da1eaad9115c3fe579a898f1,python,broken,1,python,"",false,,,,,,,,,"",,
701433261,701433267,3913,5a4460841fc649799fd8e651b2e651f7d1f8073e,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",489.41,
704181636,704181637,3914,b5bf32a10bb68a0ffca566f429ff0261c9bb65eb,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",414.2699999999999,
705816531,705816533,3915,0a9955684a8ecb91e628ef1c264822cc887875a2,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",440.08000000000004,
714140665,714140666,3916,b5bf32a10bb68a0ffca566f429ff0261c9bb65eb,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",405.7,
718339295,718339296,3917,4196c06bb3c8bf61cbe98d042d0f44d6c9127f8a,python,broken,1,python,unittest,true,true,66,18,84,9,,,,test_addition_operator#test_division_operator#test_e_constant#test_exponent_operator#test_large_word_division_operator#test_log_function#test_multiplication_operator#test_negative_decimal_multiplication#test_negative_multiplication#test_parenthesized_multiplication_and_addition#test_parenthesized_with_words#test_pi_constant#test_square_root_function#test_subtraction_operator#test_word_division_operator#test_word_numbers_addition,461.15,
718339328,718339329,3918,c939796cbdcd6414481e5b60513925a24a15b225,python,broken,0,python,unittest,true,true,66,18,84,9,,,,test_addition_operator#test_division_operator#test_e_constant#test_exponent_operator#test_large_word_division_operator#test_log_function#test_multiplication_operator#test_negative_decimal_multiplication#test_negative_multiplication#test_parenthesized_multiplication_and_addition#test_parenthesized_with_words#test_pi_constant#test_square_root_function#test_subtraction_operator#test_word_division_operator#test_word_numbers_addition,436.85,
718340024,718340025,3919,1a03dcb45cba7bdc24d3db5e750582e0cb1518e2,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,439.56000000000006,
718341453,718341454,3920,1a3aa98d6c491240986a34cb0cdeae66dd252e1d,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",433.92,
718341472,718341473,3921,ac55e7876fda5da433f7e37c2e02ad4aabac21aa,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",465.48,
718341853,718341854,3922,1c5073b228f28a5ec38c1cf8bb34e1de00991db9,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,443.68000000000006,
718342144,718342145,3923,13fa6922e6ce6d47ea699170525ff423c5a2992b,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,393.82,
718342207,718342208,3924,384077104e212dda211225b9c713badaed1e2b23,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",468.73,
718342978,718342979,3925,3546cbb2c6fd7282b0a1821f78adb6a7c6d20d73,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",432.45,
718343195,718343196,3926,5b4748a1d24c0274c318f76d35820ad6e315c98b,python,broken,1,python,"",false,,,,,,,,,"",,
718343197,718343198,3927,db4916f7aa73f315ace1ae018ad458eeef5a2556,python,broken,0,python,"",false,,,,,,,,,"",,
718373668,718373669,3928,83afb6d1420d27f0b87e361ecabdf94734d4b1d8,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,447.70000000000005,
718375558,718375559,3929,ff9ca415667897e2244ee037cdfc1e94071fab83,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,413.84999999999997,
718375558,718375560,3929,ff9ca415667897e2244ee037cdfc1e94071fab83,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,428.11,
719546155,719546156,3930,ff9ca415667897e2244ee037cdfc1e94071fab83,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,426.55,
719546155,719546157,3930,ff9ca415667897e2244ee037cdfc1e94071fab83,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,428.39,
719724623,719724624,3931,9577906efc123845b1cfaff9f1834e8c18309b95,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",441.06000000000006,
719735160,719735161,3932,4f88c4f299612e6f147f7d4db132df090abafbfd,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",475.26000000000005,
719738319,719738320,3933,a7d78a4f467f7812d67fb0861eabf9099a5bc046,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",461.7700000000001,
719746600,719746601,3934,6fdb1446b95fae0188e3ee0bf1d1b001df8428d2,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",455.3500000000001,
719748075,719748076,3935,8be3298a99ab394f450f247f4876c96834180e86,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",437.0,
719752472,719752473,3936,d911b4ac46e122308a759ea6ec67b666136e3026,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",442.77000000000004,
720246587,720246588,3937,fed8b42cbe01e71b79e75695de2349cc12c85819,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,440.66,
720246587,720246589,3937,fed8b42cbe01e71b79e75695de2349cc12c85819,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,428.52000000000004,
720248568,720248569,3938,858ede38808b84e9085c6077eeb9be1b1f871340,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,432.77,
720248568,720248570,3938,858ede38808b84e9085c6077eeb9be1b1f871340,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,423.98999999999995,
720251830,720251831,3939,181c69f2a44c2da88f9352d9c693773b09beb1f5,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,458.2300000000001,
720251830,720251832,3939,181c69f2a44c2da88f9352d9c693773b09beb1f5,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,453.92,
720252131,720252132,3940,181c69f2a44c2da88f9352d9c693773b09beb1f5,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,407.79,
720252131,720252133,3940,181c69f2a44c2da88f9352d9c693773b09beb1f5,python,broken,1,python,unittest,true,false,12,1,13,9,,,,Test response time after training with the ChatterBot corpus.,422.5,
723317995,723317997,3941,d911b4ac46e122308a759ea6ec67b666136e3026,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",452.18,
732144219,732144221,3942,d911b4ac46e122308a759ea6ec67b666136e3026,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",438.72999999999996,
740734358,740734360,3943,d911b4ac46e122308a759ea6ec67b666136e3026,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",426.18999999999994,
745215663,745215664,3944,aaec163c9176e07462110a39628e4b3d942d6345,python,broken,0,python,unittest,true,true,66,18,84,9,,,,"If an input statement has tags added to it,#test_tag_values_persisted_to_response",409.03000000000003,
747123769,747123774,3945,d911b4ac46e122308a759ea6ec67b666136e3026,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",441.04,
747523962,747523963,3946,6d034e5296bee95101d610c242326df1a062f9d4,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",403.53,
751237213,751237214,3947,b14d10e7600ff92bd2718cc992d09f5df97e4b30,python,broken,0,python,unittest,true,false,13,0,13,9,,,,"",411.15,
751258725,751258726,3948,455884324e702d97f5731fb5535dc53e93268d5f,python,broken,1,python,unittest,true,false,12,1,13,9,,,,"",468.07000000000005,
751875086,751875087,3949,33a661b9ac600b8af392c70051bdde2dbf1f9794,python,broken,0,python,unittest,true,false,13,0,13,9,,,,"",440.16,
752350214,752350215,3950,1ba904679936d6b8ecd93433f8f2506c22605c8d,python,broken,1,python,unittest,true,false,10,3,13,9,,,,Test that a close match is found when the text_search algorithm is used.,397.40000000000003,
752350288,752350289,3951,627e8685b53d5b969b1e4caf16c78045fa079a6c,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",446.1699999999999,
752350489,752350490,3952,7d38c9c569923ddb98a41b3ffe4129c8b533b2bb,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",469.42999999999995,
752488012,752488015,3953,d911b4ac46e122308a759ea6ec67b666136e3026,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",404.46999999999997,
752596289,752596290,3954,1c33fe4d0fd83d647d10a1a58840a73d99b0f88e,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",422.53,
757094636,757094637,3955,8f0b2730d6ba256e8ebcf73665f9d9102f44e2cd,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",399.77000000000004,
757099059,757099060,3956,c6735c0117f18a58d70edade7c0a8eb548587bbc,python,broken,0,python,unittest,true,false,13,0,13,9,,,,"",474.37,
757114093,757114094,3957,d0054afbf8275f4dc637ed904a5ffa5db43e6f33,python,ok,0,python,unittest,true,false,13,0,13,9,,,,"",397.78999999999996,
757183492,757183497,3958,d911b4ac46e122308a759ea6ec67b666136e3026,python,ok,1,python,unittest,true,false,13,0,13,9,,,,"",433.19999999999993,
757325397,757325398,3959,e3a2948aa29c1ef7e228aa4827cad25e8b929f9e,python,broken,2,python,unittest,true,false,13,0,13,9,,,,"",451.73,
758456625,758456626,3960,fcd1d1a1be92ebf3ea2114f1224a4f7dc5f51061,python,broken,1,python,"",false,,,,,,,,,"",,
758456627,758456628,3961,c02f4827ce734a5f1850b333b208195eb042acbf,python,broken,0,python,"",false,,,,,,,,,"",,
759089555,759089556,3962,f6becf206cc91db5b258e7b3d1bb506372c57711,python,broken,0,python,"",false,,,,,,,,,"",,
759956666,759956667,3963,26b8d33e21ce041c46c0192a42e9cf8907b1c081,python,broken,0,python,"",false,,,,,,,,,"",,
759973490,759973491,3964,1c0dce7f672a3d0367bee84f6014d572264bd929,python,broken,0,python,"",false,,,,,,,,,"",,
759974773,759974774,3965,d99c6c52d58ec5a0744d354927cab492d6637a46,python,broken,0,python,"",false,,,,,,,,,"",,
760017893,760017894,3966,19b0f0da3e5b022e603e89e24bc146286ee6ae8d,python,broken,1,python,"",false,,,,,,,,,"",,
761067051,761067052,3967,d911b4ac46e122308a759ea6ec67b666136e3026,python,broken,1,python,"",false,,,,,,,,,"",,
