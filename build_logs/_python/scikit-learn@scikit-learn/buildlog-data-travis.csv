tr_build_id,tr_job_id,tr_build_number,tr_original_commit,tr_log_lan,tr_log_status,tr_log_setup_time,tr_log_analyzer,tr_log_frameworks,tr_log_bool_tests_ran,tr_log_bool_tests_failed,tr_log_num_tests_ok,tr_log_num_tests_failed,tr_log_num_tests_run,tr_log_num_tests_skipped,tr_log_num_test_suites_run,tr_log_num_test_suites_ok,tr_log_num_test_suites_failed,tr_log_tests_failed,tr_log_testduration,tr_log_buildduration
654946346,654946347,42949,4c29be44facbdaef188f84bdc8bf1190b2eebe07,python,ok,2,python,pytest,true,false,44,0,44,3,,,,"",35.33,
655014925,655014926,42950,adc8b7b6a4c37e181d57f5172687a3dedee41888,python,ok,17,python,pytest,true,false,45,0,45,2,,,,"",51.7,
655017806,655017807,42951,1a17d8cbbde3882eb88d39c9f3c89c41d1d99cfa,python,ok,16,python,pytest,true,false,45,0,45,2,,,,"",46.22,
655024749,655024750,42952,46dcb3d3aab23dd2a6bd2207f922a85b701ca1e0,python,ok,16,python,pytest,true,false,45,0,45,2,,,,"",46.22,
655400095,655400096,42953,54cbf428a963dde20b12b54e97d849775b8eb991,python,ok,3,python,pytest,true,false,44,0,44,3,,,,"",35.47,
655780404,655780405,42954,9e22d770b50c0f589b78507df4587470827824a9,python,unknown,16,python,"",false,,,,,,,,,"",,
655782484,655782485,42955,f77246331e6f1e42ebb614e2a9eb1602f298a6b2,python,ok,18,python,pytest,true,false,45,0,45,2,,,,"",48.18,
655839620,655839621,42956,496e7106fa8fff9e955620ec8b3b74d1bba59453,python,ok,2,python,pytest,true,false,44,0,44,3,,,,"",34.3,
656303421,656303422,42957,5009d113474b163d409822a5cac036b448a9dc3d,python,ok,2,python,pytest,true,false,44,0,44,3,,,,"",34.09,
656345030,656345031,42958,9ab4316fc9fed20563ad58b98c96807ec47b4d7e,generic,unknown,3,plain,"",false,,,,,,,,,"",,
656345030,656345032,42958,9ab4316fc9fed20563ad58b98c96807ec47b4d7e,python,unknown,3,python,"",false,,,,,,,,,"",,
656345030,656345033,42958,9ab4316fc9fed20563ad58b98c96807ec47b4d7e,python,unknown,2,python,"",false,,,,,,,,,"",,
656345030,656345034,42958,9ab4316fc9fed20563ad58b98c96807ec47b4d7e,python,unknown,2,python,"",false,,,,,,,,,"",,
656678825,656678827,42959,d205638475ca542dc46862652e3bb0be663a8eac,python,ok,2,python,pytest,true,false,44,0,44,3,,,,"",34.66,
656846312,656846313,42960,7d8b2b9363aa62bd673d8b79e630e4cb62861fe2,python,ok,1,python,pytest,true,false,44,0,44,3,,,,"",33.26,
656955288,656955290,42961,8868ec775ef734f87a275b6aceaaf3cead913e36,python,ok,2,python,pytest,true,false,44,0,44,3,,,,"",33.99,
656971930,656971931,42962,d501ca30d7f15e66612b8be12990dd8f9fd511be,python,ok,16,python,pytest,true,false,45,0,45,2,,,,"",47.78,
657111100,657111101,42963,5886bbd7ee445fbba7b06e2a390f4d7673658f2e,python,ok,16,python,pytest,true,false,45,0,45,2,,,,"",46.26,
657181486,657181487,42964,bc44bd8d70fa8d762eabc95ec4ac5ab3b9a445de,python,ok,18,python,pytest,true,false,45,0,45,2,,,,"",49.05,
657343274,657343275,42965,76ef4e11b5f85bd9c475ab9009bd7a95a4540bc4,python,ok,2,python,pytest,true,false,45,0,45,2,,,,"",46.49,
657799827,657799828,42966,e6e5811809919cd7da1b9f97cb31097271a79dcd,python,ok,2,python,pytest,true,false,45,0,45,2,,,,"",44.96,
657897084,657897085,42967,dc48a16636e0d100e674edbdd258d878a29f59ab,python,ok,1,python,pytest,true,false,45,0,45,2,,,,"",51.83,
658265280,658265281,42968,69ea066412abc0c4a4c59c03e532ffe26b96c9c1,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",47.74,
658736580,658736585,42969,df338cddc8094bdb226c7ec4cd4233ac5cffa806,python,ok,2,python,pytest,true,false,45,0,45,2,,,,"",47.28,
659207748,659207750,42970,83ec08bfbf27b9bc4340d7a159e5507e6abc2282,python,ok,2,python,pytest,true,false,45,0,45,2,,,,"",46.69,
659554953,659554954,42971,f1acf834685f8bcd1bcdd903e9c40b7515fe0a67,python,ok,2,python,pytest,true,false,45,0,45,2,,,,"",44.62,
659829790,659829791,42972,f1acf834685f8bcd1bcdd903e9c40b7515fe0a67,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
660200947,660200948,42973,018c6dc57d21c89c7d1278c686c7d5d62f32ee48,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
660675728,660675733,42974,535ef5516bce75c6a51127da95dcb577af1fe35e,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
661132848,661132850,42975,862a726ca98c4bc30019cd88a1e802bbc49cbfe7,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
661576137,661576139,42976,1cbe59ee06c08ed87fbaf2fba43785e001d3fe69,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
662011025,662011026,42977,73813ea180f57d02f24225163dab7f70e5444440,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
662424634,662424635,42978,73813ea180f57d02f24225163dab7f70e5444440,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
662735110,662735111,42979,73813ea180f57d02f24225163dab7f70e5444440,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
663115708,663115711,42980,b853653234b6b0c15b2d2501db2e72041005f813,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
663555300,663555307,42981,b853653234b6b0c15b2d2501db2e72041005f813,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
663998632,663998633,42982,a203b9e1c6e0ec4f09aaddb4af5010592ea266a3,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
664443536,664443537,42983,b9692a6becca64daeac28c6156e847f2989ce45e,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
664896023,664896025,42984,75d3f29e724c9a2db7bcb5afb2d7e8c08ddbd80b,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
665214437,665214438,42985,4346c82ca49f3bedaca7bdd3fc81d05079f6453d,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
665524207,665524208,42986,913da3f286649af6378204d824827bfc4681fe20,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
665924432,665924434,42987,dcfb3df9a3df5aa2a608248316d537cd6b3643ee,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
666390152,666390153,42988,942001a12d133bb78558a79bc2db211636d90810,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
666843964,666843965,42989,c5d1d45ab1786b2b309fb2ab2b58c448084e3a45,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
667311378,667311379,42990,e5a1ba0fdee881d15f82c2c83d28a70e22238f36,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
667761307,667761308,42991,fa1ea2ab6f16bcd3ec46dd3c5220c36b6d249e2a,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
668101341,668101342,42992,a84ba0c0b8b4948a5571ce1a815102c43d35cdd1,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
668400812,668400813,42993,ada94ae8bc12af1667f29a12b6f2d2f84d4bbc04,python,unknown,2,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
668820862,668820864,42994,5a4340834d23c4bdcd813ccda24a690ae174c168,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
669302211,669302218,42995,44c44a5742f39c4002f6bc5d8722bb5035496fbc,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
669758499,669758500,42996,a5dfba94ff34b27848a1094c01c6f6a3dbdf1dae,python,unknown,3,python,"",false,,,,,,,,,test_stacking_with_sample_weight[StackingClassifier],,
670201472,670201473,42997,557218c021d58c7455b26820f331a9c388c9cb4d,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
670629634,670629639,42998,2d25ea74fe89c8ad5611d801628a75912cf2923d,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
670976317,670976320,42999,2d25ea74fe89c8ad5611d801628a75912cf2923d,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
671291114,671291115,43000,b568f203ede7869ecbc6b1a3f7ec5b35868c96d1,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
671704784,671704794,43001,eaf0a044fdc084ebeeb9bbfbcf42e6df2b1491bb,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
672145591,672145593,43002,eaf0a044fdc084ebeeb9bbfbcf42e6df2b1491bb,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
672579336,672579337,43003,a655de515e24515fff0007100dc9d49b5126b223,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
673047339,673047340,43004,f45c0c05197c147e2af8a449ec061583fedbf22b,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
673476625,673476626,43005,fe1ec1c11ec6ff371381f470337b732257302277,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
673814064,673814065,43006,0a93fc9691574fb73cc71109cc1a8f0c3b166062,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
674097357,674097362,43007,8122e77bee8414c787f4bcd730673d2c0e137d06,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
674469822,674469823,43008,8122e77bee8414c787f4bcd730673d2c0e137d06,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
674916259,674916260,43009,bd9fd0f1a9a222c58bbf8aba45025d42c598a31e,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
675364581,675364582,43010,02eac6c60cea6313b3810e80a0e8eccbf86fa137,python,unknown,1,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-lbfgs],,
675366771,675366772,43011,5e2d74bc5f61b382758c0403c577253539e77156,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
675812460,675812461,43012,9358a6ee8f93511fd615d3264fa7ee9de0f21b93,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
676282547,676282552,43013,7a77214c3cf2240b43873c62f11a36a85ebe36a6,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs],,
676620461,676620464,43014,5abd22f58f152a0a899f33bb22609cc085fbfdec,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
676921369,676921372,43015,670b85c9e9cec05210e8596bc1fb9ca66787162f,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
677313947,677313948,43016,6973096a0f0a2d1eb6c5d3cadd55a89276368311,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_fetch#test_fetch_asframe#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
678233330,678233332,43017,388999b59d0070fafdcd76cf599af6758b25d987,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
678659648,678659652,43018,a93b15f19bf7db8027e04705603161c336fb1454,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
679097528,679097538,43019,2587a033808506cd1e46b0cba18fae5ae829f4ab,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
679442240,679442251,43020,be134a298f9c56af665d0575ebaae81eefef818b,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
679755183,679755184,43021,4755ae76d2df10bbf41bc93fb7083b0142ef1044,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
680171718,680171720,43022,91e942759fd7e16554cb5dc80918dce1f810b7f4,python,unknown,3,python,"",false,,,,,,,,,"",,
680632816,680632819,43023,9f015c8a14a67d248599dc376d33ec612dd9dbb9,python,unknown,3,python,"",false,,,,,,,,,"",,
681080752,681080755,43024,b9403f62ac65e7e6575168ef74b43fb012010599,python,unknown,3,python,"",false,,,,,,,,,"",,
681563564,681563565,43025,3a6c8c4b6ce17b84b01d47b66ead1797c04931bc,python,unknown,3,python,"",false,,,,,,,,,"",,
682007471,682007472,43026,863c1d683f888931f96d968faaf5b60c9c821723,python,unknown,3,python,"",false,,,,,,,,,"",,
682333134,682333135,43027,04d2e3290f47ee7ee86767ae534629cd4112ffbf,python,unknown,2,python,"",false,,,,,,,,,"",,
682626946,682626947,43028,5756205920ae072f1f3f3868e4132a85a374a38e,python,unknown,2,python,"",false,,,,,,,,,"",,
682997389,682997391,43029,4fae53964b00ece9b32c85298289514d6d646b93,python,unknown,3,python,"",false,,,,,,,,,"",,
683451056,683451057,43030,f72d9711f5242cd73f91551b75399dcfb88a5861,python,unknown,3,python,"",false,,,,,,,,,"",,
683900395,683900400,43031,226e5c478db07495b3ba4f4640e21f11c55f2444,python,unknown,3,python,"",false,,,,,,,,,"",,
684335700,684335701,43032,89fcef7ad2b5d8b2fec39cacfe3b10c5db613f43,python,unknown,3,python,"",false,,,,,,,,,"",,
684745634,684745635,43033,92ed38598f543c94bdbb9103862bc696cae01b13,python,unknown,3,python,"",false,,,,,,,,,"",,
685085197,685085198,43034,c36c1047fe8046d74554e71102425332941baa09,python,unknown,2,python,"",false,,,,,,,,,"",,
685353313,685353317,43035,818e16a1eacace8e54308d38e6a2a302366f051f,python,unknown,2,python,"",false,,,,,,,,,"",,
685727877,685727878,43036,4f5384b249c488ada8dd012bdc029600ac912917,python,unknown,3,python,"",false,,,,,,,,,"",,
686183210,686183215,43037,d1f8a16ef803147b734a03886c8972923122deb3,python,unknown,3,python,"",false,,,,,,,,,"",,
686643212,686643213,43038,ccf5c36503785a0330f460a9ae751ac973980443,python,unknown,3,python,"",false,,,,,,,,,"",,
687083192,687083193,43039,8abe0a822ea4fb35f705518fcd293e7d3eef835e,python,unknown,3,python,"",false,,,,,,,,,"",,
687505456,687505457,43040,90d00daa76d1c6848a60554c7eba15f1e351ed46,python,unknown,3,python,"",false,,,,,,,,,"",,
687819441,687819442,43041,d03dfa2778f9614aea896197ca404fb42851ee94,python,unknown,3,python,"",false,,,,,,,,,"",,
688082634,688082636,43042,a49752375d5775b1f0e6393a811c937332dccb18,python,unknown,3,python,"",false,,,,,,,,,"",,
688450285,688450289,43043,29f83f83f2b9bf236996fa50e54d34c77a9e08e3,python,unknown,2,python,"",false,,,,,,,,,"",,
688887191,688887193,43044,2d12bb57506d72a110eaedcf65783fd49a045854,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_percent10#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_linear_models_cv_fit_for_all_backends[ElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[LassoCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskLassoCV-loky]#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
689311782,689311783,43045,0deaa3b4e1349ddb00fcfea293a85948c3622b0f,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_percent10#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_none[None]#test_set_estimator_none[drop]#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[None-X0-y0-voter0]#test_none_estimator_with_weights[drop-X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_linear_models_cv_fit_for_all_backends[ElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[LassoCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskLassoCV-loky]#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial,,
689704913,689704919,43046,2f26540ee99cb4519d7471933359913c7be36ac9,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_percent10#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_linear_models_cv_fit_for_all_backends[ElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[LassoCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskLassoCV-loky]#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
690097887,690097888,43047,a1cc566605e61bcac5cd9d9f676ca430b5f90a1d,python,unknown,3,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_percent10#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_linear_models_cv_fit_for_all_backends[ElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[LassoCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskLassoCV-loky]#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
690402516,690402517,43048,fc474d68b2337dc6ca209573378cf0183e66f730,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_percent10#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_linear_models_cv_fit_for_all_backends[ElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[LassoCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskLassoCV-loky]#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
690653469,690653470,43049,d5de89428499536c62bee864324c44c438f773cd,python,unknown,2,python,"",false,,,,,,,,,test_20news_vectorized#test_20news_normalization#test_fetch#test_fetch_asframe#test_pandas_dependency_message#test_fetch#test_percent10#test_olivetti_faces#test_fetch_rcv1#test_dict_learning_lassocd_readonly_data#test_sparse_coder_parallel_mmap#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_feature_importance_regression#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_check_estimators_stacking_estimator[StackingRegressor]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingRegressor]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#test_permutation_importance_large_memmaped_data[array]#test_permutation_importance_large_memmaped_data[dataframe]#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_lasso_readonly_data#test_multi_task_lasso_readonly_data#test_linear_models_cv_fit_for_all_backends[ElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskElasticNetCV-loky]#test_linear_models_cv_fit_for_all_backends[LassoCV-loky]#test_linear_models_cv_fit_for_all_backends[MultiTaskLassoCV-loky]#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_lars_path_readonly_data#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial,,
691002071,691002073,43050,0c84afa5446cd606914a06089950014983d48a57,python,unknown,3,python,"",false,,,,,,,,,test_percent10#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-lbfgs]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegression]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegressionCV]#test_penalty_none[lbfgs]#test_sag_pobj_matches_logistic_regression#test_thresholded_scorers#test_multiclass_roc_proba_scorer[roc_auc_ovr-metric0]#test_multiclass_roc_proba_scorer[roc_auc_ovo-metric1]#test_multiclass_roc_proba_scorer[roc_auc_ovr_weighted-metric2]#test_multiclass_roc_proba_scorer[roc_auc_ovo_weighted-metric3]#test_multiclass_roc_proba_scorer_label#[doctest] sklearn.neighbors._nca.NeighborhoodComponentsAnalysis#test_simple_example#test_toy_example_collapse_points#test_transformation_dimensions#test_n_components#test_init_transformation#test_auto_init[3-5-3-7]#test_auto_init[3-5-3-11]#test_auto_init[3-5-5-7]#test_auto_init[3-5-5-11]#test_auto_init[3-5-7-7]#test_auto_init[3-5-7-11]#test_auto_init[3-5-11-7]#test_auto_init[3-5-11-11]#test_auto_init[3-7-3-11]#test_auto_init[3-7-5-11]#test_auto_init[3-7-7-11],,
691380259,691380262,43051,6b68144f179b9a56e05ae401da7527bc5da97f21,python,unknown,3,python,"",false,,,,,,,,,test_percent10#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-lbfgs]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegression]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegressionCV]#test_penalty_none[lbfgs]#test_sag_pobj_matches_logistic_regression#test_thresholded_scorers#test_multiclass_roc_proba_scorer[roc_auc_ovr-metric0]#test_multiclass_roc_proba_scorer[roc_auc_ovo-metric1]#test_multiclass_roc_proba_scorer[roc_auc_ovr_weighted-metric2]#test_multiclass_roc_proba_scorer[roc_auc_ovo_weighted-metric3]#test_multiclass_roc_proba_scorer_label#[doctest] sklearn.neighbors._nca.NeighborhoodComponentsAnalysis#test_simple_example#test_toy_example_collapse_points#test_transformation_dimensions#test_n_components#test_init_transformation#test_auto_init[3-5-3-7]#test_auto_init[3-5-3-11]#test_auto_init[3-5-5-7]#test_auto_init[3-5-5-11]#test_auto_init[3-5-7-7]#test_auto_init[3-5-7-11]#test_auto_init[3-5-11-7]#test_auto_init[3-5-11-11]#test_auto_init[3-7-3-11]#test_auto_init[3-7-5-11],,
691814096,691814098,43052,ffd1873dca18483d2d8a6668e67593a9d702a6ff,python,unknown,3,python,"",false,,,,,,,,,test_percent10#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-lbfgs]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegression]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegressionCV]#test_penalty_none[lbfgs]#test_sag_pobj_matches_logistic_regression#test_thresholded_scorers#test_multiclass_roc_proba_scorer[roc_auc_ovr-metric0]#test_multiclass_roc_proba_scorer[roc_auc_ovo-metric1]#test_multiclass_roc_proba_scorer[roc_auc_ovr_weighted-metric2]#test_multiclass_roc_proba_scorer[roc_auc_ovo_weighted-metric3]#test_multiclass_roc_proba_scorer_label#[doctest] sklearn.neighbors._nca.NeighborhoodComponentsAnalysis#test_simple_example#test_toy_example_collapse_points#test_transformation_dimensions#test_n_components#test_init_transformation#test_auto_init[3-5-3-7]#test_auto_init[3-5-3-11]#test_auto_init[3-5-5-7]#test_auto_init[3-5-5-11]#test_auto_init[3-5-7-7]#test_auto_init[3-5-7-11]#test_auto_init[3-5-11-7]#test_auto_init[3-5-11-11]#test_auto_init[3-7-3-11]#test_auto_init[3-7-5-11]#test_auto_init[3-7-7-11],,
692230586,692230588,43053,753da1de06a764f264c3f5f4817c9190dbe5e021,python,unknown,3,python,"",false,,,,,,,,,test_percent10#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-lbfgs]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegression]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegressionCV]#test_penalty_none[lbfgs]#test_sag_pobj_matches_logistic_regression#test_thresholded_scorers#test_multiclass_roc_proba_scorer[roc_auc_ovr-metric0]#test_multiclass_roc_proba_scorer[roc_auc_ovo-metric1]#test_multiclass_roc_proba_scorer[roc_auc_ovr_weighted-metric2]#test_multiclass_roc_proba_scorer[roc_auc_ovo_weighted-metric3]#test_multiclass_roc_proba_scorer_label#[doctest] sklearn.neighbors._nca.NeighborhoodComponentsAnalysis#test_simple_example#test_toy_example_collapse_points#test_transformation_dimensions#test_n_components#test_init_transformation#test_auto_init[3-5-3-7]#test_auto_init[3-5-3-11]#test_auto_init[3-5-5-7]#test_auto_init[3-5-5-11]#test_auto_init[3-5-7-7]#test_auto_init[3-5-7-11]#test_auto_init[3-5-11-7]#test_auto_init[3-5-11-11]#test_auto_init[3-7-3-11]#test_auto_init[3-7-5-11]#test_auto_init[3-7-7-11],,
692623545,692623546,43054,753da1de06a764f264c3f5f4817c9190dbe5e021,python,unknown,3,python,"",false,,,,,,,,,test_percent10#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-lbfgs]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegression]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegressionCV]#test_penalty_none[lbfgs]#test_sag_pobj_matches_logistic_regression#test_thresholded_scorers#test_multiclass_roc_proba_scorer[roc_auc_ovr-metric0]#test_multiclass_roc_proba_scorer[roc_auc_ovo-metric1]#test_multiclass_roc_proba_scorer[roc_auc_ovr_weighted-metric2]#test_multiclass_roc_proba_scorer[roc_auc_ovo_weighted-metric3]#test_multiclass_roc_proba_scorer_label#[doctest] sklearn.neighbors._nca.NeighborhoodComponentsAnalysis#test_simple_example#test_toy_example_collapse_points#test_transformation_dimensions#test_n_components#test_init_transformation#test_auto_init[3-5-3-7]#test_auto_init[3-5-3-11]#test_auto_init[3-5-5-7]#test_auto_init[3-5-5-11]#test_auto_init[3-5-7-7]#test_auto_init[3-5-7-11]#test_auto_init[3-5-11-7]#test_auto_init[3-5-11-11]#test_auto_init[3-7-3-11]#test_auto_init[3-7-5-11]#test_auto_init[3-7-7-11],,
692920752,692920754,43055,753da1de06a764f264c3f5f4817c9190dbe5e021,python,unknown,2,python,"",false,,,,,,,,,test_percent10#[doctest] sklearn.ensemble._stacking.StackingClassifier#[doctest] sklearn.ensemble._voting.VotingClassifier#test_probability#test_estimators_samples#test_estimators_samples_deterministic#test_bagging_small_max_features#test_ensemble_heterogeneous_estimators_behavior[stacking-classifier]#test_ensemble_heterogeneous_estimators_behavior[voting-classifier]#test_stacking_classifier_iris[False-None-3]#test_stacking_classifier_iris[False-None-cv1]#test_stacking_classifier_iris[False-final_estimator1-3]#test_stacking_classifier_iris[False-final_estimator1-cv1]#test_stacking_classifier_iris[True-None-3]#test_stacking_classifier_iris[True-None-cv1]#test_stacking_classifier_iris[True-final_estimator1-3]#test_stacking_classifier_iris[True-final_estimator1-cv1]#test_stacking_classifier_drop_column_binary_classification#test_stacking_classifier_sparse_passthrough[csc]#test_stacking_classifier_sparse_passthrough[csr]#test_stacking_classifier_sparse_passthrough[coo]#test_stacking_classifier_drop_binary_prob#test_stacking_randomness[StackingClassifier]#test_check_estimators_stacking_estimator[StackingClassifier]#test_stacking_classifier_stratify_default#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_predictproba_hardvoting#test_weights_iris#test_predict_on_toy_problem#test_predict_proba_on_toy_problem#test_gridsearch#test_parallel_fit#test_sample_weight#test_voting_classifier_set_params#test_set_estimator_drop#test_estimator_weights_format#test_transform#test_none_estimator_with_weights[X0-y0-voter0]#test_check_estimators_voting_estimator[VotingClassifier]#test_n_features_in[VotingClassifier]#test_voting_verbose[estimator1]#[doctest] sklearn.feature_selection._from_model.SelectFromModel#test_sample_weight#test_2d_coef#test_importance_getter[estimator0-named_steps.logisticregression.coef_]#test_w_pipeline_2d_coef_#[doctest] sklearn.gaussian_process._gpc.GaussianProcessClassifier#[doctest] sklearn.gaussian_process._gpr.GaussianProcessRegressor#[doctest] sklearn.gaussian_process.kernels.ConstantKernel#[doctest] sklearn.gaussian_process.kernels.DotProduct#[doctest] sklearn.gaussian_process.kernels.ExpSineSquared#[doctest] sklearn.gaussian_process.kernels.Exponentiation#[doctest] sklearn.gaussian_process.kernels.Matern#[doctest] sklearn.gaussian_process.kernels.Product#[doctest] sklearn.gaussian_process.kernels.RBF#[doctest] sklearn.gaussian_process.kernels.RationalQuadratic#[doctest] sklearn.gaussian_process.kernels.Sum#[doctest] sklearn.gaussian_process.kernels.WhiteKernel#test_predict_consistent[kernel0]#test_predict_consistent[kernel2]#test_predict_consistent[kernel3]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_random_starts#test_multi_class[kernel0]#test_multi_class[kernel2]#test_multi_class[kernel3]#test_multi_class_n_jobs[kernel0]#test_multi_class_n_jobs[kernel2]#test_multi_class_n_jobs[kernel3]#test_gpr_interpolation[kernel0]#test_gpr_interpolation[kernel2]#test_gpr_interpolation[kernel3]#test_gpr_interpolation[kernel4]#test_gpr_interpolation[kernel5]#test_lml_improving[kernel0]#test_lml_improving[kernel1]#test_lml_improving[kernel2]#test_lml_improving[kernel3]#test_lml_improving[kernel4]#test_lml_precomputed[kernel0]#test_lml_precomputed[kernel2]#test_lml_precomputed[kernel3]#test_lml_precomputed[kernel4]#test_lml_precomputed[kernel5]#test_lml_without_cloning_kernel[kernel0]#test_lml_without_cloning_kernel[kernel2]#test_lml_without_cloning_kernel[kernel3]#test_lml_without_cloning_kernel[kernel4]#test_lml_without_cloning_kernel[kernel5]#test_converged_to_local_maximum[kernel0]#test_converged_to_local_maximum[kernel1]#test_converged_to_local_maximum[kernel2]#test_converged_to_local_maximum[kernel3]#test_converged_to_local_maximum[kernel4]#test_solution_inside_bounds[kernel0]#test_solution_inside_bounds[kernel1]#test_solution_inside_bounds[kernel2]#test_solution_inside_bounds[kernel3]#test_solution_inside_bounds[kernel4]#test_lml_gradient[kernel0]#test_lml_gradient[kernel2]#test_lml_gradient[kernel3]#test_lml_gradient[kernel4]#test_lml_gradient[kernel5]#test_sample_statistics[kernel0]#test_sample_statistics[kernel2]#test_sample_statistics[kernel3]#test_sample_statistics[kernel4]#test_sample_statistics[kernel5]#test_predict_cov_vs_std[kernel0]#test_predict_cov_vs_std[kernel2]#test_predict_cov_vs_std[kernel3]#test_predict_cov_vs_std[kernel4]#test_predict_cov_vs_std[kernel5]#test_anisotropic_kernel#test_random_starts#test_y_normalization[kernel0]#test_y_normalization[kernel2]#test_y_normalization[kernel3]#test_y_normalization[kernel4]#test_y_normalization[kernel5]#test_large_variance_y#test_y_multioutput#test_gpr_correct_error_message#test_duplicate_input[kernel0]#test_duplicate_input[kernel2]#test_duplicate_input[kernel3]#test_duplicate_input[kernel4]#test_duplicate_input[kernel5]#test_K_inv_reset[kernel0]#test_K_inv_reset[kernel2]#test_K_inv_reset[kernel3]#test_K_inv_reset[kernel4]#test_K_inv_reset[kernel5]#test_output_shape[features0-5-LogisticRegression-brute-data9]#test_output_shape[features0-5-LogisticRegression-brute-data10]#test_output_shape[features0-10-LogisticRegression-brute-data9]#test_output_shape[features0-10-LogisticRegression-brute-data10]#test_output_shape[features1-5-LogisticRegression-brute-data9]#test_output_shape[features1-5-LogisticRegression-brute-data10]#test_output_shape[features1-10-LogisticRegression-brute-data9]#test_output_shape[features1-10-LogisticRegression-brute-data10]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_mixed_types#test_permutation_importance_mixed_types_pandas#[doctest] sklearn.linear_model._huber.HuberRegressor#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_sample_weights_validation#test_glm_family_argument[normal-instance0]#test_glm_family_argument[poisson-instance1]#test_glm_family_argument[gamma-instance2]#test_glm_family_argument[inverse-gaussian-instance3]#test_glm_link_argument[identity-instance0]#test_glm_link_argument[log-instance1]#test_glm_link_auto[normal-IdentityLink]#test_glm_link_auto[poisson-LogLink]#test_glm_link_auto[gamma-LogLink]#test_glm_link_auto[inverse-gaussian-LogLink]#test_glm_identity_regression[False]#test_glm_identity_regression[True]#test_glm_sample_weight_consistentcy[normal-0.0-False]#test_glm_sample_weight_consistentcy[normal-0.0-True]#test_glm_sample_weight_consistentcy[normal-1.0-False]#test_glm_sample_weight_consistentcy[normal-1.0-True]#test_glm_sample_weight_consistentcy[poisson-0.0-False]#test_glm_sample_weight_consistentcy[poisson-0.0-True]#test_glm_sample_weight_consistentcy[poisson-1.0-False]#test_glm_sample_weight_consistentcy[poisson-1.0-True]#test_glm_sample_weight_consistentcy[gamma-0.0-False]#test_glm_sample_weight_consistentcy[gamma-0.0-True]#test_glm_sample_weight_consistentcy[gamma-1.0-False]#test_glm_sample_weight_consistentcy[gamma-1.0-True]#test_glm_log_regression[family0-True]#test_glm_log_regression[family0-False]#test_glm_log_regression[family1-True]#test_glm_log_regression[family1-False]#test_glm_log_regression[family2-True]#test_glm_log_regression[family2-False]#test_glm_log_regression[family3-True]#test_glm_log_regression[family3-False]#test_glm_log_regression[family4-True]#test_glm_log_regression[family4-False]#test_glm_log_regression[family5-True]#test_glm_log_regression[family5-False]#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-100-10]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-100-10]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-100-10]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-100-10]#test_normal_ridge_comparison[True-False-10-100]#test_poisson_glmnet#test_huber_equals_lr_for_high_epsilon#test_huber_max_iter#test_huber_sample_weights#test_huber_sparse#test_huber_scaling_invariant#test_huber_and_sgd_same_results#test_huber_warm_start#test_huber_better_r2_score#test_huber_bool#test_predict_2_classes#test_error#test_logistic_cv_mock_scorer#test_logistic_cv_score_does_not_warn_by_default#test_predict_3_classes#test_predict_iris#test_multinomial_binary[lbfgs]#test_sparsify#test_inconsistent_input#test_write_parameters#test_consistency_path#test_logistic_regression_path_convergence_fail#test_logistic_cv_multinomial_score[accuracy-multiclass_agg_list0]#test_logistic_cv_multinomial_score[precision-multiclass_agg_list1]#test_logistic_cv_multinomial_score[f1-multiclass_agg_list2]#test_logistic_cv_multinomial_score[neg_log_loss-multiclass_agg_list3]#test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]#test_multinomial_logistic_regression_string_inputs#test_logistic_cv_sparse#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_class_weights#test_logistic_regression_multinomial#test_logreg_intercept_scaling_zero#test_logreg_predict_proba_multinomial#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-lbfgs]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegression]#test_logistic_regression_multi_class_auto[lbfgs-LogisticRegressionCV]#test_penalty_none[lbfgs]#test_sag_pobj_matches_logistic_regression#test_thresholded_scorers#test_multiclass_roc_proba_scorer[roc_auc_ovr-metric0]#test_multiclass_roc_proba_scorer[roc_auc_ovo-metric1]#test_multiclass_roc_proba_scorer[roc_auc_ovr_weighted-metric2]#test_multiclass_roc_proba_scorer[roc_auc_ovo_weighted-metric3]#test_multiclass_roc_proba_scorer_label#[doctest] sklearn.neighbors._nca.NeighborhoodComponentsAnalysis#test_simple_example#test_toy_example_collapse_points#test_transformation_dimensions#test_n_components#test_init_transformation#test_auto_init[3-5-3-7]#test_auto_init[3-5-3-11]#test_auto_init[3-5-5-7]#test_auto_init[3-5-5-11]#test_auto_init[3-5-7-7]#test_auto_init[3-5-7-11]#test_auto_init[3-5-11-7]#test_auto_init[3-5-11-11]#test_auto_init[3-7-3-11]#test_auto_init[3-7-5-11]#test_auto_init[3-7-7-11],,
693178271,693178272,43056,753da1de06a764f264c3f5f4817c9190dbe5e021,python,unknown,2,python,"",false,,,,,,,,,test_percent10,,
693511831,693511839,43057,d42611f11b97581c4494824be125e210c0531bf4,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
693917440,693917441,43058,7229c051b32b82bcfa9043538212f078ddf7c239,python,unknown,2,python,"",false,,,,,,,,,test_percent10,,
694323355,694323356,43059,0e0423943c1b62015946e5a09ad80fdb45906210,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
694712473,694712474,43060,8feb04524caf78c6a84b56fc59917a0eadcb69c2,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
695099475,695099476,43061,9b384c5c52bdfd48ad0470be823ce1d5da95a427,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
695439390,695439393,43062,c3fd8ec1ef860517e97f77f5eff43840c476eedd,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
695713716,695713717,43063,5297365ebec6c172060eb19462894816384b6674,python,unknown,2,python,"",false,,,,,,,,,test_percent10,,
696110950,696110955,43064,3ff6277492c795cc5986d9bf468b1077f466ba3a,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
696528448,696528449,43065,31c4d8d679803c3cbf02fbc40d39a7dd2586a23a,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
696688780,696688781,43066,e95c2a0ff64de2fa58e7d2002e37557ed07a4c31,python,unknown,18,python,"",false,,,,,,,,,test_percent10,,
696694839,696694840,43067,49393dcabf172ca4163a1bf2acb1d2326400b018,python,unknown,1,python,"",false,,,,,,,,,"",,
696913033,696913035,43068,673c31a8801effabc207a6247c18a3c28dd502f4,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
697291788,697291797,43069,a13ead29d0ff6d3df18a02af69bbfb5362bbc3fb,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
697674034,697674035,43070,d1ecf0508c5e0ec9c02c364e96b595c4a0f87b70,python,unknown,1,python,"",false,,,,,,,,,"",,
697686729,697686733,43071,650dea48386bdc3825feb781fa9a2dc43dfb8b3c,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
698004090,698004091,43072,650dea48386bdc3825feb781fa9a2dc43dfb8b3c,python,unknown,3,python,"",false,,,,,,,,,test_percent10,,
698246711,698246712,43073,77ccf19c1f5c0fd756e906e098e4ceadc964663b,python,unknown,2,python,"",false,,,,,,,,,test_percent10,,
698454821,698454822,43074,e5dd36b15891477b174f346a8169f443bd4d3fbf,python,ok,1,python,pytest,true,false,45,0,45,2,,,,"",39.38,
698602955,698602956,43075,1abf84affe383ac2c6a2cfd4665e5fc68a8235bf,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",42.25,
698992741,698992742,43076,071ce4bf8672a5fb9b3df66c2b2b5515a09a52d0,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",40.75,
699379065,699379066,43077,f685547f801b13afc0874ed348e3a46600113136,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",40.33,
699774186,699774190,43078,8ab0064579a20b175400b05a33ededaa4f57d062,python,ok,2,python,pytest,true,false,45,0,45,2,,,,"",40.28,
700131196,700131198,43079,2771b0ccda294ad42d6a1f6e8b4f59a212809b45,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",39.43,
700199454,700199455,43080,be44c6e87dca9afa8d560d0dae98e2b54e11babd,python,unknown,23,python,"",false,,,,,,,,,test_fetch_kddcup99_check_as_frame_shape#test_IOerror_message,,
700199609,700199611,43081,1b109ad2cec1a0551e25cfd4fe7ac556996b8982,python,ok,17,python,pytest,true,false,45,0,45,2,,,,"",42.13,
700390229,700390235,43082,4e8dc9db5cbdc6fd327d3cf8e4ff78bb15140b92,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",42.15,
700393231,700393232,43083,c3c7601b3a26c3f38681351660a529bb83ca2fcd,python,ok,16,python,pytest,true,false,45,0,45,2,,,,"",41.52,
700609911,700609914,43084,6ef4487c66cf82da1e231aabb8a398862e02b699,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",39.56,
700948701,700948705,43085,4ea7fd687fb66acf71099857fe0ea0319f2c05e0,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",44.06,
701298150,701298151,43086,1f2584c47a5157df98f06bc5108f0806de8b5b0e,python,unknown,1,python,"",false,,,,,,,,,"",,
701298254,701298255,43087,878a9f2dbaaa4e77cdfdd6acfeea983b19c475cd,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.63,
701339273,701339274,43088,3d098af4cca5c279357e004ebf9adf46a946ae52,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",42.9,
701367678,701367679,43089,a3018994c3dba4da1adf66d5c28aae86b29a31d9,python,ok,1,python,pytest,true,false,45,0,45,2,,,,"",39.68,
701418988,701418989,43090,8bf1875d26f6acd600ea03e09229d52a96903020,python,ok,1,python,pytest,true,false,45,0,45,2,,,,"",39.79,
701424576,701424577,43091,651dfd387387d40df689be03ace458cb3ba38cd4,python,ok,1,python,pytest,true,false,45,0,45,2,,,,"",43.67,
701430075,701430076,43092,8f72043c72e1bcfe70c3ad82d2799790e3722e19,python,ok,1,python,pytest,true,false,45,0,45,2,,,,"",40.54,
701456681,701456682,43093,1ce0bd4aa376e255898ab197df43f5c3eeaa3638,python,unknown,2,python,pytest,true,false,0,0,0,0,,,,"",0.63,
701459070,701459071,43094,39760e513f1e317a0c87704687250ef0d6dac331,python,ok,3,python,pytest,true,false,45,0,45,2,,,,"",41.94,
701510206,701510207,43095,191229dcfadfc0b7f9851b941262ae1fb202bdac,unknown,unknown,,plain,"",false,,,,,,,,,"",,
701510245,701510246,43096,b62af2b5088f45dbad67b7d5751801f595846e42,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.63,
701519859,701519860,43097,b8274474a848b9116bf3854a40808bef07b39e2e,python,unknown,1,python,"",false,,,,,,,,,"",,
701520123,701520124,43098,34eaea63e06a74e2a87891b72536b9489ba9d187,python,unknown,1,python,"",false,,,,,,,,,"",,
701520627,701520628,43099,12505160400a5bb519a1bd0ad022666f68ce196d,python,unknown,1,python,"",false,,,,,,,,,"",,
701520871,701520872,43100,476809dfe17b6868688d9b064e06d5d3f0c371cc,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.64,
701527749,701527750,43101,8e988033b16e4314e8c69a0ead39aa1d02b92e04,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.59,
701528836,701528837,43102,b86b1c16b0bf2d4ce4f932d6f51bdc67b0b1e668,python,unknown,1,python,"",false,,,,,,,,,"",,
701529715,701529716,43103,441847fe102591f9f43bf8db94451d40e49b942d,python,unknown,1,python,"",false,,,,,,,,,"",,
701529981,701529982,43104,5afafbd4939b7cd43a858380fa94c8fde8f4ca60,python,unknown,2,python,pytest,true,false,0,0,0,0,,,,"",0.61,
701531589,701531590,43105,e5ea6bed7b3e5e488a87b23bd8184fb7e4018c59,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.65,
701535132,701535133,43106,d6c3b0a0c80e7d4c55cab4850fb15d2ac1355b0c,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.62,
701536988,701536989,43107,11318c54f3e2c7391c7fad63d407cf6fe51686ec,python,unknown,1,python,"",false,,,,,,,,,"",,
701537534,701537535,43108,1e3b925890a2417a91ec0662a6c6cb3e16d26f23,python,unknown,1,python,"",false,,,,,,,,,"",,
701537798,701537799,43109,c49407f0433feff2d6909735df66f894732f9c9a,python,unknown,1,python,"",false,,,,,,,,,"",,
701538361,701538362,43110,6c3c6d2600412286d19f5dd67166df83de438e2e,python,unknown,1,python,"",false,,,,,,,,,"",,
701538883,701538884,43111,bd9b5adb1e54376d54e80d0095d769dffb6fa190,python,unknown,1,python,"",false,,,,,,,,,"",,
701539637,701539638,43112,4cb8e731606b321b5d9d0d9b60cccf8077d41203,python,unknown,1,python,"",false,,,,,,,,,"",,
701540136,701540137,43113,428b9a5f94746b5ad601e9551a867196ff11ba43,python,unknown,1,python,"",false,,,,,,,,,"",,
701541185,701541186,43114,65bfefa7b5412e166ffed8fabcc11c49ccc050bf,python,unknown,2,python,"",false,,,,,,,,,"",,
701541387,701541388,43115,14ec69ecbce851701d1a72cb25e24353db14317a,python,unknown,1,python,"",false,,,,,,,,,"",,
701542046,701542047,43116,24d52839c6c8ca64e7d20ae646bfa2af87c3c084,python,unknown,1,python,"",false,,,,,,,,,"",,
701542461,701542462,43117,0913ee2bd33b5e4682d3aa413ab5559139c1780e,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.63,
701544628,701544629,43118,4a9af2874109ce7be9575dfa4a394229f3eea13b,python,unknown,1,python,"",false,,,,,,,,,"",,
701545023,701545024,43119,08ec5f50cbc2a997e6675f9f7703d2d19488d84d,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.6,
701562985,701562986,43120,18115776453b3f3930a58cf11f15056b57970567,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.61,
701613874,701613875,43121,882f869c1119a3ee26ca3f15f45e79d5f6d6228e,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.79,
701623879,701623880,43122,d16c7af65178ac7dd8b24b7fd74eee9e29c7523e,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.68,
701713936,701713937,43123,59249d707de0abe5878f6dd982404a1490ee4ee7,python,unknown,3,python,pytest,true,false,0,0,0,0,,,,"",15.25,
701715155,701715156,43124,42cb715eefaf04c470ef53c2d0e6ea763721cf20,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",14.22,
701779219,701779220,43125,b398357a4b8933b55986051f019c18eec1e8b6d4,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",14.46,
701788574,701788575,43126,dad0ed7873203ac6500a99a40351243ea734d0ec,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",13.28,
701791266,701791267,43127,c445d728146d5a30f69c4d1e8e81a97d89db8a9a,python,unknown,1,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
701802560,701802561,43128,5be3aa68e655985e1ebefbdc69f701aafecc9ae9,python,unknown,1,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
701817012,701817013,43129,ff5ad7a9eb57898b8bd01331f20e0cf6148161d3,python,unknown,2,python,pytest,true,false,0,0,0,0,,,,"",16.88,
701823542,701823543,43130,e2cf785d676304c87578d12c4ff75eb704c885e0,python,unknown,1,python,"",false,,,,,,,,,"",,
701824760,701824761,43131,b0bd855625eb5549ea606f151a77e95546afe73b,python,unknown,1,python,"",false,,,,,,,,,"",,
701825099,701825100,43132,3c9a04de14355dbe534e310a9d37ac2db78c199e,python,unknown,1,python,"",false,,,,,,,,,"",,
701826058,701826059,43133,2a6adb73bff1c1c6487032bb26507cddcb1fed04,python,unknown,2,python,"",false,,,,,,,,,"",,
701827446,701827448,43134,ff7e97c6e655af5fb56599f43d8441e4954c052b,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",15.66,
701831652,701831653,43135,c43d84489dc70b9a76e621670fe5fb490bfe9980,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",15.19,
701840099,701840100,43136,9b2b5c3073a5037efd6116c711de23fe859e8bc6,python,unknown,2,python,pytest,true,false,0,0,0,0,,,,"",13.71,
701841546,701841547,43137,cc8ba5efbaba26eee4d724f3be769bba4c31ed4f,python,unknown,2,python,pytest,true,false,0,0,0,0,,,,"",14.79,
701845344,701845345,43138,47dcb84264fb6d4f0c04efe761e34c454a836527,python,unknown,2,python,pytest,true,false,0,0,0,0,,,,"",15.32,
701847805,701847806,43139,fa5c93fc1d38ff9faa251c78132b124a93d81848,python,unknown,1,python,"",false,,,,,,,,,"",,
701848179,701848180,43140,24e2662bab86672a84d0d819f510cf1b2dafa27f,python,unknown,1,python,"",false,,,,,,,,,"",,
701849131,701849132,43141,a5c0d3b5841b55796c900533c57b54fec1bc3e6c,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",15.3,
701855155,701855156,43142,c9eee485973db3a282ceb2c354d4455c181270b9,python,unknown,2,python,pytest,true,false,0,0,0,0,,,,"",16.14,
701943965,701943966,43143,13119833eece20bba6351a9a2cdaaa495d013c80,python,unknown,2,python,"",false,,,,,,,,,"",,
701946245,701946246,43144,711fde2f9481c59098987bebb4be5fe2ef7f0016,python,unknown,3,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
701962439,701962440,43145,28b38b09b4e0067da3dcef394a803114e377fc27,python,unknown,1,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
702000685,702000686,43146,3a489e968d010ad37856a3768154008130222cdd,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",16.07,
702050476,702050477,43147,908f06b25a533603ada8cee9968c0fd026302026,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",13.18,
702057897,702057898,43148,8676f93d8a74e7ff99aa1ddba61589a1f5042e19,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",15.49,
702094780,702094782,43149,ec1070a21213ce855f83e20de46a42e3cc765568,python,unknown,3,python,pytest,true,false,0,0,0,0,,,,"",13.81,
702332449,702332450,43150,547ead6c0c77633df5391cf3523f4f326fc26ea3,python,unknown,3,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
702414710,702414713,43151,4651c45ca59b066c23f84fab9df25a050079f14b,python,unknown,1,python,"",false,,,,,,,,,"",,
702414938,702414939,43152,548afc2c17c7a1a766e1d13fa4dc83401bf228f5,python,ok,1,python,pytest,true,false,45,0,45,2,,,,"",41.88,
702436449,702436450,43153,e4aab357e990e661113e6da97c5c7e939917daf2,python,unknown,3,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
702693181,702693182,43154,7eff8ae75b29f541fa0196722086c529875d6fc2,python,unknown,3,python,pytest,true,false,0,0,0,0,,,,"",0.62,
702839570,702839571,43155,22884889436d62dedb29d32a2d190cb4ab70d600,python,unknown,1,python,"",false,,,,,,,,,"",,
702840177,702840178,43156,dff13eed4fb3f5578728b2042d00424fed0b95c5,python,unknown,1,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
702844014,702844015,43157,6a575780dec54c4da170c1b54f3993afa032d78b,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.64,
702914375,702914377,43158,430c2080e81dbf9aacc99dfd83d958030a7c4d07,python,unknown,3,python,"",false,,,,,,,,,"",,
703082327,703082328,43159,3493a579042994884e60649349b74ce51ceb3b5c,python,unknown,1,python,"",false,,,,,,,,,"",,
703083078,703083079,43160,1c9058420f3faac6ae005b4b533457ba41ebf697,python,unknown,1,python,pytest,true,false,0,0,0,0,,,,"",0.62,
703220076,703220079,43161,430c2080e81dbf9aacc99dfd83d958030a7c4d07,python,unknown,3,python,"",false,,,,,,,,,"",,
703259617,703259618,43162,556d687385f2c9448a183dab192c0d6c3c3cf2c4,python,unknown,1,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
703493682,703493683,43163,b9956dbb469855a4e2328e1605feb194c7deb7b5,python,unknown,3,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
703597127,703597128,43164,6b29bc69c59509e61d5a57c94cd27cc90456c060,python,unknown,3,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
703991273,703991275,43165,903c82e118296cbcc32cf3efe1e626ff30e38bb3,python,unknown,3,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
704385109,704385110,43166,ffbb1b4a0bbb58fdca34a30856c6f7faace87c67,python,unknown,3,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
704726657,704726658,43167,ffbb1b4a0bbb58fdca34a30856c6f7faace87c67,python,unknown,2,python,"",false,,,,,,,,,"",,
704952474,704952480,43168,0ea324406174f046877c98bfe758c16122ad8ba7,python,unknown,2,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#[doctest] sklearn.neural_network._multilayer_perceptron.MLPClassifier#test_alpha#test_fit#test_gradient#test_lbfgs_classification[X0-y0]#test_lbfgs_classification[X1-y1]#test_learning_rate_warmstart#test_multilabel_classification#test_partial_fit_classes_error#test_partial_fit_classification#test_partial_fit_unseen_classes#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_sparse_matrices#test_tolerance#test_verbose_sgd#test_early_stopping#test_adaptive_learning_rate#test_warm_start#test_n_iter_no_change#test_n_iter_no_change_inf#test_early_stopping_stratified#test_mlp_classifier_dtypes_casting#test_mlp_param_dtypes[MLPClassifier-float32]#test_mlp_param_dtypes[MLPClassifier-float64]#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimators_fit_returns_self]#test_estimators[MLPClassifier()-check_dtype_object]#test_estimators[MLPClassifier()-check_estimators_nan_inf]#test_estimators[MLPClassifier()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimator_sparse_data]#test_estimators[MLPClassifier()-check_classifier_data_not_an_array]#test_estimators[MLPClassifier()-check_classifiers_one_label]#test_estimators[MLPClassifier()-check_estimators_partial_fit_n_features]#test_estimators[MLPClassifier()-check_supervised_y_2d]#test_estimators[MLPClassifier()-check_non_transformer_estimators_n_iter]#test_estimators[MLPClassifier()-check_fit2d_predict1d]#test_estimators[MLPClassifier()-check_methods_subset_invariance]#test_estimators[MLPClassifier()-check_dont_overwrite_parameters]#test_estimators[MLPClassifier()-check_fit_idempotent]#test_estimators[MLPClassifier()-check_n_features_in]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
705151936,705151937,43169,9cd13a1fa16708f94a0d821ac2865fa7d981cad8,python,unknown,3,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#[doctest] sklearn.neural_network._multilayer_perceptron.MLPClassifier#test_alpha#test_fit#test_gradient#test_lbfgs_classification[X0-y0]#test_lbfgs_classification[X1-y1]#test_learning_rate_warmstart#test_multilabel_classification#test_partial_fit_classes_error#test_partial_fit_classification#test_partial_fit_unseen_classes#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_sparse_matrices#test_tolerance#test_verbose_sgd#test_early_stopping#test_adaptive_learning_rate#test_warm_start#test_n_iter_no_change#test_n_iter_no_change_inf#test_early_stopping_stratified#test_mlp_classifier_dtypes_casting#test_mlp_param_dtypes[MLPClassifier-float32]#test_mlp_param_dtypes[MLPClassifier-float64]#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimators_fit_returns_self]#test_estimators[MLPClassifier()-check_dtype_object]#test_estimators[MLPClassifier()-check_estimators_nan_inf]#test_estimators[MLPClassifier()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimator_sparse_data]#test_estimators[MLPClassifier()-check_classifier_data_not_an_array]#test_estimators[MLPClassifier()-check_classifiers_one_label]#test_estimators[MLPClassifier()-check_estimators_partial_fit_n_features]#test_estimators[MLPClassifier()-check_supervised_y_2d]#test_estimators[MLPClassifier()-check_non_transformer_estimators_n_iter]#test_estimators[MLPClassifier()-check_fit2d_predict1d]#test_estimators[MLPClassifier()-check_methods_subset_invariance]#test_estimators[MLPClassifier()-check_dont_overwrite_parameters]#test_estimators[MLPClassifier()-check_fit_idempotent]#test_estimators[MLPClassifier()-check_n_features_in]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
705472375,705472378,43170,c3f25168fe8c73b82af8f57ae536f4a9708c863e,python,unknown,3,python,"",false,,,,,,,,,"test_agglomerative_clustering#test_column_transformer_dataframe#test_column_transformer_empty_columns[list-pandas]#test_column_transformer_empty_columns[bool-pandas]#test_2D_transformer_output_pandas#test_make_column_transformer_pandas#test_column_transformer_get_feature_names_dataframe#test_column_transformer_remainder_pandas[key0]#test_column_transformer_remainder_pandas[key1]#test_column_transformer_remainder_pandas[key2]#test_column_transformer_remainder_pandas[key3]#test_column_transformer_remainder_pandas[pd-index]#test_column_transformer_remainder_pandas[key5]#test_column_transformer_remainder_pandas[key6]#test_column_transformer_remainder_pandas[key7]#test_column_transformer_remainder_pandas[key8]#test_column_transformer_callable_specifier_dataframe#test_column_transformer_reordered_column_names_remainder[first]#test_column_transformer_reordered_column_names_remainder[second]#test_feature_name_validation#test_make_column_selector_with_select_dtypes[cols0-None-number-None]#test_make_column_selector_with_select_dtypes[cols1-None-None-object]#test_make_column_selector_with_select_dtypes[cols2-None-include2-None]#test_make_column_selector_with_select_dtypes[cols3-None-include3-None]#test_make_column_selector_with_select_dtypes[cols4-None-object-None]#test_make_column_selector_with_select_dtypes[cols5-None-float-None]#test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]#test_make_column_selector_with_select_dtypes[cols7-None-include7-None]#test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]#test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]#test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]#test_make_column_selector_with_select_dtypes[cols11-str$-float-None]#test_make_column_selector_with_select_dtypes[cols12-None-include12-None]#test_column_transformer_with_make_column_selector#test_make_column_selector_pickle#test_feature_names_empty_columns[list]#test_feature_names_empty_columns[array]#test_feature_names_empty_columns[callable]#test_toy_dataset_frame_dtype[load_breast_cancer-float64-int64]#test_toy_dataset_frame_dtype[load_diabetes-float64-float64]#test_toy_dataset_frame_dtype[load_digits-float64-int64]#test_toy_dataset_frame_dtype[load_iris-float64-int64]#test_toy_dataset_frame_dtype[load_linnerud-float64-float64]#test_toy_dataset_frame_dtype[load_wine-float64-int64]#test_fetch_asframe#test_common_check_as_frame[load_breast_cancer-load_breast_cancer]#test_common_check_as_frame[load_diabetes-load_diabetes]#test_common_check_as_frame[load_digits-load_digits]#test_common_check_as_frame[load_iris-load_iris]#test_common_check_as_frame[load_linnerud-load_linnerud]#test_common_check_as_frame[load_wine-load_wine]#test_fetch_asframe#test_fetch_openml_iris_pandas#test_fetch_openml_iris_pandas_equal_to_no_frame#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_anneal_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_as_frame_auto#test_convert_arff_data_dataframe_warning_low_memory_pandas#test_fetch_openml_adultcensus_pandas_return_X_y#test_fetch_openml_adultcensus_pandas#test_fetch_openml_miceprotein_pandas#test_fetch_openml_emotions_pandas#test_fetch_openml_titanic_pandas#test_fetch_openml_verify_checksum[True]#test_bootstrap_samples#test_imputers_pandas_na_integer_array_support[True-imputer0]#test_imputers_pandas_na_integer_array_support[True-imputer1]#test_imputers_pandas_na_integer_array_support[True-imputer2]#test_imputers_pandas_na_integer_array_support[False-imputer0]#test_imputers_pandas_na_integer_array_support[False-imputer1]#test_imputers_pandas_na_integer_array_support[False-imputer2]#test_imputation_mean_median_error_invalid_type_list_pandas[dataframe-mean]#test_imputation_most_frequent_pandas[object]#test_imputation_most_frequent_pandas[category]#test_imputation_constant_pandas[object]#test_imputation_constant_pandas[category]#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#test_partial_dependence_dataframe[features-integer-None-estimator-brute]#test_partial_dependence_dataframe[features-string-None-estimator-brute]#test_partial_dependence_feature_type[scalar-int]#test_partial_dependence_feature_type[scalar-str]#test_partial_dependence_feature_type[list-int]#test_partial_dependence_feature_type[list-str]#test_partial_dependence_feature_type[mask]#test_permutation_importance_correlated_feature_regression_pandas[1]#test_permutation_importance_correlated_feature_regression_pandas[2]#test_permutation_importance_mixed_types_pandas#test_permutation_importance_equivalence_array_dataframe[None]#test_permutation_importance_equivalence_array_dataframe[1]#test_permutation_importance_equivalence_array_dataframe[2]#test_linear_regression_pd_sparse_dataframe_warning#[doctest] sklearn.neural_network._multilayer_perceptron.MLPClassifier#test_alpha#test_fit#test_gradient#test_lbfgs_classification[X0-y0]#test_lbfgs_classification[X1-y1]#test_learning_rate_warmstart#test_multilabel_classification#test_partial_fit_classes_error#test_partial_fit_classification#test_partial_fit_unseen_classes#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_sparse_matrices#test_tolerance#test_verbose_sgd#test_early_stopping#test_adaptive_learning_rate#test_warm_start#test_n_iter_no_change#test_n_iter_no_change_inf#test_early_stopping_stratified#test_mlp_classifier_dtypes_casting#test_mlp_param_dtypes[MLPClassifier-float32]#test_mlp_param_dtypes[MLPClassifier-float64]#test_missing_value_pandas_na_support[est0-maxabs_scale]#test_missing_value_pandas_na_support[est1-minmax_scale]#test_missing_value_pandas_na_support[est2-scale]#test_missing_value_pandas_na_support[est3-scale]#test_missing_value_pandas_na_support[est4-power_transform]#test_missing_value_pandas_na_support[est5-power_transform]#test_missing_value_pandas_na_support[est6-quantile_transform]#test_missing_value_pandas_na_support[est7-robust_scale]#test_missing_value_pandas_na_support[est8-robust_scale]#test_one_hot_encoder_dtype_pandas[int32]#test_one_hot_encoder_dtype_pandas[float32]#test_one_hot_encoder_dtype_pandas[float64]#test_one_hot_encoder_pandas#test_encoder_dtypes_pandas#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimators_fit_returns_self]#test_estimators[MLPClassifier()-check_dtype_object]#test_estimators[MLPClassifier()-check_estimators_nan_inf]#test_estimators[MLPClassifier()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimator_sparse_data]#test_estimators[MLPClassifier()-check_classifier_data_not_an_array]#test_estimators[MLPClassifier()-check_classifiers_one_label]#test_estimators[MLPClassifier()-check_estimators_partial_fit_n_features]#test_estimators[MLPClassifier()-check_supervised_y_2d]#test_estimators[MLPClassifier()-check_non_transformer_estimators_n_iter]#test_estimators[MLPClassifier()-check_fit2d_predict1d]#test_estimators[MLPClassifier()-check_methods_subset_invariance]#test_estimators[MLPClassifier()-check_dont_overwrite_parameters]#test_estimators[MLPClassifier()-check_fit_idempotent]#test_estimators[MLPClassifier()-check_n_features_in]#test_pipeline_memory#test_check_estimator_clones#test_convert_container[index-Index]#test_safe_indexing_2d_container_axis_0[list-dataframe]#test_safe_indexing_2d_container_axis_0[tuple-dataframe]#test_safe_indexing_2d_container_axis_0[array-dataframe]#test_safe_indexing_2d_container_axis_0[series-dataframe]#test_safe_indexing_2d_container_axis_0[slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices0-slice-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-list-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-tuple-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-array-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-series-dataframe]#test_safe_indexing_2d_container_axis_1[indices1-slice-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-list-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-tuple-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-array-dataframe]#test_safe_indexing_2d_mask[0-expected_subset0-series-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-list-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-tuple-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-array-dataframe]#test_safe_indexing_2d_mask[1-expected_subset1-series-dataframe]#test_safe_indexing_2d_scalar_axis_0[dataframe-series]#test_safe_indexing_2d_scalar_axis_1[2-dataframe-series]#test_safe_indexing_2d_scalar_axis_1[col_2-dataframe-series]#test_get_column_indices_error[10-all features must be in \\[0, 2\\]]#test_get_column_indices_pandas_nonunique_columns_error[key0]#test_get_column_indices_pandas_nonunique_columns_error[key1]#test_get_column_indices_pandas_nonunique_columns_error[key2]#test_get_column_indices_pandas_nonunique_columns_error[key3]#test_get_column_indices_pandas_nonunique_columns_error[key4]#test_check_array_pandas_na_support[dtype0-float32-Int8]#test_check_array_pandas_na_support[dtype0-float32-Int16]#test_check_array_pandas_na_support[dtype0-float32-UInt8]#test_check_array_pandas_na_support[dtype0-float32-UInt16]#test_check_array_pandas_na_support[float64-float64-Int8]#test_check_array_pandas_na_support[float64-float64-Int16]#test_check_array_pandas_na_support[float64-float64-UInt8]#test_check_array_pandas_na_support[float64-float64-UInt16]#test_check_array_pandas_na_support[numeric-float64-Int8]#test_check_array_pandas_na_support[numeric-float64-Int16]#test_check_array_pandas_na_support[numeric-float64-UInt8]#test_check_array_pandas_na_support[numeric-float64-UInt16]#test_check_dataframe_fit_attribute#test_check_array_series#test_check_dataframe_mixed_float_dtypes#test_check_sparse_pandas_sp_format[True]#test_check_sparse_pandas_sp_format[csr]#test_check_sparse_pandas_sp_format[csc]#test_check_sparse_pandas_sp_format[coo]#test_check_sparse_pandas_sp_format[bsr]",,
705853283,705853285,43171,9b42b0cc7d5cf6978805619bc2433e3888c38d0c,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#[doctest] sklearn.neural_network._multilayer_perceptron.MLPClassifier#test_alpha#test_fit#test_gradient#test_lbfgs_classification[X0-y0]#test_lbfgs_classification[X1-y1]#test_learning_rate_warmstart#test_multilabel_classification#test_partial_fit_classes_error#test_partial_fit_classification#test_partial_fit_unseen_classes#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_sparse_matrices#test_tolerance#test_verbose_sgd#test_early_stopping#test_adaptive_learning_rate#test_warm_start#test_n_iter_no_change#test_n_iter_no_change_inf#test_early_stopping_stratified#test_mlp_classifier_dtypes_casting#test_mlp_param_dtypes[MLPClassifier-float32]#test_mlp_param_dtypes[MLPClassifier-float64]#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimators_fit_returns_self]#test_estimators[MLPClassifier()-check_dtype_object]#test_estimators[MLPClassifier()-check_estimators_nan_inf]#test_estimators[MLPClassifier()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimator_sparse_data]#test_estimators[MLPClassifier()-check_classifier_data_not_an_array]#test_estimators[MLPClassifier()-check_classifiers_one_label]#test_estimators[MLPClassifier()-check_estimators_partial_fit_n_features]#test_estimators[MLPClassifier()-check_supervised_y_2d]#test_estimators[MLPClassifier()-check_non_transformer_estimators_n_iter]#test_estimators[MLPClassifier()-check_fit2d_predict1d]#test_estimators[MLPClassifier()-check_methods_subset_invariance]#test_estimators[MLPClassifier()-check_dont_overwrite_parameters]#test_estimators[MLPClassifier()-check_fit_idempotent]#test_estimators[MLPClassifier()-check_n_features_in]#test_pipeline_memory#test_check_estimator_clones,,
706230184,706230186,43172,db673eb72ec2e7cbe5c30f50f97719a3bdf2f1b1,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#[doctest] sklearn.neural_network._multilayer_perceptron.MLPClassifier#test_alpha#test_fit#test_gradient#test_lbfgs_classification[X0-y0]#test_lbfgs_classification[X1-y1]#test_learning_rate_warmstart#test_multilabel_classification#test_partial_fit_classes_error#test_partial_fit_classification#test_partial_fit_unseen_classes#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_sparse_matrices#test_tolerance#test_verbose_sgd#test_early_stopping#test_adaptive_learning_rate#test_warm_start#test_n_iter_no_change#test_n_iter_no_change_inf#test_early_stopping_stratified#test_mlp_classifier_dtypes_casting#test_mlp_param_dtypes[MLPClassifier-float32]#test_mlp_param_dtypes[MLPClassifier-float64]#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimators_fit_returns_self]#test_estimators[MLPClassifier()-check_dtype_object]#test_estimators[MLPClassifier()-check_estimators_nan_inf]#test_estimators[MLPClassifier()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimator_sparse_data]#test_estimators[MLPClassifier()-check_classifier_data_not_an_array]#test_estimators[MLPClassifier()-check_classifiers_one_label]#test_estimators[MLPClassifier()-check_estimators_partial_fit_n_features]#test_estimators[MLPClassifier()-check_supervised_y_2d]#test_estimators[MLPClassifier()-check_non_transformer_estimators_n_iter]#test_estimators[MLPClassifier()-check_fit2d_predict1d]#test_estimators[MLPClassifier()-check_methods_subset_invariance]#test_estimators[MLPClassifier()-check_dont_overwrite_parameters]#test_estimators[MLPClassifier()-check_fit_idempotent]#test_estimators[MLPClassifier()-check_n_features_in]#test_pipeline_memory#test_check_estimator_clones,,
706592114,706592115,43173,8754470a78e014c16729d5e312970c76472edc07,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_simple_imputation_inverse_transform[-1]#test_simple_imputation_inverse_transform[nan]#[doctest] sklearn.neural_network._multilayer_perceptron.MLPClassifier#test_alpha#test_fit#test_gradient#test_lbfgs_classification[X0-y0]#test_lbfgs_classification[X1-y1]#test_learning_rate_warmstart#test_multilabel_classification#test_partial_fit_classes_error#test_partial_fit_classification#test_partial_fit_unseen_classes#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_sparse_matrices#test_tolerance#test_verbose_sgd#test_early_stopping#test_adaptive_learning_rate#test_warm_start#test_n_iter_no_change#test_n_iter_no_change_inf#test_early_stopping_stratified#test_mlp_classifier_dtypes_casting#test_mlp_param_dtypes[MLPClassifier-float32]#test_mlp_param_dtypes[MLPClassifier-float64]#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimators_fit_returns_self]#test_estimators[MLPClassifier()-check_dtype_object]#test_estimators[MLPClassifier()-check_estimators_nan_inf]#test_estimators[MLPClassifier()-check_estimators_overwrite_params]#test_estimators[MLPClassifier()-check_estimator_sparse_data]#test_estimators[MLPClassifier()-check_classifier_data_not_an_array]#test_estimators[MLPClassifier()-check_classifiers_one_label]#test_estimators[MLPClassifier()-check_estimators_partial_fit_n_features]#test_estimators[MLPClassifier()-check_supervised_y_2d]#test_estimators[MLPClassifier()-check_non_transformer_estimators_n_iter]#test_estimators[MLPClassifier()-check_fit2d_predict1d]#test_estimators[MLPClassifier()-check_methods_subset_invariance]#test_estimators[MLPClassifier()-check_dont_overwrite_parameters]#test_estimators[MLPClassifier()-check_fit_idempotent]#test_estimators[MLPClassifier()-check_n_features_in]#test_pipeline_memory#test_check_estimator_clones,,
706945708,706945709,43174,cac167244d9e8dc57087f63d55dadfc1bc0ce09c,python,unknown,2,python,"",false,,,,,,,,,"",,
706945708,706945712,43174,cac167244d9e8dc57087f63d55dadfc1bc0ce09c,python,unknown,3,python,"",false,,,,,,,,,"",,
707195953,707195954,43175,577f40231709204d9e9a89e13702bdce6057d6f6,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
707195953,707195955,43175,577f40231709204d9e9a89e13702bdce6057d6f6,python,unknown,2,python,"",false,,,,,,,,,"",,
707403071,707403072,43176,762904d5bcf27859514c21ce4be7c26fb5bb7770,python,unknown,2,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
707403071,707403074,43176,762904d5bcf27859514c21ce4be7c26fb5bb7770,python,unknown,3,python,"",false,,,,,,,,,"",,
707700063,707700067,43177,4746e2117a5a05bac0c6d4e67486b0db93f11417,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
707700063,707700070,43177,4746e2117a5a05bac0c6d4e67486b0db93f11417,python,unknown,2,python,"",false,,,,,,,,,"",,
708050699,708050700,43178,94a9f9a0b04703ae98d61a7e9a98a4dcaac548e8,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
708050699,708050701,43178,94a9f9a0b04703ae98d61a7e9a98a4dcaac548e8,python,unknown,3,python,"",false,,,,,,,,,"",,
708385274,708385278,43179,e97fd14239e9ab241a78904add6f621308f0d0a7,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
708385274,708385280,43179,e97fd14239e9ab241a78904add6f621308f0d0a7,python,unknown,3,python,"",false,,,,,,,,,"",,
708820363,708820365,43180,9acfaab9667c038686ef51881adce72721ede377,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
708820363,708820366,43180,9acfaab9667c038686ef51881adce72721ede377,python,unknown,3,python,"",false,,,,,,,,,"",,
709248794,709248798,43181,0cfe98b9f81463143675793e5b4b11268b2cf857,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
709248794,709248802,43181,0cfe98b9f81463143675793e5b4b11268b2cf857,python,unknown,3,python,"",false,,,,,,,,,"",,
709523380,709523381,43182,0550793bd61b84beb60d3a92c3eb90cc788a27a8,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
709523380,709523382,43182,0550793bd61b84beb60d3a92c3eb90cc788a27a8,python,unknown,3,python,"",false,,,,,,,,,"",,
709740102,709740103,43183,0550793bd61b84beb60d3a92c3eb90cc788a27a8,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
709740102,709740104,43183,0550793bd61b84beb60d3a92c3eb90cc788a27a8,python,unknown,3,python,"",false,,,,,,,,,"",,
710073996,710073997,43184,1bd869ae420ad362f0ea69aa574a2088ec7fc655,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
710073996,710073998,43184,1bd869ae420ad362f0ea69aa574a2088ec7fc655,python,unknown,3,python,"",false,,,,,,,,,"",,
710455681,710455682,43185,ae0d5355160f23f23db4121e6a1fa93c75111b86,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
710455681,710455683,43185,ae0d5355160f23f23db4121e6a1fa93c75111b86,python,unknown,3,python,"",false,,,,,,,,,"",,
710814514,710814515,43186,effc4364508288b0410967c5c2786f1b27b76185,python,unknown,4,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
710814514,710814516,43186,effc4364508288b0410967c5c2786f1b27b76185,python,unknown,4,python,"",false,,,,,,,,,"",,
711165719,711165720,43187,12781810421fd02d087c23eca5a70595ca46ed3d,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
711165719,711165721,43187,12781810421fd02d087c23eca5a70595ca46ed3d,python,unknown,2,python,"",false,,,,,,,,,"",,
711524956,711524960,43188,12781810421fd02d087c23eca5a70595ca46ed3d,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_k_means_fit_predict[0-2-1e-07-asarray-float32-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float32-full]#test_k_means_fit_predict[1-2-0.1-asarray-float32-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float64-full]#test_k_means_fit_predict[1-2-0.1-asarray-float64-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float32-full]#test_k_means_fit_predict[4-300-0.1-asarray-float32-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float64-full]#test_k_means_fit_predict[4-300-0.1-asarray-float64-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-elkan]#test_full_vs_elkan#test_fetch_openml_iris_pandas#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_check_array_pandas_dtype_casting,,
711524956,711524962,43188,12781810421fd02d087c23eca5a70595ca46ed3d,python,unknown,3,python,"",false,,,,,,,,,"",,
711763196,711763197,43189,d0102912cea7b84e2c8ddc0f4f35e0106ec908ae,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_k_means_fit_predict[0-2-1e-07-asarray-float32-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float32-full]#test_k_means_fit_predict[1-2-0.1-asarray-float32-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float64-full]#test_k_means_fit_predict[1-2-0.1-asarray-float64-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float32-full]#test_k_means_fit_predict[4-300-0.1-asarray-float32-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float64-full]#test_k_means_fit_predict[4-300-0.1-asarray-float64-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-elkan]#test_full_vs_elkan#test_fetch_openml_iris_pandas#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_check_array_pandas_dtype_casting,,
711763196,711763198,43189,d0102912cea7b84e2c8ddc0f4f35e0106ec908ae,python,unknown,3,python,"",false,,,,,,,,,"",,
711892001,711892002,43190,9278d73c5d566a6faee992147a7e93675bc107d1,python,unknown,1,python,"",false,,,,,,,,,test_agglomerative_clustering#test_k_means_fit_predict[0-2-1e-07-asarray-float32-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float32-full]#test_k_means_fit_predict[1-2-0.1-asarray-float32-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float64-full]#test_k_means_fit_predict[1-2-0.1-asarray-float64-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float32-full]#test_k_means_fit_predict[4-300-0.1-asarray-float32-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float64-full]#test_k_means_fit_predict[4-300-0.1-asarray-float64-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-elkan]#test_full_vs_elkan#test_fetch_openml_iris_pandas#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_check_array_pandas_dtype_casting,,
711898167,711898168,43191,57759a0f6fc95ce7f95cf353a3937db03a9eddfa,python,unknown,0,python,"",false,,,,,,,,,test_agglomerative_clustering#test_full_vs_elkan#test_fetch_openml_iris_pandas#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_check_array_pandas_dtype_casting,,
711898734,711898735,43192,727802a3b189192f50e4f85bc86f7d9cdd2c3e47,python,unknown,0,python,"",false,,,,,,,,,test_agglomerative_clustering#test_full_vs_elkan#test_fetch_openml_iris_pandas#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_check_array_pandas_dtype_casting,,
711899358,711899359,43193,56e301a3fb73e5a83b1ddf1c75894c54e22da230,python,unknown,3,python,"",false,,,,,,,,,"",,
711899645,711899646,43194,c0a07efecab37c9d8eb03372ca360b3f2b8b35c8,python,unknown,3,python,"",false,,,,,,,,,"",,
711899742,711899743,43195,c0a513fdf24c5e4b67648897731ec4780a4272fa,python,unknown,3,python,"",false,,,,,,,,,"",,
711900119,711900120,43196,cc40ef12a3ddd3b10a7fdc90738c71b65b5c6bce,python,timeout,3,python,"",false,,,,,,,,,"",,
711902770,711902771,43197,71e07080b2ccc60b299c8a02bd55af42c18eb2c1,python,timeout,3,python,"",false,,,,,,,,,"",,
711908082,711908083,43198,a9fdb6d30575e75fbb8a2181b12233c12b4449c6,python,unknown,4,python,"",false,,,,,,,,,test_20news_length_consistency#test_shuffle#test_20news#[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
711925593,711925603,43199,96c2aed4a0d1061b3d603fdfc892ea44345dc8a4,python,unknown,4,python,"",false,,,,,,,,,"",,
711929096,711929097,43200,531d2d14df1c7968468b4fe47d563679fbb830b7,python,unknown,5,python,"",false,,,,,,,,,"",,
711929209,711929210,43201,89f4df27774f5f4465e2a4312c228ec78c03f232,python,unknown,4,python,"",false,,,,,,,,,test_shuffle#[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
711930060,711930061,43202,e48158a4f65edb02ebcbbf8b3fda231ee28df5f0,python,unknown,1,python,"",false,,,,,,,,,test_agglomerative_clustering#test_k_means_fit_predict[0-2-1e-07-asarray-float32-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float32-full]#test_k_means_fit_predict[1-2-0.1-asarray-float32-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float64-full]#test_k_means_fit_predict[1-2-0.1-asarray-float64-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float32-full]#test_k_means_fit_predict[4-300-0.1-asarray-float32-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float64-full]#test_k_means_fit_predict[4-300-0.1-asarray-float64-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-elkan]#test_full_vs_elkan#test_fetch_openml_iris_pandas#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_check_array_pandas_dtype_casting,,
711960911,711960912,43203,1b45ff767e3a9d08a836596f3dfacfad3e2ba1b6,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_k_means_fit_predict[0-2-1e-07-asarray-float32-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float32-full]#test_k_means_fit_predict[1-2-0.1-asarray-float32-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float64-full]#test_k_means_fit_predict[1-2-0.1-asarray-float64-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float32-full]#test_k_means_fit_predict[4-300-0.1-asarray-float32-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float64-full]#test_k_means_fit_predict[4-300-0.1-asarray-float64-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-elkan]#test_full_vs_elkan#test_fetch_openml_iris_pandas#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_check_array_pandas_dtype_casting,,
711960911,711960913,43203,1b45ff767e3a9d08a836596f3dfacfad3e2ba1b6,python,unknown,2,python,"",false,,,,,,,,,"",,
711966114,711966115,43204,7ce7f92d2fe82079bf6d3c317c39fe8d5d793968,python,unknown,4,python,"",false,,,,,,,,,"",,
711968436,711968437,43205,f6322163e4ce3890da2b7553a92d03c6bfca75f2,python,unknown,4,python,"",false,,,,,,,,,"",,
711968764,711968765,43206,05c2cf51786e251f058ac7216fbe2a2ebcf1ec7f,python,unknown,4,python,"",false,,,,,,,,,"",,
711968956,711968957,43207,cd50ad8fb94e5f78e35289aa410ac353b42db045,python,unknown,4,python,"",false,,,,,,,,,"",,
711973112,711973113,43208,0d0d405186e598bdcd249019d0572f5c4bc67905,python,unknown,4,python,"",false,,,,,,,,,test_common_check_as_frame[fetch_covtype-fetch_covtype]#[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
712131042,712131043,43209,d2c1f455c59994991b096c21334784ce84fa110d,python,unknown,5,python,"",false,,,,,,,,,[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
712140646,712140647,43210,a0d4e685b8482cdf9126dc00e6a97e6b1175ed0f,python,unknown,6,python,"",false,,,,,,,,,[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
712162949,712162950,43211,a664ed8b12b9f37d61104ca0f2686faa35ffcf3f,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
712252083,712252084,43212,25b73e8f4f37df267a17267b01b9b74a1c9edb0f,python,unknown,4,python,"",false,,,,,,,,,"",,
712260695,712260696,43213,62750560994256efe07c9a150bb829d6a1d36fdb,python,timeout,4,python,"",false,,,,,,,,,[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
712268755,712268757,43214,f642ff79fd2d8bf3c41e54a03ee9aeec502732da,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_k_means_fit_predict[0-2-1e-07-asarray-float32-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float32-full]#test_k_means_fit_predict[1-2-0.1-asarray-float32-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float64-full]#test_k_means_fit_predict[1-2-0.1-asarray-float64-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float32-full]#test_k_means_fit_predict[4-300-0.1-asarray-float32-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float64-full]#test_k_means_fit_predict[4-300-0.1-asarray-float64-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-elkan]#test_full_vs_elkan#test_fetch_openml_iris_pandas#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_check_array_pandas_dtype_casting,,
712268755,712268758,43214,f642ff79fd2d8bf3c41e54a03ee9aeec502732da,python,unknown,3,python,"",false,,,,,,,,,"",,
712279205,712279206,43215,8c4e344c939610023bdb3128c2cea1947fb9890b,python,unknown,4,python,"",false,,,,,,,,,[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
712468426,712468427,43216,c2cb21b6aaf58dd27e31aadedce87020891ba31b,python,unknown,4,python,"",false,,,,,,,,,"",,
712477702,712477703,43217,3c12d8aba04a12b72ac87a6ae479ab9deb3c711d,python,ok,4,python,"",false,,,,,,,,,"",,
712537954,712537955,43218,058b6735b613dfab7b18c00d4c20b7519b45f652,python,unknown,5,python,"",false,,,,,,,,,"",,
712547261,712547262,43219,349a15ec82042be3b9fab6f9edb7970fba02235e,python,unknown,4,python,"",false,,,,,,,,,"",,
712547913,712547914,43220,1cf86cab9b6c4b4fd81e0aea091bab2e304ae1c3,python,unknown,4,python,"",false,,,,,,,,,"",,
712630303,712630304,43221,fc06baef499b8e0a6d677d4a19fa983f173ad06c,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_k_means_fit_predict[0-2-1e-07-asarray-float32-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float32-full]#test_k_means_fit_predict[1-2-0.1-asarray-float32-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float64-full]#test_k_means_fit_predict[1-2-0.1-asarray-float64-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float32-full]#test_k_means_fit_predict[4-300-0.1-asarray-float32-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float64-full]#test_k_means_fit_predict[4-300-0.1-asarray-float64-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-elkan]#test_full_vs_elkan#test_fetch_openml_iris_pandas#test_fetch_openml_iris_multitarget_pandas#test_fetch_openml_cpu_pandas#test_fetch_openml_titanic_pandas#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones#test_check_array_pandas_dtype_casting,,
712630303,712630305,43221,fc06baef499b8e0a6d677d4a19fa983f173ad06c,python,unknown,3,python,"",false,,,,,,,,,"",,
712830876,712830877,43222,79ac5140b8242f72a19288669928ef5d41905281,python,unknown,4,python,"",false,,,,,,,,,"",,
712834841,712834842,43223,f06fcadd66cb9de3f609cc5731e005057a44effd,python,unknown,4,python,"",false,,,,,,,,,"",,
712856786,712856787,43224,838982c3e19cd8a2442810b4316b50f9541dd8d9,python,timeout,4,python,"",false,,,,,,,,,"",,
712952955,712952956,43225,0b19f6ff40d4cac38e39b2454d43d700c2981986,python,unknown,4,python,"",false,,,,,,,,,"",,
712955865,712955866,43226,31e0885051d4d6bf75ba8c69ebc3843f17412c9d,python,unknown,5,python,"",false,,,,,,,,,test_set_faulthandler,,
712989989,712989994,43227,f0da528b92ef72229e66e2c7fb779fe9324add90,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_k_means_fit_predict[0-2-1e-07-asarray-float32-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float32-full]#test_k_means_fit_predict[1-2-0.1-asarray-float32-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float64-full]#test_k_means_fit_predict[1-2-0.1-asarray-float64-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float32-full]#test_k_means_fit_predict[4-300-0.1-asarray-float32-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float64-full]#test_k_means_fit_predict[4-300-0.1-asarray-float64-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-elkan]#test_full_vs_elkan#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
712989989,712989995,43227,f0da528b92ef72229e66e2c7fb779fe9324add90,python,unknown,3,python,"",false,,,,,,,,,"",,
713196993,713196994,43228,99ddd9c9aacde849a642b0fb8f232c590cfcede6,python,unknown,5,python,"",false,,,,,,,,,test_set_faulthandler,,
713198325,713198326,43229,ad3a1b07b7d141356aa8fcf3403d06d79ece2019,python,unknown,6,python,"",false,,,,,,,,,test_set_faulthandler,,
713199679,713199680,43230,4a363fffba3368cc5e4e2d5d8d4cabc44ee1f401,python,unknown,4,python,"",false,,,,,,,,,test_set_faulthandler,,
713202216,713202217,43231,8c7a94a92a470225f46efd819b01d5f9790e7941,python,unknown,5,python,"",false,,,,,,,,,test_set_faulthandler,,
713205197,713205198,43232,5fd893a10d6da965fcc0b5a405ae62fefbe830b7,python,unknown,4,python,"",false,,,,,,,,,test_set_faulthandler,,
713208689,713208690,43233,878385a64a6dce269be1eaf910320d9661107c66,python,unknown,6,python,"",false,,,,,,,,,test_set_faulthandler,,
713211092,713211093,43234,347fe68ae2ce8bdeb69ab571cb11fb0574febca1,python,unknown,4,python,"",false,,,,,,,,,test_set_faulthandler,,
713212427,713212428,43235,cfbefeaeb68db91470bb13278838d065c898e4c8,python,unknown,4,python,"",false,,,,,,,,,test_set_faulthandler#setup.py,,
713238252,713238253,43236,46275eed5638690c0534dd956f787bbd027ded13,python,unknown,4,python,"",false,,,,,,,,,test_set_faulthandler,,
713272890,713272891,43237,1c457e41b9bded1ec93a5fd811d1871a7595e62c,python,unknown,4,python,"",false,,,,,,,,,test_set_faulthandler,,
713275698,713275699,43238,15e167bb71f10c02dab388fdeec271cb81c00a35,python,unknown,6,python,"",false,,,,,,,,,[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
713284894,713284895,43239,29f0dd02080245af29237c97bb1fecd76dd0adaa,python,unknown,4,python,"",false,,,,,,,,,"",,
713293054,713293055,43240,9e0f74c6611ae99b084b7faec7d74d0a51b6f6f1,python,unknown,4,python,"",false,,,,,,,,,[doctest] sklearn.ensemble._gb.GradientBoostingClassifier,,
713306666,713306667,43241,0c1a795acd7b7aa648c6630ed1e01d0044c4f993,python,unknown,4,python,"",false,,,,,,,,,"",,
713310556,713310557,43242,85e49be1179a36871ffd0f0e2dcce9762f4bd9ee,python,ok,7,python,"",false,,,,,,,,,"",,
713339625,713339626,43243,3931d10fe9092120b5562abb6e618faac19af70d,python,ok,7,python,"",false,,,,,,,,,"",,
713349404,713349406,43244,670314535de319d0375e340c6a635f2664bceac1,python,unknown,1,python,"",false,,,,,,,,,test_agglomerative_clustering#test_full_vs_elkan#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
713349404,713349407,43244,670314535de319d0375e340c6a635f2664bceac1,python,unknown,1,python,"",false,,,,,,,,,"",,
713349404,713349408,43244,670314535de319d0375e340c6a635f2664bceac1,python,ok,5,python,"",false,,,,,,,,,"",,
713371540,713371541,43245,e68d260b9d080c80da8ab4b6fca8fe4aec6870b1,python,ok,4,python,"",false,,,,,,,,,"",,
713384419,713384420,43246,2f6e22b39841678286c6cc9c1842e6c695ed10b6,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_k_means_fit_predict[0-2-1e-07-asarray-float32-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-full]#test_k_means_fit_predict[0-2-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[0-2-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float32-full]#test_k_means_fit_predict[1-2-0.1-asarray-float32-elkan]#test_k_means_fit_predict[1-2-0.1-asarray-float64-full]#test_k_means_fit_predict[1-2-0.1-asarray-float64-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[1-2-0.1-csr_matrix-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-full]#test_k_means_fit_predict[3-300-1e-07-asarray-float64-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float32-elkan]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-full]#test_k_means_fit_predict[3-300-1e-07-csr_matrix-float64-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float32-full]#test_k_means_fit_predict[4-300-0.1-asarray-float32-elkan]#test_k_means_fit_predict[4-300-0.1-asarray-float64-full]#test_k_means_fit_predict[4-300-0.1-asarray-float64-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float32-elkan]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-full]#test_k_means_fit_predict[4-300-0.1-csr_matrix-float64-elkan]#test_full_vs_elkan#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_predict_proba_binary#test_predict_proba_multiclass#test_predict_proba_multilabel#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
713384419,713384421,43246,2f6e22b39841678286c6cc9c1842e6c695ed10b6,python,unknown,2,python,"",false,,,,,,,,,"",,
713705619,713705620,43247,753f4ca1255e2e1c8f13cc1b468504ad88745089,python,ok,25,python,"",false,,,,,,,,,"",,
713757927,713757928,43248,19d7b1f06263d3f28a1ad011d85f439fc26dea53,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_full_vs_elkan#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
713757927,713757929,43248,19d7b1f06263d3f28a1ad011d85f439fc26dea53,python,unknown,3,python,"",false,,,,,,,,,"",,
713757927,713757930,43248,19d7b1f06263d3f28a1ad011d85f439fc26dea53,python,unknown,12,python,"",false,,,,,,,,,[doctest] sgd.rst,,
714035679,714035683,43249,320b4c61f97fec3facc3c4c2b4cf9351d3425b44,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_full_vs_elkan#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
714035679,714035684,43249,320b4c61f97fec3facc3c4c2b4cf9351d3425b44,python,unknown,2,python,"",false,,,,,,,,,"",,
714035679,714035685,43249,320b4c61f97fec3facc3c4c2b4cf9351d3425b44,python,unknown,11,python,"",false,,,,,,,,,[doctest] sgd.rst,,
714242318,714242319,43250,2e9dbe64122e13aae25af15ce180047e168250d8,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_full_vs_elkan#test_bootstrap_samples#test_spectral_embedding_two_components#test_exactly_zero_info_score#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
714242318,714242320,43250,2e9dbe64122e13aae25af15ce180047e168250d8,python,unknown,3,python,"",false,,,,,,,,,"",,
714242318,714242321,43250,2e9dbe64122e13aae25af15ce180047e168250d8,python,ok,7,python,"",false,,,,,,,,,"",,
714546085,714546088,43251,cf30ec876c38894a52f0bedcf461ca31df79f356,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_exactly_zero_info_score#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
714546085,714546089,43251,cf30ec876c38894a52f0bedcf461ca31df79f356,python,unknown,3,python,"",false,,,,,,,,,"",,
714546085,714546092,43251,cf30ec876c38894a52f0bedcf461ca31df79f356,python,ok,12,python,"",false,,,,,,,,,"",,
714881909,714881910,43252,c5ef2e985c13119001aa697e446ebb3dbcb326e5,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_exactly_zero_info_score#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
714881909,714881911,43252,c5ef2e985c13119001aa697e446ebb3dbcb326e5,python,unknown,3,python,"",false,,,,,,,,,"",,
714881909,714881912,43252,c5ef2e985c13119001aa697e446ebb3dbcb326e5,python,unknown,7,python,"",false,,,,,,,,,[doctest] sgd.rst,,
715223833,715223835,43253,b2a7d3646d406b50dd46bab0cc685971601a3de3,python,unknown,4,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_exactly_zero_info_score#test_estimators[Lars()-check_estimators_overwrite_params]#test_estimators[LarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLars()-check_estimators_overwrite_params]#test_estimators[LassoLarsCV()-check_estimators_overwrite_params]#test_estimators[LassoLarsIC()-check_estimators_overwrite_params]#test_pipeline_memory#test_check_estimator_clones,,
715223833,715223837,43253,b2a7d3646d406b50dd46bab0cc685971601a3de3,python,unknown,3,python,"",false,,,,,,,,,"",,
715223833,715223839,43253,b2a7d3646d406b50dd46bab0cc685971601a3de3,python,ok,9,python,"",false,,,,,,,,,"",,
715573093,715573094,43254,fd653f8f3e6cf81f755b86b4b420e02a59298158,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_exactly_zero_info_score#test_pipeline_memory#test_check_estimator_clones,,
715573093,715573096,43254,fd653f8f3e6cf81f755b86b4b420e02a59298158,python,unknown,3,python,"",false,,,,,,,,,"",,
715573093,715573097,43254,fd653f8f3e6cf81f755b86b4b420e02a59298158,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
715910879,715910880,43255,c3effe4bea436afe63c046528cdd0b74af9cd077,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_exactly_zero_info_score#test_pipeline_memory#test_check_estimator#test_check_estimator_clones,,
715910879,715910881,43255,c3effe4bea436afe63c046528cdd0b74af9cd077,python,unknown,3,python,"",false,,,,,,,,,"",,
715910879,715910882,43255,c3effe4bea436afe63c046528cdd0b74af9cd077,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
716152884,716152885,43256,603d05b22b94e7b1694539e1751f9a917bbe5628,python,unknown,3,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_exactly_zero_info_score#test_pipeline_memory#test_check_estimator#test_check_estimator_clones,,
716152884,716152887,43256,603d05b22b94e7b1694539e1751f9a917bbe5628,python,unknown,3,python,"",false,,,,,,,,,"",,
716152884,716152892,43256,603d05b22b94e7b1694539e1751f9a917bbe5628,python,unknown,10,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
716325143,716325144,43257,ca24e16ca226d066220dfda15c213b970c0930c3,python,ok,11,python,unittest,true,false,38,0,38,4,,,,"",306.45000000000005,
716325143,716325145,43257,ca24e16ca226d066220dfda15c213b970c0930c3,python,unknown,10,python,"",false,,,,,,,,,"",,
716325143,716325146,43257,ca24e16ca226d066220dfda15c213b970c0930c3,python,unknown,10,python,"",false,,,,,,,,,"",,
716325143,716325147,43257,ca24e16ca226d066220dfda15c213b970c0930c3,python,unknown,10,python,"",false,,,,,,,,,"",,
716325143,716325148,43257,ca24e16ca226d066220dfda15c213b970c0930c3,python,unknown,10,python,"",false,,,,,,,,,"",,
716325143,716325149,43257,ca24e16ca226d066220dfda15c213b970c0930c3,python,unknown,10,python,"",false,,,,,,,,,"",,
716334671,716334673,43258,173cf5352cc69f92aea42816e7e40c63dd79d1ae,python,unknown,3,python,"",false,,,,,,,,,"",,
716334671,716334674,43258,173cf5352cc69f92aea42816e7e40c63dd79d1ae,python,unknown,3,python,"",false,,,,,,,,,"",,
716334671,716334675,43258,173cf5352cc69f92aea42816e7e40c63dd79d1ae,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
716630598,716630599,43259,1ac9d6817da4d54d07f11e538d3447290cedfca3,python,unknown,3,python,"",false,,,,,,,,,"",,
716630598,716630603,43259,1ac9d6817da4d54d07f11e538d3447290cedfca3,python,unknown,3,python,"",false,,,,,,,,,"",,
716630598,716630604,43259,1ac9d6817da4d54d07f11e538d3447290cedfca3,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
716986398,716986400,43260,618e6258751b20cd65514c69a473816b60ad0992,python,unknown,3,python,"",false,,,,,,,,,"",,
716986398,716986401,43260,618e6258751b20cd65514c69a473816b60ad0992,python,unknown,3,python,"",false,,,,,,,,,"",,
716986398,716986402,43260,618e6258751b20cd65514c69a473816b60ad0992,python,unknown,12,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
717280712,717280713,43261,e217b68fd00bb7c54b81a492ee6f9db6498517fa,python,unknown,9,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
717322986,717322990,43262,e217b68fd00bb7c54b81a492ee6f9db6498517fa,python,unknown,3,python,"",false,,,,,,,,,"",,
717322986,717322992,43262,e217b68fd00bb7c54b81a492ee6f9db6498517fa,python,unknown,3,python,"",false,,,,,,,,,"",,
717322986,717322996,43262,e217b68fd00bb7c54b81a492ee6f9db6498517fa,python,unknown,9,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
717658012,717658016,43263,8c74d98a3e286f67b268a2ffaef3afb6610d3c85,python,unknown,3,python,"",false,,,,,,,,,"",,
717658012,717658019,43263,8c74d98a3e286f67b268a2ffaef3afb6610d3c85,python,unknown,3,python,"",false,,,,,,,,,"",,
717658012,717658020,43263,8c74d98a3e286f67b268a2ffaef3afb6610d3c85,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
717980221,717980222,43264,2c0bd624ac6862af35ae9b1af8f3786d538f6b93,python,unknown,3,python,"",false,,,,,,,,,"",,
717980221,717980223,43264,2c0bd624ac6862af35ae9b1af8f3786d538f6b93,python,unknown,3,python,"",false,,,,,,,,,"",,
717980221,717980224,43264,2c0bd624ac6862af35ae9b1af8f3786d538f6b93,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
718215244,718215246,43265,bdf2ff576341ca95356e8a841ef64a0e28b1191e,python,unknown,3,python,"",false,,,,,,,,,"",,
718215244,718215248,43265,bdf2ff576341ca95356e8a841ef64a0e28b1191e,python,unknown,3,python,"",false,,,,,,,,,"",,
718215244,718215249,43265,bdf2ff576341ca95356e8a841ef64a0e28b1191e,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
718393506,718393507,43266,41d648ef8863e6cadcb6c0a13f66dda7d0e9ea89,python,unknown,3,python,"",false,,,,,,,,,"",,
718393506,718393508,43266,41d648ef8863e6cadcb6c0a13f66dda7d0e9ea89,python,unknown,2,python,"",false,,,,,,,,,"",,
718393506,718393509,43266,41d648ef8863e6cadcb6c0a13f66dda7d0e9ea89,python,unknown,10,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
718695331,718695332,43267,e0abd262ea3328f44ae8e612f5b2f2cece7434b6,python,unknown,3,python,"",false,,,,,,,,,"",,
718695331,718695333,43267,e0abd262ea3328f44ae8e612f5b2f2cece7434b6,python,unknown,3,python,"",false,,,,,,,,,"",,
718695331,718695334,43267,e0abd262ea3328f44ae8e612f5b2f2cece7434b6,python,unknown,12,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
719026005,719026006,43268,d5ae541a0924736c0126e8c951555823d6b518f8,python,unknown,3,python,"",false,,,,,,,,,"",,
719026005,719026007,43268,d5ae541a0924736c0126e8c951555823d6b518f8,python,unknown,3,python,"",false,,,,,,,,,"",,
719026005,719026008,43268,d5ae541a0924736c0126e8c951555823d6b518f8,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
719345648,719345649,43269,395d6c171f6c087875184262c7ba57289e80ba1a,python,unknown,3,python,"",false,,,,,,,,,"",,
719345648,719345650,43269,395d6c171f6c087875184262c7ba57289e80ba1a,python,unknown,3,python,"",false,,,,,,,,,"",,
719345648,719345651,43269,395d6c171f6c087875184262c7ba57289e80ba1a,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
719679122,719679126,43270,ee09b2a7eeaebd35e3ea02507bc46728adced627,python,unknown,3,python,"",false,,,,,,,,,"",,
719679122,719679130,43270,ee09b2a7eeaebd35e3ea02507bc46728adced627,python,unknown,3,python,"",false,,,,,,,,,"",,
719679122,719679132,43270,ee09b2a7eeaebd35e3ea02507bc46728adced627,python,unknown,9,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
719996354,719996356,43271,a8bf63a8ed6bb86eee1b9d0052da66a6eda4e21c,python,unknown,3,python,"",false,,,,,,,,,"",,
719996354,719996358,43271,a8bf63a8ed6bb86eee1b9d0052da66a6eda4e21c,python,unknown,3,python,"",false,,,,,,,,,"",,
719996354,719996359,43271,a8bf63a8ed6bb86eee1b9d0052da66a6eda4e21c,python,unknown,12,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
720232723,720232724,43272,c6579afdc474e75686a1797d1322cfc3d6aaa601,python,unknown,3,python,"",false,,,,,,,,,"",,
720232723,720232725,43272,c6579afdc474e75686a1797d1322cfc3d6aaa601,python,unknown,3,python,"",false,,,,,,,,,"",,
720232723,720232726,43272,c6579afdc474e75686a1797d1322cfc3d6aaa601,python,unknown,9,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
720418494,720418495,43273,e2ed74b734cfc8297a12770427bc6be6e38ed70f,python,unknown,4,python,"",false,,,,,,,,,"",,
720418494,720418496,43273,e2ed74b734cfc8297a12770427bc6be6e38ed70f,python,unknown,3,python,"",false,,,,,,,,,"",,
720418494,720418497,43273,e2ed74b734cfc8297a12770427bc6be6e38ed70f,python,unknown,12,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
720718246,720718248,43274,80c06fb3bf3ddbf3fded77fab43df24c17131c1a,python,unknown,3,python,"",false,,,,,,,,,"",,
720718246,720718249,43274,80c06fb3bf3ddbf3fded77fab43df24c17131c1a,python,unknown,4,python,"",false,,,,,,,,,"",,
720718246,720718255,43274,80c06fb3bf3ddbf3fded77fab43df24c17131c1a,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
721070088,721070092,43275,f1fe8378068f388959841acaf8b78143770795f0,python,unknown,3,python,"",false,,,,,,,,,"",,
721070088,721070093,43275,f1fe8378068f388959841acaf8b78143770795f0,python,unknown,3,python,"",false,,,,,,,,,"",,
721070088,721070094,43275,f1fe8378068f388959841acaf8b78143770795f0,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
721413749,721413750,43276,8ba49f628092fe3fb1deea101910006aa6c76d49,python,unknown,3,python,"",false,,,,,,,,,"",,
721413749,721413751,43276,8ba49f628092fe3fb1deea101910006aa6c76d49,python,unknown,3,python,"",false,,,,,,,,,"",,
721413749,721413752,43276,8ba49f628092fe3fb1deea101910006aa6c76d49,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
721761426,721761427,43277,138dd7b88f1634447f838bc58088e594ffaf5549,python,unknown,3,python,"",false,,,,,,,,,"",,
721761426,721761428,43277,138dd7b88f1634447f838bc58088e594ffaf5549,python,unknown,3,python,"",false,,,,,,,,,"",,
721761426,721761429,43277,138dd7b88f1634447f838bc58088e594ffaf5549,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
721761801,721761802,43278,db50f2ba319feb47ee9f82260f9a1a32368c3319,python,unknown,62,python,"",false,,,,,,,,,"",,
722088393,722088396,43279,576775d6d15b7b69aebd2c464d932c28722eb4a0,python,unknown,3,python,"",false,,,,,,,,,"",,
722088393,722088398,43279,576775d6d15b7b69aebd2c464d932c28722eb4a0,python,unknown,3,python,"",false,,,,,,,,,"",,
722088393,722088399,43279,576775d6d15b7b69aebd2c464d932c28722eb4a0,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
722323151,722323153,43280,192c2333fe2f4f435ed1577784d69ccf8736e064,python,unknown,3,python,"",false,,,,,,,,,"",,
722323151,722323154,43280,192c2333fe2f4f435ed1577784d69ccf8736e064,python,unknown,2,python,"",false,,,,,,,,,"",,
722323151,722323155,43280,192c2333fe2f4f435ed1577784d69ccf8736e064,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
722347214,722347215,43281,573288d1da644e4cbb04083ea5b4108758fad240,python,unknown,0,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
722514310,722514312,43282,192c2333fe2f4f435ed1577784d69ccf8736e064,python,unknown,3,python,"",false,,,,,,,,,"",,
722514310,722514313,43282,192c2333fe2f4f435ed1577784d69ccf8736e064,python,unknown,2,python,"",false,,,,,,,,,"",,
722514310,722514314,43282,192c2333fe2f4f435ed1577784d69ccf8736e064,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
722698282,722698283,43283,ad04857090542dfd1b6cc0cf3d5eb4cc2c5f1848,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
722803772,722803774,43284,8061aace11e36c9f5384e0bde723e0a98b81a1bd,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
722803772,722803775,43284,8061aace11e36c9f5384e0bde723e0a98b81a1bd,python,unknown,3,python,"",false,,,,,,,,,"",,
722803772,722803776,43284,8061aace11e36c9f5384e0bde723e0a98b81a1bd,python,unknown,9,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
723159860,723159861,43285,3254e98a79e5c1172c794ad38f222dc45f0fb65c,python,unknown,2,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
723159860,723159862,43285,3254e98a79e5c1172c794ad38f222dc45f0fb65c,python,unknown,3,python,"",false,,,,,,,,,"",,
723159860,723159864,43285,3254e98a79e5c1172c794ad38f222dc45f0fb65c,python,unknown,9,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
723518561,723518563,43286,74590c8fd5e6579dc4cba0ef0181c4e8ea56ed90,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
723518561,723518567,43286,74590c8fd5e6579dc4cba0ef0181c4e8ea56ed90,python,unknown,5,python,"",false,,,,,,,,,"",,
723518561,723518568,43286,74590c8fd5e6579dc4cba0ef0181c4e8ea56ed90,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
723858884,723858885,43287,7bbd0d56530ad3758841595d81ab8deed069879d,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
723858884,723858886,43287,7bbd0d56530ad3758841595d81ab8deed069879d,python,unknown,3,python,"",false,,,,,,,,,"",,
723858884,723858887,43287,7bbd0d56530ad3758841595d81ab8deed069879d,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
724212671,724212672,43288,44df47abc374d824ac25d8482ff9925b33677c00,python,unknown,0,python,"",false,,,,,,,,,"",,
724238818,724238819,43289,5a73abc3e93627b3ec0b55a9393faa9751cefd2b,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
724238818,724238820,43289,5a73abc3e93627b3ec0b55a9393faa9751cefd2b,python,unknown,3,python,"",false,,,,,,,,,"",,
724238818,724238821,43289,5a73abc3e93627b3ec0b55a9393faa9751cefd2b,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
724498738,724498739,43290,92e74700b3119befc649dfc9c060d98b0000e0de,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
724498738,724498740,43290,92e74700b3119befc649dfc9c060d98b0000e0de,python,unknown,3,python,"",false,,,,,,,,,"",,
724498738,724498741,43290,92e74700b3119befc649dfc9c060d98b0000e0de,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
724691551,724691554,43291,92e74700b3119befc649dfc9c060d98b0000e0de,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
724691551,724691555,43291,92e74700b3119befc649dfc9c060d98b0000e0de,python,unknown,3,python,"",false,,,,,,,,,"",,
724691551,724691556,43291,92e74700b3119befc649dfc9c060d98b0000e0de,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
724996517,724996518,43292,a27add7e0b2b50e251e02798aeb8061c74fdf550,python,unknown,4,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
724996517,724996519,43292,a27add7e0b2b50e251e02798aeb8061c74fdf550,python,unknown,3,python,"",false,,,,,,,,,"",,
724996517,724996520,43292,a27add7e0b2b50e251e02798aeb8061c74fdf550,python,unknown,10,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
725312628,725312629,43293,5b29166fe975dd7f21eec137d8e54c0e926d6b8f,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
725312628,725312630,43293,5b29166fe975dd7f21eec137d8e54c0e926d6b8f,python,unknown,3,python,"",false,,,,,,,,,"",,
725312628,725312631,43293,5b29166fe975dd7f21eec137d8e54c0e926d6b8f,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
725658140,725658142,43294,0a5af0d2a11c64d59381110f3967acbe7d88a031,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
725658140,725658143,43294,0a5af0d2a11c64d59381110f3967acbe7d88a031,python,unknown,3,python,"",false,,,,,,,,,"",,
725658140,725658145,43294,0a5af0d2a11c64d59381110f3967acbe7d88a031,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
726005515,726005516,43295,d2cd2540418d3ff66b324ec18566dbe0b5991b40,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
726005515,726005517,43295,d2cd2540418d3ff66b324ec18566dbe0b5991b40,python,unknown,3,python,"",false,,,,,,,,,"",,
726005515,726005518,43295,d2cd2540418d3ff66b324ec18566dbe0b5991b40,python,ok,7,python,"",false,,,,,,,,,"",,
726353162,726353165,43296,d2cd2540418d3ff66b324ec18566dbe0b5991b40,python,unknown,4,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
726353162,726353168,43296,d2cd2540418d3ff66b324ec18566dbe0b5991b40,python,unknown,3,python,"",false,,,,,,,,,"",,
726353162,726353170,43296,d2cd2540418d3ff66b324ec18566dbe0b5991b40,python,unknown,7,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
726608005,726608006,43297,373946ec9e3c72116bfbf7fab051cf4797d13e0f,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
726608005,726608007,43297,373946ec9e3c72116bfbf7fab051cf4797d13e0f,python,unknown,3,python,"",false,,,,,,,,,"",,
726608005,726608008,43297,373946ec9e3c72116bfbf7fab051cf4797d13e0f,python,unknown,7,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
726799693,726799699,43298,373946ec9e3c72116bfbf7fab051cf4797d13e0f,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
726799693,726799703,43298,373946ec9e3c72116bfbf7fab051cf4797d13e0f,python,unknown,3,python,"",false,,,,,,,,,"",,
726799693,726799704,43298,373946ec9e3c72116bfbf7fab051cf4797d13e0f,python,unknown,7,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
727108308,727108309,43299,19eb458567fec216584015c1156d6451d949f2de,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
727108308,727108310,43299,19eb458567fec216584015c1156d6451d949f2de,python,unknown,3,python,"",false,,,,,,,,,"",,
727108308,727108311,43299,19eb458567fec216584015c1156d6451d949f2de,python,unknown,5,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
727439661,727439662,43300,68fb4db2cc1c04c7a570423de21ec94b117232af,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
727439661,727439663,43300,68fb4db2cc1c04c7a570423de21ec94b117232af,python,unknown,3,python,"",false,,,,,,,,,"",,
727439661,727439669,43300,68fb4db2cc1c04c7a570423de21ec94b117232af,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
727773723,727773724,43301,ab3dc9fdf31f35854b390168ac68fb304951305f,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
727773723,727773725,43301,ab3dc9fdf31f35854b390168ac68fb304951305f,python,unknown,3,python,"",false,,,,,,,,,"",,
727773723,727773726,43301,ab3dc9fdf31f35854b390168ac68fb304951305f,python,unknown,4,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
728088612,728088614,43302,80f588ac9cc5d6893a2372433b2aee12614836a6,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
728088612,728088616,43302,80f588ac9cc5d6893a2372433b2aee12614836a6,python,unknown,3,python,"",false,,,,,,,,,"",,
728088612,728088617,43302,80f588ac9cc5d6893a2372433b2aee12614836a6,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
728392878,728392879,43303,f7ca39813aeef03b3ce5f8008409db9705c68f3a,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
728392878,728392880,43303,f7ca39813aeef03b3ce5f8008409db9705c68f3a,python,unknown,3,python,"",false,,,,,,,,,"",,
728392878,728392881,43303,f7ca39813aeef03b3ce5f8008409db9705c68f3a,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
728606047,728606049,43304,8b68ea165cb11625254d17c73603c4724d0b6d21,python,unknown,2,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
728606047,728606050,43304,8b68ea165cb11625254d17c73603c4724d0b6d21,python,unknown,2,python,"",false,,,,,,,,,"",,
728606047,728606051,43304,8b68ea165cb11625254d17c73603c4724d0b6d21,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
728779599,728779600,43305,8b68ea165cb11625254d17c73603c4724d0b6d21,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter#test_multi_thread_multi_class_and_early_stopping#test_multi_core_gridsearch_and_early_stopping,,
728779599,728779601,43305,8b68ea165cb11625254d17c73603c4724d0b6d21,python,unknown,3,python,"",false,,,,,,,,,"",,
728779599,728779602,43305,8b68ea165cb11625254d17c73603c4724d0b6d21,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
729063622,729063623,43306,06d6f8a9f6e3d847b9db79a5fdebe64f78deef7f,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
729063622,729063624,43306,06d6f8a9f6e3d847b9db79a5fdebe64f78deef7f,python,unknown,3,python,"",false,,,,,,,,,"",,
729063622,729063625,43306,06d6f8a9f6e3d847b9db79a5fdebe64f78deef7f,python,unknown,8,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
729375726,729375727,43307,28d84693b3855e9a1bf02b61392fb9f31055e897,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
729375726,729375728,43307,28d84693b3855e9a1bf02b61392fb9f31055e897,python,unknown,3,python,"",false,,,,,,,,,"",,
729375726,729375729,43307,28d84693b3855e9a1bf02b61392fb9f31055e897,python,unknown,9,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
729694881,729694882,43308,54ce4222694819ad52d544ce5cba5da274c34ab7,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
729694881,729694883,43308,54ce4222694819ad52d544ce5cba5da274c34ab7,python,unknown,3,python,"",false,,,,,,,,,"",,
729694881,729694884,43308,54ce4222694819ad52d544ce5cba5da274c34ab7,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
730017316,730017317,43309,896d4fad106c8f1d745923d544b44a0707103aa2,python,unknown,4,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
730017316,730017318,43309,896d4fad106c8f1d745923d544b44a0707103aa2,python,unknown,3,python,"",false,,,,,,,,,"",,
730017316,730017319,43309,896d4fad106c8f1d745923d544b44a0707103aa2,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
730325776,730325777,43310,bc39e62e02b9de82c2a266bb47beac4687843b51,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
730325776,730325778,43310,bc39e62e02b9de82c2a266bb47beac4687843b51,python,unknown,3,python,"",false,,,,,,,,,"",,
730325776,730325779,43310,bc39e62e02b9de82c2a266bb47beac4687843b51,python,unknown,10,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
730539031,730539032,43311,df61e9ed98b0777cc0962be6e2d161f4c30110fd,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
730539031,730539033,43311,df61e9ed98b0777cc0962be6e2d161f4c30110fd,python,unknown,4,python,"",false,,,,,,,,,"",,
730539031,730539034,43311,df61e9ed98b0777cc0962be6e2d161f4c30110fd,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
730738159,730738160,43312,df61e9ed98b0777cc0962be6e2d161f4c30110fd,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
730738159,730738161,43312,df61e9ed98b0777cc0962be6e2d161f4c30110fd,python,unknown,3,python,"",false,,,,,,,,,"",,
730738159,730738162,43312,df61e9ed98b0777cc0962be6e2d161f4c30110fd,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
731031812,731031813,43313,339fe04e32199617800afc19d44bfa323cdcd292,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
731031812,731031816,43313,339fe04e32199617800afc19d44bfa323cdcd292,python,unknown,3,python,"",false,,,,,,,,,"",,
731031812,731031817,43313,339fe04e32199617800afc19d44bfa323cdcd292,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
731350125,731350126,43314,f605021e003ee6cdd2590907cb58cd643297d387,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
731350125,731350127,43314,f605021e003ee6cdd2590907cb58cd643297d387,python,unknown,3,python,"",false,,,,,,,,,"",,
731350125,731350128,43314,f605021e003ee6cdd2590907cb58cd643297d387,python,unknown,11,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
731672309,731672312,43315,21121f50997dba43fffbfecb2f672431cf708363,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_pandas_dependency_message#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient,,
731672309,731672314,43315,21121f50997dba43fffbfecb2f672431cf708363,python,unknown,3,python,"",false,,,,,,,,,"",,
731672309,731672315,43315,21121f50997dba43fffbfecb2f672431cf708363,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
732012319,732012320,43316,f7a8dd2877c90249506ac8ad0a3eea7306636105,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_pandas_dependency_message#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient,,
732012319,732012321,43316,f7a8dd2877c90249506ac8ad0a3eea7306636105,python,unknown,3,python,"",false,,,,,,,,,"",,
732012319,732012322,43316,f7a8dd2877c90249506ac8ad0a3eea7306636105,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
732327970,732327971,43317,2538489f4ad39d6e32ef4c2fa6297263a26e16ce,python,unknown,4,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
732327970,732327972,43317,2538489f4ad39d6e32ef4c2fa6297263a26e16ce,python,unknown,3,python,"",false,,,,,,,,,"",,
732327970,732327973,43317,2538489f4ad39d6e32ef4c2fa6297263a26e16ce,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
732555945,732555946,43318,aa4a10dbfaee9fd52af06f0f0c8e8ae77f243ef6,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
732555945,732555947,43318,aa4a10dbfaee9fd52af06f0f0c8e8ae77f243ef6,python,unknown,3,python,"",false,,,,,,,,,"",,
732555945,732555948,43318,aa4a10dbfaee9fd52af06f0f0c8e8ae77f243ef6,python,unknown,13,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
732753513,732753518,43319,aa4a10dbfaee9fd52af06f0f0c8e8ae77f243ef6,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
732753513,732753519,43319,aa4a10dbfaee9fd52af06f0f0c8e8ae77f243ef6,python,unknown,3,python,"",false,,,,,,,,,"",,
732753513,732753520,43319,aa4a10dbfaee9fd52af06f0f0c8e8ae77f243ef6,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
733041751,733041752,43320,0864c5896804bc1066c02bcb1443c962cabdc420,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
733041751,733041754,43320,0864c5896804bc1066c02bcb1443c962cabdc420,python,unknown,3,python,"",false,,,,,,,,,"",,
733041751,733041755,43320,0864c5896804bc1066c02bcb1443c962cabdc420,python,unknown,10,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
733405071,733405072,43321,ca0065d3bf6f7577c64a10c0ef5a18f4c2e74cf5,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
733405071,733405073,43321,ca0065d3bf6f7577c64a10c0ef5a18f4c2e74cf5,python,unknown,3,python,"",false,,,,,,,,,"",,
733405071,733405074,43321,ca0065d3bf6f7577c64a10c0ef5a18f4c2e74cf5,python,unknown,7,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
733735407,733735408,43322,f2635e27894e6fc8c15b13284d3b277dfde65d71,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
733735407,733735409,43322,f2635e27894e6fc8c15b13284d3b277dfde65d71,python,unknown,3,python,"",false,,,,,,,,,"",,
733735407,733735410,43322,f2635e27894e6fc8c15b13284d3b277dfde65d71,python,ok,8,python,"",false,,,,,,,,,"",,
734050453,734050454,43323,548a4524b43f2e63d8eeb1ea75c052d4d4bf6dd8,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
734050453,734050455,43323,548a4524b43f2e63d8eeb1ea75c052d4d4bf6dd8,python,unknown,8,python,"",false,,,,,,,,,"",,
734050453,734050456,43323,548a4524b43f2e63d8eeb1ea75c052d4d4bf6dd8,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
734362595,734362600,43324,193670c2a17c6a76f852e21cfafb954d195c9d29,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
734362595,734362602,43324,193670c2a17c6a76f852e21cfafb954d195c9d29,python,unknown,3,python,"",false,,,,,,,,,"",,
734362595,734362604,43324,193670c2a17c6a76f852e21cfafb954d195c9d29,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
734420204,734420205,43325,8be932519c44054a7e14e1018cd55a7311a3851d,python,unknown,1,python,"",false,,,,,,,,,"",,
734447010,734447011,43326,172f82aff2d9ba9e0c6b5cfacc4e3839391ac1d9,python,unknown,0,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
734594921,734594922,43327,193670c2a17c6a76f852e21cfafb954d195c9d29,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
734594921,734594923,43327,193670c2a17c6a76f852e21cfafb954d195c9d29,python,unknown,3,python,"",false,,,,,,,,,"",,
734594921,734594924,43327,193670c2a17c6a76f852e21cfafb954d195c9d29,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
734782334,734782335,43328,e6555decf8a72958d26d499deb17aabca41a562a,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
734782334,734782336,43328,e6555decf8a72958d26d499deb17aabca41a562a,python,unknown,3,python,"",false,,,,,,,,,"",,
734782334,734782337,43328,e6555decf8a72958d26d499deb17aabca41a562a,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
735086490,735086491,43329,ed4e539237da1c07fcbf7b412727a8e407edcb35,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
735086490,735086492,43329,ed4e539237da1c07fcbf7b412727a8e407edcb35,python,unknown,3,python,"",false,,,,,,,,,"",,
735086490,735086493,43329,ed4e539237da1c07fcbf7b412727a8e407edcb35,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
735469110,735469113,43330,1f217f33a25e6033bd0160ee22695186e12e7744,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
735469110,735469114,43330,1f217f33a25e6033bd0160ee22695186e12e7744,python,unknown,4,python,"",false,,,,,,,,,"",,
735469110,735469115,43330,1f217f33a25e6033bd0160ee22695186e12e7744,python,unknown,9,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
735796775,735796776,43331,cd673475bde70e87255ccd9b6f35687ce59b4b67,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
735796775,735796778,43331,cd673475bde70e87255ccd9b6f35687ce59b4b67,python,unknown,3,python,"",false,,,,,,,,,"",,
735796775,735796780,43331,cd673475bde70e87255ccd9b6f35687ce59b4b67,python,unknown,9,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
736111940,736111941,43332,8e527294ca95d128b24fd68f9e2aba4d02c6142f,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
736111940,736111942,43332,8e527294ca95d128b24fd68f9e2aba4d02c6142f,python,unknown,3,python,"",false,,,,,,,,,"",,
736111940,736111943,43332,8e527294ca95d128b24fd68f9e2aba4d02c6142f,python,unknown,7,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
736440937,736440938,43333,5654da026b7f1186b3a840d1cb140b6598b0af61,python,unknown,4,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
736440937,736440939,43333,5654da026b7f1186b3a840d1cb140b6598b0af61,python,unknown,3,python,"",false,,,,,,,,,"",,
736440937,736440940,43333,5654da026b7f1186b3a840d1cb140b6598b0af61,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
736665036,736665037,43334,5654da026b7f1186b3a840d1cb140b6598b0af61,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
736665036,736665038,43334,5654da026b7f1186b3a840d1cb140b6598b0af61,python,unknown,3,python,"",false,,,,,,,,,"",,
736665036,736665039,43334,5654da026b7f1186b3a840d1cb140b6598b0af61,python,unknown,10,python,"",false,,,,,,,,,[doctest] supervised_learning.rst#[doctest] sgd.rst,,
736857961,736857963,43335,5654da026b7f1186b3a840d1cb140b6598b0af61,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
736857961,736857966,43335,5654da026b7f1186b3a840d1cb140b6598b0af61,python,unknown,3,python,"",false,,,,,,,,,"",,
736857961,736857967,43335,5654da026b7f1186b3a840d1cb140b6598b0af61,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
737134661,737134662,43336,aa91705aee2a604a23d256b80db336e175d11cc7,python,unknown,0,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
737147959,737147960,43337,3ba09faca6fc93c04d16aa16e46b18d2e9f0d749,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
737147959,737147961,43337,3ba09faca6fc93c04d16aa16e46b18d2e9f0d749,python,unknown,3,python,"",false,,,,,,,,,"",,
737147959,737147962,43337,3ba09faca6fc93c04d16aa16e46b18d2e9f0d749,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
737458430,737458431,43338,583b1496565730c25fc3df5330a5ccc3722c230b,python,unknown,1,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_fetch_kddcup99_percent10[None-494021-41-True]#test_fetch_kddcup99_percent10[SA-100655-41-True]#test_fetch_kddcup99_percent10[SF-73237-4-True]#test_fetch_kddcup99_percent10[http-58725-3-True]#test_fetch_kddcup99_percent10[smtp-9571-3-True]#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2]#test_large_regularization[l1]#test_large_regularization[elasticnet]#test_tol_parameter,,
737481027,737481028,43339,160debe468890e1dd90b610d5505eb118481cbcf,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
737481027,737481029,43339,160debe468890e1dd90b610d5505eb118481cbcf,python,unknown,5,python,"",false,,,,,,,,,"",,
737481027,737481030,43339,160debe468890e1dd90b610d5505eb118481cbcf,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
737788430,737788431,43340,d933c20befea779f9bfd35b4d85adaed9c30d684,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
737788430,737788432,43340,d933c20befea779f9bfd35b4d85adaed9c30d684,python,unknown,3,python,"",false,,,,,,,,,"",,
737788430,737788433,43340,d933c20befea779f9bfd35b4d85adaed9c30d684,python,unknown,10,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
738095404,738095410,43341,28f61efad3c4ce6536176978aef0fc857a35ff7b,python,unknown,4,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
738095404,738095411,43341,28f61efad3c4ce6536176978aef0fc857a35ff7b,python,unknown,3,python,"",false,,,,,,,,,"",,
738095404,738095412,43341,28f61efad3c4ce6536176978aef0fc857a35ff7b,python,unknown,9,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
738377479,738377481,43342,7dbcf6254f699a136160c1ca4103e73ac4a4fa7d,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
738377479,738377482,43342,7dbcf6254f699a136160c1ca4103e73ac4a4fa7d,python,unknown,3,python,"",false,,,,,,,,,"",,
738377479,738377484,43342,7dbcf6254f699a136160c1ca4103e73ac4a4fa7d,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
738584849,738584850,43343,f1111be2fa9899a610843c36d203b0fab02f16c3,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
738584849,738584851,43343,f1111be2fa9899a610843c36d203b0fab02f16c3,python,unknown,3,python,"",false,,,,,,,,,"",,
738584849,738584852,43343,f1111be2fa9899a610843c36d203b0fab02f16c3,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
738680145,738680146,43344,2315e4b3e01fbd362f3114b0e971fd4c44adbf5b,python,ok,1,python,"",false,,,,,,,,,"",,
738680658,738680659,43345,19ccbf9c8451f2b814cc137df20293b553f22a73,python,unknown,2,python,"",false,,,,,,,,,test_seq_dataset_basic_iteration[make_dense_dataset_32]#test_seq_dataset_basic_iteration[make_dense_dataset_64]#test_seq_dataset_shuffle[make_dense_dataset_32-make_sparse_dataset_32]#test_seq_dataset_shuffle[make_dense_dataset_64-make_sparse_dataset_64]#test_fused_types_consistency[make_dense_dataset_32-make_dense_dataset_64],,
738760459,738760460,43346,f1111be2fa9899a610843c36d203b0fab02f16c3,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
738760459,738760461,43346,f1111be2fa9899a610843c36d203b0fab02f16c3,python,unknown,3,python,"",false,,,,,,,,,"",,
738760459,738760462,43346,f1111be2fa9899a610843c36d203b0fab02f16c3,python,unknown,11,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
739045594,739045595,43347,547feabbb02de7da88bbc692e7b81419e373a0cb,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
739045594,739045596,43347,547feabbb02de7da88bbc692e7b81419e373a0cb,python,unknown,3,python,"",false,,,,,,,,,"",,
739045594,739045599,43347,547feabbb02de7da88bbc692e7b81419e373a0cb,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
739364337,739364338,43348,dccaf4c867c5ba254b1bd576101d30df40c00760,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_fused_types_make_dataset#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_consistency_path#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient#test_large_regularization[l2],,
739364337,739364340,43348,dccaf4c867c5ba254b1bd576101d30df40c00760,python,unknown,3,python,"",false,,,,,,,,,"",,
739364337,739364341,43348,dccaf4c867c5ba254b1bd576101d30df40c00760,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
739681371,739681372,43349,f9e0b7d55fbba59c77063280afff6fb962e4bea9,python,unknown,3,python,"",false,,,,,,,,,"",,
739681371,739681373,43349,f9e0b7d55fbba59c77063280afff6fb962e4bea9,python,unknown,3,python,"",false,,,,,,,,,"",,
739681371,739681374,43349,f9e0b7d55fbba59c77063280afff6fb962e4bea9,python,unknown,9,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
739984155,739984156,43350,4c547b6def1da548bf6f7d2d65c48dc741badd31,python,unknown,3,python,"",false,,,,,,,,,"",,
739984155,739984157,43350,4c547b6def1da548bf6f7d2d65c48dc741badd31,python,unknown,3,python,"",false,,,,,,,,,"",,
739984155,739984158,43350,4c547b6def1da548bf6f7d2d65c48dc741badd31,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
740132866,740132867,43351,845f2512ec8cb17c527f2ad6f3eec47213fdd8d5,python,unknown,0,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_base_estimator#test_oob_score_consistency#test_max_samples_consistency#test_base#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_gridsearch#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#test_anisotropic_kernel#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_convergence_warning#test_fused_types_make_dataset#test_huber_max_iter#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_sparsify#test_consistency_path#test_logistic_regression_path_convergence_fail#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_warm_start[multinomial-False-False-lbfgs]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier],,
740137226,740137227,43352,cb9e08050651610443a16881b1ba8835d2313b4e,python,unknown,0,python,"",false,,,,,,,,,[doctest] sklearn.cluster._optics.OPTICS#test_dbscan_feature#test_dbscan_sparse#test_dbscan_sparse_precomputed[False]#test_dbscan_sparse_precomputed[True]#test_dbscan_sparse_precomputed_different_eps#test_dbscan_no_core_samples#test_dbscan_callable#test_dbscan_metric_params#test_dbscan_balltree#test_weighted_dbscan#test_dbscan_core_samples_toy[kd_tree]#test_dbscan_core_samples_toy[ball_tree]#test_agglomerative_clustering#test_connectivity_callable#test_connectivity_ignores_diagonal#test_compute_full_tree#test_estimate_bandwidth#test_mean_shift[1.2-True-3-0]#test_mean_shift[1.2-False-4--1]#test_parallel#test_meanshift_predict#test_meanshift_all_orphans#test_max_iter[1]#test_max_iter[100]#test_mean_shift_zero_bandwidth#test_extract_xi#test_cluster_hierarchy_#test_correct_number_of_clusters#test_bad_extract#test_bad_reachability#test_close_extract#test_dbscan_optics_parity[3-0.1]#test_dbscan_optics_parity[3-0.3]#test_dbscan_optics_parity[3-0.5]#test_dbscan_optics_parity[10-0.1]#test_dbscan_optics_parity[10-0.3]#test_dbscan_optics_parity[10-0.5]#test_dbscan_optics_parity[20-0.1]#test_dbscan_optics_parity[20-0.3]#test_dbscan_optics_parity[20-0.5]#test_min_samples_edge_case#test_min_cluster_size[2]#test_min_cluster_size_invalid[0]#test_min_cluster_size_invalid[-1]#test_min_cluster_size_invalid[1.1]#test_min_cluster_size_invalid[2.2]#test_min_cluster_size_invalid2#test_compare_to_ELKI#test_extract_dbscan#test_precomputed_nearest_neighbors_filtering#test_classification#test_regression#test_bootstrap_samples#test_single_estimator#test_oob_score_consistency#test_max_samples_consistency#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_gridsearch#[doctest] sklearn.feature_selection._sequential.SequentialFeatureSelector#test_mutual_info_classif#test_mutual_info_regression#test_compute_mi_cc#test_compute_mi_cd#test_compute_mi_cd_unique_label#test_mutual_info_regression#test_mutual_info_classif_mixed#test_mutual_info_options#test_anisotropic_kernel#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_warm_start[True]#test_warm_start[False]#test_convergence_warning#test_huber_max_iter#test_predict_iris#test_sparsify#test_logistic_regression_path_convergence_fail#test_ovr_multinomial_iris#test_max_iter#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-lbfgs]#test_transform#test_pipeline#test_pipeline_with_nearest_neighbors_transformer#test_different_metric#test_isomap_clone_bug#test_lle_simple_grid#test_lle_manifold#test_pipeline#test_singular_matrix#test_precomputed_nearest_neighbors_filtering#test_pipeline_spectral_clustering#test_binary_search_neighbors#test_binary_perplexity_stability#test_trustworthiness#test_preserve_trustworthiness_approximately[random-exact]#test_preserve_trustworthiness_approximately[random-barnes_hut]#test_preserve_trustworthiness_approximately[pca-exact]#test_preserve_trustworthiness_approximately[pca-barnes_hut]#test_optimization_minimizes_kl_divergence#test_fit_csr_matrix[exact]#test_fit_csr_matrix[barnes_hut]#test_preserve_trustworthiness_approximately_with_precomputed_distances#test_trustworthiness_not_euclidean_metric#test_early_exaggeration_used#test_n_iter_used#test_kl_divergence_not_nan[barnes_hut]#test_barnes_hut_angle#test_uniform_grid[barnes_hut]#test_uniform_grid[exact]#test_gradient_bh_multithread_match_sequential#test_exactly_zero_info_score#test_not_symmetric_metric[precision_recall_curve]#test_binary_sample_weight_invariance[precision_recall_curve]#test_pairwise_parallel[float64-array-pairwise_distances-wminkowski-kwds1]#test_pairwise_parallel[float64-array-pairwise_distances-wminkowski-kwds2]#test_pairwise_parallel[int-array-pairwise_distances-wminkowski-kwds1]#test_pairwise_parallel[int-array-pairwise_distances-wminkowski-kwds2]#test_pairwise_parallel[int-csr_matrix-pairwise_distances-wminkowski-kwds1]#test_multimetric_scorer_calls_method_once_classifier_no_decision#test_gridsearch_no_predict#test_search_cv_score_samples_method[search_cv0]#test_search_cv_score_samples_method[search_cv1]#test_cross_val_score_multilabel#test_cross_val_score_failing_scorer[nan]#test_cross_val_score_failing_scorer[0]#test_cross_val_score_failing_scorer[raise]#test_cross_validate_failing_scorer[False-True-nan]#test_cross_validate_failing_scorer[False-True-0]#test_cross_validate_failing_scorer[False-True-raise]#test_cross_validate_failing_scorer[False-False-nan]#test_cross_validate_failing_scorer[False-False-0]#test_cross_validate_failing_scorer[False-False-raise]#test_cross_validate_failing_scorer[True-True-nan]#test_cross_validate_failing_scorer[True-True-0]#test_cross_validate_failing_scorer[True-True-raise]#test_cross_validate_failing_scorer[True-False-nan]#test_cross_validate_failing_scorer[True-False-0]#test_cross_validate_failing_scorer[True-False-raise]#[doctest] sklearn.neighbors._classification.RadiusNeighborsClassifier#[doctest] sklearn.neighbors._kde.KernelDensity#[doctest] sklearn.neighbors._nca.NeighborhoodComponentsAnalysis#[doctest] sklearn.neighbors._regression.RadiusNeighborsRegressor#test_ball_tree_query_metrics[matching]#test_ball_tree_query_metrics[jaccard]#test_ball_tree_query_metrics[dice]#test_ball_tree_query_metrics[kulsinski]#test_ball_tree_query_metrics[rogerstanimoto]#test_ball_tree_query_metrics[russellrao]#test_ball_tree_query_metrics[sokalmichener]#test_ball_tree_query_metrics[sokalsneath]#test_ball_tree_query_metrics[hamming]#test_ball_tree_query_metrics[canberra]#test_ball_tree_query_metrics[braycurtis]#test_query_haversine#test_cdist[wminkowski]#test_pdist[wminkowski]#test_bad_pyfunc_metric#test_transformer_result#test_explicit_diagonal#test_kernel_density[0.01-gaussian]#test_kernel_density[0.01-tophat]#test_kernel_density[0.01-epanechnikov]#test_kernel_density[0.01-exponential]#test_kernel_density[0.01-linear]#test_kernel_density[0.01-cosine]#test_kernel_density[0.1-gaussian]#test_kernel_density[0.1-tophat]#test_kernel_density[0.1-epanechnikov]#test_kernel_density[0.1-exponential]#test_kernel_density[0.1-linear]#test_kernel_density[0.1-cosine]#test_kernel_density[1-gaussian]#test_kernel_density[1-tophat]#test_kernel_density[1-epanechnikov]#test_kernel_density[1-exponential]#test_kernel_density[1-linear]#test_kernel_density[1-cosine]#test_kernel_density_sampling#test_kde_algorithm_metric_choice[euclidean-auto]#test_kde_algorithm_metric_choice[euclidean-ball_tree]#test_kde_algorithm_metric_choice[euclidean-kd_tree]#test_kde_algorithm_metric_choice[minkowski-auto]#test_kde_algorithm_metric_choice[minkowski-ball_tree]#test_kde_algorithm_metric_choice[minkowski-kd_tree]#test_kde_algorithm_metric_choice[manhattan-auto]#test_kde_algorithm_metric_choice[manhattan-ball_tree]#test_kde_algorithm_metric_choice[manhattan-kd_tree]#test_kde_algorithm_metric_choice[chebyshev-auto]#test_kde_algorithm_metric_choice[chebyshev-ball_tree]#test_kde_algorithm_metric_choice[chebyshev-kd_tree]#test_kde_algorithm_metric_choice[haversine-auto]#test_kde_algorithm_metric_choice[haversine-ball_tree]#test_kde_pipeline_gridsearch#test_kde_sample_weights#test_pickling[None]#test_pickling[sample_weight1]#test_lof_performance#test_lof_precomputed#test_novelty_errors#test_novelty_training_scores#test_novelty_true_common_tests#test_predicted_outlier_number[30]#test_predicted_outlier_number[53]#test_unsupervised_kneighbors#test_unsupervised_inputs[KNeighborsClassifier]#test_unsupervised_inputs[KNeighborsRegressor]#test_unsupervised_inputs[NearestNeighbors]#test_precomputed_dense#test_precomputed_sparse_knn[csr]#test_precomputed_sparse_knn[lil]#test_precomputed_sparse_radius[csr]#test_precomputed_sparse_radius[lil]#test_precomputed_cross_validation#test_unsupervised_radius_neighbors#test_kneighbors_classifier#test_kneighbors_classifier_float_labels#test_kneighbors_classifier_predict_proba#test_radius_neighbors_classifier#test_radius_neighbors_classifier_when_no_neighbors#test_radius_neighbors_classifier_outlier_labeling#test_radius_neighbors_classifier_zero_distance#test_neighbors_regressors_zero_distance#test_radius_neighbors_boundary_handling#test_radius_neighbors_sort_results[ball_tree-euclidean]#test_radius_neighbors_sort_results[kd_tree-euclidean]#test_RadiusNeighborsClassifier_multioutput#test_KNeighborsClassifier_multioutput#test_kneighbors_regressor#test_KNeighborsRegressor_multioutput_uniform_weight#test_kneighbors_regressor_multioutput#test_radius_neighbors_regressor#test_RadiusNeighborsRegressor_multioutput_with_uniform_weight#test_RadiusNeighborsRegressor_multioutput#test_neighbors_iris#test_kneighbors_graph_sparse#test_neighbors_badargs#test_neighbors_metrics#test_callable_metric#test_valid_brute_metric_for_auto_algorithm#test_predict_sparse_ball_kd_tree#test_k_and_radius_neighbors_train_is_not_query#test_k_and_radius_neighbors_X_None#test_k_and_radius_neighbors_duplicates#test_same_knn_parallel[ball_tree]#test_same_knn_parallel[kd_tree]#test_same_knn_parallel[auto]#test_same_radius_neighbors_parallel[ball_tree]#test_same_radius_neighbors_parallel[kd_tree]#test_same_radius_neighbors_parallel[auto]#test_knn_forcing_backend[ball_tree-multiprocessing]#test_knn_forcing_backend[ball_tree-threading]#test_knn_forcing_backend[ball_tree-sequential]#test_knn_forcing_backend[ball_tree-loky]#test_knn_forcing_backend[ball_tree-testing]#test_knn_forcing_backend[kd_tree-multiprocessing]#test_knn_forcing_backend[kd_tree-threading]#test_knn_forcing_backend[kd_tree-sequential]#test_knn_forcing_backend[kd_tree-loky]#test_knn_forcing_backend[kd_tree-testing]#test_knn_forcing_backend[auto-multiprocessing]#test_knn_forcing_backend[auto-threading]#test_knn_forcing_backend[auto-sequential]#test_knn_forcing_backend[auto-loky]#test_knn_forcing_backend[auto-testing]#test_dtype_convert#test_pairwise_boolean_distance#test_radius_neighbors_predict_proba#test_pipeline_with_nearest_neighbors_transformer#test_auto_algorithm[X3-euclidean-None-kd_tree]#test_auto_algorithm[X4-seuclidean-metric_params4-ball_tree]#test_spectral_clustering#test_spectral_embedding#test_dbscan#test_isomap#test_lof_novelty_false#test_lof_novelty_true#test_kneighbors_regressor#test_kernel_density[True-1e-06-0-0.01-gaussian-KDTree]#test_kernel_density[True-1e-06-0-0.01-gaussian-BallTree]#test_kernel_density[True-1e-06-0-0.01-tophat-KDTree]#test_kernel_density[True-1e-06-0-0.01-tophat-BallTree]#test_kernel_density[True-1e-06-0-0.01-epanechnikov-KDTree]#test_kernel_density[True-1e-06-0-0.01-epanechnikov-BallTree]#test_kernel_density[True-1e-06-0-0.01-exponential-KDTree]#test_kernel_density[True-1e-06-0-0.01-exponential-BallTree]#test_kernel_density[True-1e-06-0-0.01-linear-KDTree]#test_kernel_density[True-1e-06-0-0.01-linear-BallTree]#test_kernel_density[True-1e-06-0-0.01-cosine-KDTree]#test_kernel_density[True-1e-06-0-0.01-cosine-BallTree]#test_kernel_density[True-1e-06-0-0.1-gaussian-KDTree]#test_kernel_density[True-1e-06-0-0.1-gaussian-BallTree]#test_kernel_density[True-1e-06-0-0.1-tophat-KDTree]#test_kernel_density[True-1e-06-0-0.1-tophat-BallTree]#test_kernel_density[True-1e-06-0-0.1-epanechnikov-KDTree]#test_kernel_density[True-1e-06-0-0.1-epanechnikov-BallTree]#test_kernel_density[True-1e-06-0-0.1-exponential-KDTree]#test_kernel_density[True-1e-06-0-0.1-exponential-BallTree]#test_kernel_density[True-1e-06-0-0.1-linear-KDTree]#test_kernel_density[True-1e-06-0-0.1-linear-BallTree]#test_kernel_density[True-1e-06-0-0.1-cosine-KDTree]#test_kernel_density[True-1e-06-0-0.1-cosine-BallTree]#test_kernel_density[True-1e-06-0-1-gaussian-KDTree]#test_kernel_density[True-1e-06-0-1-gaussian-BallTree]#test_kernel_density[True-1e-06-0-1-tophat-KDTree]#test_kernel_density[True-1e-06-0-1-tophat-BallTree]#test_kernel_density[True-1e-06-0-1-epanechnikov-KDTree]#test_kernel_density[True-1e-06-0-1-epanechnikov-BallTree]#test_kernel_density[True-1e-06-0-1-exponential-KDTree]#test_kernel_density[True-1e-06-0-1-exponential-BallTree]#test_kernel_density[True-1e-06-0-1-linear-KDTree]#test_kernel_density[True-1e-06-0-1-linear-BallTree]#test_kernel_density[True-1e-06-0-1-cosine-KDTree]#test_kernel_density[True-1e-06-0-1-cosine-BallTree]#test_kernel_density[True-1e-06-1e-05-0.01-gaussian-KDTree]#test_kernel_density[True-1e-06-1e-05-0.01-gaussian-BallTree]#test_kernel_density[True-1e-06-1e-05-0.01-tophat-KDTree]#test_kernel_density[True-1e-06-1e-05-0.01-tophat-BallTree]#test_kernel_density[True-1e-06-1e-05-0.01-epanechnikov-KDTree]#test_kernel_density[True-1e-06-1e-05-0.01-epanechnikov-BallTree]#test_kernel_density[True-1e-06-1e-05-0.01-exponential-KDTree]#test_kernel_density[True-1e-06-1e-05-0.01-exponential-BallTree]#test_kernel_density[True-1e-06-1e-05-0.01-linear-KDTree]#test_kernel_density[True-1e-06-1e-05-0.01-linear-BallTree]#test_kernel_density[True-1e-06-1e-05-0.01-cosine-KDTree]#test_kernel_density[True-1e-06-1e-05-0.01-cosine-BallTree]#test_kernel_density[True-1e-06-1e-05-0.1-gaussian-KDTree]#test_kernel_density[True-1e-06-1e-05-0.1-gaussian-BallTree]#test_kernel_density[True-1e-06-1e-05-0.1-tophat-KDTree]#test_kernel_density[True-1e-06-1e-05-0.1-tophat-BallTree]#test_kernel_density[True-1e-06-1e-05-0.1-epanechnikov-KDTree]#test_kernel_density[True-1e-06-1e-05-0.1-epanechnikov-BallTree]#test_kernel_density[True-1e-06-1e-05-0.1-exponential-KDTree]#test_kernel_density[True-1e-06-1e-05-0.1-exponential-BallTree]#test_kernel_density[True-1e-06-1e-05-0.1-linear-KDTree]#test_kernel_density[True-1e-06-1e-05-0.1-linear-BallTree]#test_kernel_density[True-1e-06-1e-05-0.1-cosine-KDTree]#test_kernel_density[True-1e-06-1e-05-0.1-cosine-BallTree]#test_kernel_density[True-1e-06-1e-05-1-gaussian-KDTree]#test_kernel_density[True-1e-06-1e-05-1-gaussian-BallTree]#test_kernel_density[True-1e-06-1e-05-1-tophat-KDTree]#test_kernel_density[True-1e-06-1e-05-1-tophat-BallTree]#test_kernel_density[True-1e-06-1e-05-1-epanechnikov-KDTree]#test_kernel_density[True-1e-06-1e-05-1-epanechnikov-BallTree]#test_kernel_density[True-1e-06-1e-05-1-exponential-KDTree]#test_kernel_density[True-1e-06-1e-05-1-exponential-BallTree]#test_kernel_density[True-1e-06-1e-05-1-linear-KDTree]#test_kernel_density[True-1e-06-1e-05-1-linear-BallTree]#test_kernel_density[True-1e-06-1e-05-1-cosine-KDTree]#test_kernel_density[True-1e-06-1e-05-1-cosine-BallTree]#test_kernel_density[True-0.01-0-0.01-gaussian-KDTree]#test_kernel_density[True-0.01-0-0.01-gaussian-BallTree]#test_kernel_density[True-0.01-0-0.01-tophat-KDTree]#test_kernel_density[True-0.01-0-0.01-tophat-BallTree]#test_kernel_density[True-0.01-0-0.01-epanechnikov-KDTree]#test_kernel_density[True-0.01-0-0.01-epanechnikov-BallTree]#test_kernel_density[True-0.01-0-0.01-exponential-KDTree]#test_kernel_density[True-0.01-0-0.01-exponential-BallTree]#test_kernel_density[True-0.01-0-0.01-linear-KDTree]#test_kernel_density[True-0.01-0-0.01-linear-BallTree]#test_kernel_density[True-0.01-0-0.01-cosine-KDTree]#test_kernel_density[True-0.01-0-0.01-cosine-BallTree]#test_kernel_density[True-0.01-0-0.1-gaussian-KDTree]#test_kernel_density[True-0.01-0-0.1-gaussian-BallTree]#test_kernel_density[True-0.01-0-0.1-tophat-KDTree]#test_kernel_density[True-0.01-0-0.1-tophat-BallTree]#test_kernel_density[True-0.01-0-0.1-epanechnikov-KDTree]#test_kernel_density[True-0.01-0-0.1-epanechnikov-BallTree]#test_kernel_density[True-0.01-0-0.1-exponential-KDTree]#test_kernel_density[True-0.01-0-0.1-exponential-BallTree]#test_kernel_density[True-0.01-0-0.1-linear-KDTree]#test_kernel_density[True-0.01-0-0.1-linear-BallTree]#test_kernel_density[True-0.01-0-0.1-cosine-KDTree]#test_kernel_density[True-0.01-0-0.1-cosine-BallTree]#test_kernel_density[True-0.01-0-1-gaussian-KDTree]#test_kernel_density[True-0.01-0-1-gaussian-BallTree]#test_kernel_density[True-0.01-0-1-tophat-KDTree]#test_kernel_density[True-0.01-0-1-tophat-BallTree]#test_kernel_density[True-0.01-0-1-epanechnikov-KDTree]#test_kernel_density[True-0.01-0-1-epanechnikov-BallTree]#test_kernel_density[True-0.01-0-1-exponential-KDTree]#test_kernel_density[True-0.01-0-1-exponential-BallTree]#test_kernel_density[True-0.01-0-1-linear-KDTree]#test_kernel_density[True-0.01-0-1-linear-BallTree]#test_kernel_density[True-0.01-0-1-cosine-KDTree]#test_kernel_density[True-0.01-0-1-cosine-BallTree]#test_kernel_density[True-0.01-1e-05-0.01-gaussian-KDTree]#test_kernel_density[True-0.01-1e-05-0.01-gaussian-BallTree]#test_kernel_density[True-0.01-1e-05-0.01-tophat-KDTree]#test_kernel_density[True-0.01-1e-05-0.01-tophat-BallTree]#test_kernel_density[True-0.01-1e-05-0.01-epanechnikov-KDTree]#test_kernel_density[True-0.01-1e-05-0.01-epanechnikov-BallTree]#test_kernel_density[True-0.01-1e-05-0.01-exponential-KDTree]#test_kernel_density[True-0.01-1e-05-0.01-exponential-BallTree]#test_kernel_density[True-0.01-1e-05-0.01-linear-KDTree]#test_kernel_density[True-0.01-1e-05-0.01-linear-BallTree]#test_kernel_density[True-0.01-1e-05-0.01-cosine-KDTree]#test_kernel_density[True-0.01-1e-05-0.01-cosine-BallTree]#test_kernel_density[True-0.01-1e-05-0.1-gaussian-KDTree]#test_kernel_density[True-0.01-1e-05-0.1-gaussian-BallTree]#test_kernel_density[True-0.01-1e-05-0.1-tophat-KDTree]#test_kernel_density[True-0.01-1e-05-0.1-tophat-BallTree]#test_kernel_density[True-0.01-1e-05-0.1-epanechnikov-KDTree]#test_kernel_density[True-0.01-1e-05-0.1-epanechnikov-BallTree]#test_kernel_density[True-0.01-1e-05-0.1-exponential-KDTree]#test_kernel_density[True-0.01-1e-05-0.1-exponential-BallTree]#test_kernel_density[True-0.01-1e-05-0.1-linear-KDTree]#test_kernel_density[True-0.01-1e-05-0.1-linear-BallTree]#test_kernel_density[True-0.01-1e-05-0.1-cosine-KDTree]#test_kernel_density[True-0.01-1e-05-0.1-cosine-BallTree]#test_kernel_density[True-0.01-1e-05-1-gaussian-KDTree]#test_kernel_density[True-0.01-1e-05-1-gaussian-BallTree]#test_kernel_density[True-0.01-1e-05-1-tophat-KDTree]#test_kernel_density[True-0.01-1e-05-1-tophat-BallTree]#test_kernel_density[True-0.01-1e-05-1-epanechnikov-KDTree]#test_kernel_density[True-0.01-1e-05-1-epanechnikov-BallTree]#test_kernel_density[True-0.01-1e-05-1-exponential-KDTree]#test_kernel_density[True-0.01-1e-05-1-exponential-BallTree]#test_kernel_density[True-0.01-1e-05-1-linear-KDTree]#test_kernel_density[True-0.01-1e-05-1-linear-BallTree]#test_kernel_density[True-0.01-1e-05-1-cosine-KDTree]#test_kernel_density[True-0.01-1e-05-1-cosine-BallTree]#test_kernel_density[False-1e-06-0-0.01-gaussian-KDTree]#test_kernel_density[False-1e-06-0-0.01-gaussian-BallTree]#test_kernel_density[False-1e-06-0-0.01-tophat-KDTree]#test_kernel_density[False-1e-06-0-0.01-tophat-BallTree]#test_kernel_density[False-1e-06-0-0.01-epanechnikov-KDTree]#test_kernel_density[False-1e-06-0-0.01-epanechnikov-BallTree]#test_kernel_density[False-1e-06-0-0.01-exponential-KDTree]#test_kernel_density[False-1e-06-0-0.01-exponential-BallTree]#test_kernel_density[False-1e-06-0-0.01-linear-KDTree]#test_kernel_density[False-1e-06-0-0.01-linear-BallTree]#test_kernel_density[False-1e-06-0-0.01-cosine-KDTree]#test_kernel_density[False-1e-06-0-0.01-cosine-BallTree]#test_kernel_density[False-1e-06-0-0.1-gaussian-KDTree]#test_kernel_density[False-1e-06-0-0.1-gaussian-BallTree]#test_kernel_density[False-1e-06-0-0.1-tophat-KDTree]#test_kernel_density[False-1e-06-0-0.1-tophat-BallTree]#test_kernel_density[False-1e-06-0-0.1-epanechnikov-KDTree]#test_kernel_density[False-1e-06-0-0.1-epanechnikov-BallTree]#test_kernel_density[False-1e-06-0-0.1-exponential-KDTree]#test_kernel_density[False-1e-06-0-0.1-exponential-BallTree]#test_kernel_density[False-1e-06-0-0.1-linear-KDTree]#test_kernel_density[False-1e-06-0-0.1-linear-BallTree]#test_kernel_density[False-1e-06-0-0.1-cosine-KDTree]#test_kernel_density[False-1e-06-0-0.1-cosine-BallTree]#test_kernel_density[False-1e-06-0-1-gaussian-KDTree]#test_kernel_density[False-1e-06-0-1-gaussian-BallTree]#test_kernel_density[False-1e-06-0-1-tophat-KDTree]#test_kernel_density[False-1e-06-0-1-tophat-BallTree]#test_kernel_density[False-1e-06-0-1-epanechnikov-KDTree]#test_kernel_density[False-1e-06-0-1-epanechnikov-BallTree]#test_kernel_density[False-1e-06-0-1-exponential-KDTree]#test_kernel_density[False-1e-06-0-1-exponential-BallTree]#test_kernel_density[False-1e-06-0-1-linear-KDTree]#test_kernel_density[False-1e-06-0-1-linear-BallTree]#test_kernel_density[False-1e-06-0-1-cosine-KDTree]#test_kernel_density[False-1e-06-0-1-cosine-BallTree]#test_kernel_density[False-1e-06-1e-05-0.01-gaussian-KDTree]#test_kernel_density[False-1e-06-1e-05-0.01-gaussian-BallTree]#test_kernel_density[False-1e-06-1e-05-0.01-tophat-KDTree]#test_kernel_density[False-1e-06-1e-05-0.01-tophat-BallTree]#test_kernel_density[False-1e-06-1e-05-0.01-epanechnikov-KDTree]#test_kernel_density[False-1e-06-1e-05-0.01-epanechnikov-BallTree]#test_kernel_density[False-1e-06-1e-05-0.01-exponential-KDTree]#test_kernel_density[False-1e-06-1e-05-0.01-exponential-BallTree]#test_kernel_density[False-1e-06-1e-05-0.01-linear-KDTree]#test_kernel_density[False-1e-06-1e-05-0.01-linear-BallTree]#test_kernel_density[False-1e-06-1e-05-0.01-cosine-KDTree]#test_kernel_density[False-1e-06-1e-05-0.01-cosine-BallTree]#test_kernel_density[False-1e-06-1e-05-0.1-gaussian-KDTree]#test_kernel_density[False-1e-06-1e-05-0.1-gaussian-BallTree]#test_kernel_density[False-1e-06-1e-05-0.1-tophat-KDTree]#test_kernel_density[False-1e-06-1e-05-0.1-tophat-BallTree]#test_kernel_density[False-1e-06-1e-05-0.1-epanechnikov-KDTree]#test_kernel_density[False-1e-06-1e-05-0.1-epanechnikov-BallTree]#test_kernel_density[False-1e-06-1e-05-0.1-exponential-KDTree]#test_kernel_density[False-1e-06-1e-05-0.1-exponential-BallTree]#test_kernel_density[False-1e-06-1e-05-0.1-linear-KDTree]#test_kernel_density[False-1e-06-1e-05-0.1-linear-BallTree]#test_kernel_density[False-1e-06-1e-05-0.1-cosine-KDTree]#test_kernel_density[False-1e-06-1e-05-0.1-cosine-BallTree]#test_kernel_density[False-1e-06-1e-05-1-gaussian-KDTree]#test_kernel_density[False-1e-06-1e-05-1-gaussian-BallTree]#test_kernel_density[False-1e-06-1e-05-1-tophat-KDTree]#test_kernel_density[False-1e-06-1e-05-1-tophat-BallTree]#test_kernel_density[False-1e-06-1e-05-1-epanechnikov-KDTree]#test_kernel_density[False-1e-06-1e-05-1-epanechnikov-BallTree]#test_kernel_density[False-1e-06-1e-05-1-exponential-KDTree]#test_kernel_density[False-1e-06-1e-05-1-exponential-BallTree]#test_kernel_density[False-1e-06-1e-05-1-linear-KDTree]#test_kernel_density[False-1e-06-1e-05-1-linear-BallTree]#test_kernel_density[False-1e-06-1e-05-1-cosine-KDTree]#test_kernel_density[False-1e-06-1e-05-1-cosine-BallTree]#test_kernel_density[False-0.01-0-0.01-gaussian-KDTree]#test_kernel_density[False-0.01-0-0.01-gaussian-BallTree]#test_kernel_density[False-0.01-0-0.01-tophat-KDTree]#test_kernel_density[False-0.01-0-0.01-tophat-BallTree]#test_kernel_density[False-0.01-0-0.01-epanechnikov-KDTree]#test_kernel_density[False-0.01-0-0.01-epanechnikov-BallTree]#test_kernel_density[False-0.01-0-0.01-exponential-KDTree]#test_kernel_density[False-0.01-0-0.01-exponential-BallTree]#test_kernel_density[False-0.01-0-0.01-linear-KDTree]#test_kernel_density[False-0.01-0-0.01-linear-BallTree]#test_kernel_density[False-0.01-0-0.01-cosine-KDTree]#test_kernel_density[False-0.01-0-0.01-cosine-BallTree]#test_kernel_density[False-0.01-0-0.1-gaussian-KDTree]#test_kernel_density[False-0.01-0-0.1-gaussian-BallTree]#test_kernel_density[False-0.01-0-0.1-tophat-KDTree]#test_kernel_density[False-0.01-0-0.1-tophat-BallTree]#test_kernel_density[False-0.01-0-0.1-epanechnikov-KDTree]#test_kernel_density[False-0.01-0-0.1-epanechnikov-BallTree]#test_kernel_density[False-0.01-0-0.1-exponential-KDTree]#test_kernel_density[False-0.01-0-0.1-exponential-BallTree]#test_kernel_density[False-0.01-0-0.1-linear-KDTree]#test_kernel_density[False-0.01-0-0.1-linear-BallTree]#test_kernel_density[False-0.01-0-0.1-cosine-KDTree]#test_kernel_density[False-0.01-0-0.1-cosine-BallTree]#test_kernel_density[False-0.01-0-1-gaussian-KDTree]#test_kernel_density[False-0.01-0-1-gaussian-BallTree]#test_kernel_density[False-0.01-0-1-tophat-KDTree]#test_kernel_density[False-0.01-0-1-tophat-BallTree]#test_kernel_density[False-0.01-0-1-epanechnikov-KDTree]#test_kernel_density[False-0.01-0-1-epanechnikov-BallTree]#test_kernel_density[False-0.01-0-1-exponential-KDTree]#test_kernel_density[False-0.01-0-1-exponential-BallTree]#test_kernel_density[False-0.01-0-1-linear-KDTree]#test_kernel_density[False-0.01-0-1-linear-BallTree]#test_kernel_density[False-0.01-0-1-cosine-KDTree]#test_kernel_density[False-0.01-0-1-cosine-BallTree]#test_kernel_density[False-0.01-1e-05-0.01-gaussian-KDTree]#test_kernel_density[False-0.01-1e-05-0.01-gaussian-BallTree]#test_kernel_density[False-0.01-1e-05-0.01-tophat-KDTree]#test_kernel_density[False-0.01-1e-05-0.01-tophat-BallTree]#test_kernel_density[False-0.01-1e-05-0.01-epanechnikov-KDTree]#test_kernel_density[False-0.01-1e-05-0.01-epanechnikov-BallTree]#test_kernel_density[False-0.01-1e-05-0.01-exponential-KDTree]#test_kernel_density[False-0.01-1e-05-0.01-exponential-BallTree]#test_kernel_density[False-0.01-1e-05-0.01-linear-KDTree]#test_kernel_density[False-0.01-1e-05-0.01-linear-BallTree]#test_kernel_density[False-0.01-1e-05-0.01-cosine-KDTree]#test_kernel_density[False-0.01-1e-05-0.01-cosine-BallTree]#test_kernel_density[False-0.01-1e-05-0.1-gaussian-KDTree]#test_kernel_density[False-0.01-1e-05-0.1-gaussian-BallTree]#test_kernel_density[False-0.01-1e-05-0.1-tophat-KDTree]#test_kernel_density[False-0.01-1e-05-0.1-tophat-BallTree]#test_kernel_density[False-0.01-1e-05-0.1-epanechnikov-KDTree]#test_kernel_density[False-0.01-1e-05-0.1-epanechnikov-BallTree]#test_kernel_density[False-0.01-1e-05-0.1-exponential-KDTree]#test_kernel_density[False-0.01-1e-05-0.1-exponential-BallTree]#test_kernel_density[False-0.01-1e-05-0.1-linear-KDTree]#test_kernel_density[False-0.01-1e-05-0.1-linear-BallTree]#test_kernel_density[False-0.01-1e-05-0.1-cosine-KDTree]#test_kernel_density[False-0.01-1e-05-0.1-cosine-BallTree]#test_kernel_density[False-0.01-1e-05-1-gaussian-KDTree]#test_kernel_density[False-0.01-1e-05-1-gaussian-BallTree]#test_kernel_density[False-0.01-1e-05-1-tophat-KDTree]#test_kernel_density[False-0.01-1e-05-1-tophat-BallTree]#test_kernel_density[False-0.01-1e-05-1-epanechnikov-KDTree]#test_kernel_density[False-0.01-1e-05-1-epanechnikov-BallTree]#test_kernel_density[False-0.01-1e-05-1-exponential-KDTree]#test_kernel_density[False-0.01-1e-05-1-exponential-BallTree]#test_kernel_density[False-0.01-1e-05-1-linear-KDTree]#test_kernel_density[False-0.01-1e-05-1-linear-BallTree]#test_kernel_density[False-0.01-1e-05-1-cosine-KDTree]#test_kernel_density[False-0.01-1e-05-1-cosine-BallTree]#test_neighbor_tree_query_radius[KDTree]#test_neighbor_tree_query_radius[BallTree]#test_neighbor_tree_query_radius_distance[KDTree]#test_neighbor_tree_query_radius_distance[BallTree]#test_neighbor_tree_two_point[True-KDTree]#test_neighbor_tree_two_point[True-BallTree]#test_neighbor_tree_two_point[False-KDTree]#test_neighbor_tree_two_point[False-BallTree]#test_gaussian_kde[KDTree]#test_gaussian_kde[BallTree]#test_nn_tree_query[True-True-1-KDTree-euclidean]#test_nn_tree_query[True-True-1-KDTree-manhattan]#test_nn_tree_query[True-True-1-KDTree-chebyshev]#test_nn_tree_query[True-True-1-KDTree-minkowski]#test_nn_tree_query[True-True-1-BallTree-euclidean]#test_nn_tree_query[True-True-1-BallTree-manhattan]#test_nn_tree_query[True-True-1-BallTree-minkowski]#test_nn_tree_query[True-True-1-BallTree-chebyshev]#test_nn_tree_query[True-True-1-BallTree-seuclidean]#test_nn_tree_query[True-True-1-BallTree-wminkowski]#test_nn_tree_query[True-True-1-BallTree-mahalanobis]#test_nn_tree_query[True-True-3-KDTree-euclidean]#test_nn_tree_query[True-True-3-KDTree-manhattan]#test_nn_tree_query[True-True-3-KDTree-chebyshev]#test_nn_tree_query[True-True-3-KDTree-minkowski]#test_nn_tree_query[True-True-3-BallTree-euclidean]#test_nn_tree_query[True-True-3-BallTree-manhattan]#test_nn_tree_query[True-True-3-BallTree-minkowski]#test_nn_tree_query[True-True-3-BallTree-chebyshev]#test_nn_tree_query[True-True-3-BallTree-seuclidean]#test_nn_tree_query[True-True-3-BallTree-wminkowski]#test_nn_tree_query[True-True-3-BallTree-mahalanobis]#test_nn_tree_query[True-True-5-KDTree-euclidean]#test_nn_tree_query[True-True-5-KDTree-manhattan]#test_nn_tree_query[True-True-5-KDTree-chebyshev]#test_nn_tree_query[True-True-5-KDTree-minkowski]#test_nn_tree_query[True-True-5-BallTree-euclidean]#test_nn_tree_query[True-True-5-BallTree-manhattan]#test_nn_tree_query[True-True-5-BallTree-minkowski]#test_nn_tree_query[True-True-5-BallTree-chebyshev]#test_nn_tree_query[True-True-5-BallTree-seuclidean]#test_nn_tree_query[True-True-5-BallTree-wminkowski]#test_nn_tree_query[True-True-5-BallTree-mahalanobis]#test_nn_tree_query[True-False-1-KDTree-euclidean]#test_nn_tree_query[True-False-1-KDTree-manhattan]#test_nn_tree_query[True-False-1-KDTree-chebyshev]#test_nn_tree_query[True-False-1-KDTree-minkowski]#test_nn_tree_query[True-False-1-BallTree-euclidean]#test_nn_tree_query[True-False-1-BallTree-manhattan]#test_nn_tree_query[True-False-1-BallTree-minkowski]#test_nn_tree_query[True-False-1-BallTree-chebyshev]#test_nn_tree_query[True-False-1-BallTree-seuclidean]#test_nn_tree_query[True-False-1-BallTree-wminkowski]#test_nn_tree_query[True-False-1-BallTree-mahalanobis]#test_nn_tree_query[True-False-3-KDTree-euclidean]#test_nn_tree_query[True-False-3-KDTree-manhattan]#test_nn_tree_query[True-False-3-KDTree-chebyshev]#test_nn_tree_query[True-False-3-KDTree-minkowski]#test_nn_tree_query[True-False-3-BallTree-euclidean]#test_nn_tree_query[True-False-3-BallTree-manhattan]#test_nn_tree_query[True-False-3-BallTree-minkowski]#test_nn_tree_query[True-False-3-BallTree-chebyshev]#test_nn_tree_query[True-False-3-BallTree-seuclidean]#test_nn_tree_query[True-False-3-BallTree-wminkowski]#test_nn_tree_query[True-False-3-BallTree-mahalanobis]#test_nn_tree_query[True-False-5-KDTree-euclidean]#test_nn_tree_query[True-False-5-KDTree-manhattan]#test_nn_tree_query[True-False-5-KDTree-chebyshev]#test_nn_tree_query[True-False-5-KDTree-minkowski]#test_nn_tree_query[True-False-5-BallTree-euclidean]#test_nn_tree_query[True-False-5-BallTree-manhattan]#test_nn_tree_query[True-False-5-BallTree-minkowski]#test_nn_tree_query[True-False-5-BallTree-chebyshev]#test_nn_tree_query[True-False-5-BallTree-seuclidean]#test_nn_tree_query[True-False-5-BallTree-wminkowski]#test_nn_tree_query[True-False-5-BallTree-mahalanobis]#test_nn_tree_query[False-True-1-KDTree-euclidean]#test_nn_tree_query[False-True-1-KDTree-manhattan]#test_nn_tree_query[False-True-1-KDTree-chebyshev]#test_nn_tree_query[False-True-1-KDTree-minkowski]#test_nn_tree_query[False-True-1-BallTree-euclidean]#test_nn_tree_query[False-True-1-BallTree-manhattan]#test_nn_tree_query[False-True-1-BallTree-minkowski]#test_nn_tree_query[False-True-1-BallTree-chebyshev]#test_nn_tree_query[False-True-1-BallTree-seuclidean]#test_nn_tree_query[False-True-1-BallTree-wminkowski],,
740142748,740142749,43353,c94072a80641f5cb34b5b153b1ca5456a18deac3,python,unknown,1,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_gridsearch#test_anisotropic_kernel#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#test_warm_start[True]#test_warm_start[False]#test_convergence_warning#test_huber_max_iter#test_predict_iris#test_sparsify#test_logistic_regression_path_convergence_fail#test_ovr_multinomial_iris#test_max_iter#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-lbfgs]#test_exactly_zero_info_score#test_not_symmetric_metric[precision_recall_curve]#test_binary_sample_weight_invariance[precision_recall_curve]#test_pairwise_parallel[float64-array-pairwise_distances-wminkowski-kwds1]#test_pairwise_parallel[float64-array-pairwise_distances-wminkowski-kwds2]#test_pairwise_parallel[int-array-pairwise_distances-wminkowski-kwds1]#test_pairwise_parallel[int-array-pairwise_distances-wminkowski-kwds2]#test_pairwise_parallel[int-csr_matrix-pairwise_distances-wminkowski-kwds1]#test_cross_val_score_failing_scorer[nan]#test_cross_val_score_failing_scorer[0]#test_cross_val_score_failing_scorer[raise]#test_cross_validate_failing_scorer[False-True-nan]#test_cross_validate_failing_scorer[False-True-0]#test_cross_validate_failing_scorer[False-True-raise]#test_cross_validate_failing_scorer[False-False-nan]#test_cross_validate_failing_scorer[False-False-0]#test_cross_validate_failing_scorer[False-False-raise]#test_cross_validate_failing_scorer[True-True-nan]#test_cross_validate_failing_scorer[True-True-0]#test_cross_validate_failing_scorer[True-True-raise]#test_cross_validate_failing_scorer[True-False-nan]#test_cross_validate_failing_scorer[True-False-0]#test_cross_validate_failing_scorer[True-False-raise]#test_cdist[wminkowski]#test_pdist[wminkowski]#test_neighbors_metrics#test_gradient#test_lbfgs_regression[X0-y0]#test_lbfgs_classification_maxfun[X0-y0]#test_lbfgs_classification_maxfun[X1-y1]#test_lbfgs_regression_maxfun[X0-y0]#test_estimators[GammaRegressor()-check_dtype_object(strict_mode=True)]#test_estimators[GammaRegressor()-check_regressors_train(strict_mode=True)]#test_estimators[GammaRegressor()-check_supervised_y_2d(strict_mode=True)]#test_estimators[GammaRegressor()-check_regressors_int(strict_mode=True)]#test_estimators[GammaRegressor()-check_fit2d_1feature(strict_mode=True)]#test_estimators[GammaRegressor()-check_dict_unchanged(strict_mode=True)]#test_estimators[GammaRegressor()-check_fit2d_predict1d(strict_mode=True)]#test_estimators[HuberRegressor()-check_dtype_object(strict_mode=True)]#test_estimators[HuberRegressor()-check_regressors_train(strict_mode=True)]#test_estimators[HuberRegressor()-check_supervised_y_2d(strict_mode=True)]#test_estimators[HuberRegressor()-check_regressors_int(strict_mode=True)]#test_estimators[HuberRegressor()-check_fit2d_1sample(strict_mode=True)]#test_estimators[HuberRegressor()-check_fit2d_1feature(strict_mode=True)]#test_estimators[HuberRegressor()-check_dict_unchanged(strict_mode=True)]#test_estimators[HuberRegressor()-check_fit_idempotent(strict_mode=True)]#test_estimators[HuberRegressor()-check_n_features_in(strict_mode=True)]#test_estimators[HuberRegressor()-check_fit2d_predict1d(strict_mode=True)]#test_estimators[LogisticRegression()-check_dtype_object(strict_mode=True)]#test_estimators[PoissonRegressor()-check_dtype_object(strict_mode=True)]#test_estimators[PoissonRegressor()-check_regressors_int(strict_mode=True)]#test_estimators[PoissonRegressor()-check_dict_unchanged(strict_mode=True)]#test_estimators[PoissonRegressor()-check_fit_idempotent(strict_mode=True)]#test_estimators[PoissonRegressor()-check_n_features_in(strict_mode=True)]#test_estimators[TweedieRegressor()-check_dtype_object(strict_mode=True)]#test_estimators[TweedieRegressor()-check_regressors_int(strict_mode=True)]#test_estimators[TweedieRegressor()-check_dict_unchanged(strict_mode=True)]#test_estimators[TweedieRegressor()-check_fit_idempotent(strict_mode=True)]#test_estimators[TweedieRegressor()-check_n_features_in(strict_mode=True)]#test_pipeline_memory#test_check_estimator#test_check_estimator_clones,,
740163371,740163372,43354,7735b8ea3c4588b9cd4288b983b3312860124502,unknown,unknown,,plain,"",false,,,,,,,,,"",,
740166255,740166256,43355,20e83d66633daca00136f74e47fc3de9b4a22f6e,unknown,unknown,,plain,"",false,,,,,,,,,"",,
740166925,740166926,43356,d9d538d012454885cb840712aace6ae925d0bc8d,python,unknown,1,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_exactly_zero_info_score#test_not_symmetric_metric[precision_recall_curve]#test_binary_sample_weight_invariance[precision_recall_curve]#test_pairwise_parallel[float64-array-pairwise_distances-wminkowski-kwds1]#test_pairwise_parallel[float64-array-pairwise_distances-wminkowski-kwds2]#test_pairwise_parallel[int-array-pairwise_distances-wminkowski-kwds1]#test_pairwise_parallel[int-array-pairwise_distances-wminkowski-kwds2]#test_pairwise_parallel[int-csr_matrix-pairwise_distances-wminkowski-kwds1]#test_cdist[wminkowski]#test_pdist[wminkowski]#test_neighbors_metrics#test_pipeline_memory#test_check_estimator#test_check_estimator_clones,,
740255420,740255421,43357,1d575f6e341e1f7e67d20a9ddda1c39c28f93bce,python,unknown,3,python,"",false,,,,,,,,,"",,
740255420,740255422,43357,1d575f6e341e1f7e67d20a9ddda1c39c28f93bce,python,unknown,3,python,"",false,,,,,,,,,"",,
740255420,740255423,43357,1d575f6e341e1f7e67d20a9ddda1c39c28f93bce,python,unknown,12,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
740457062,740457063,43358,fb67c7bb00f4d68ecbc65e8c46af5372442274cd,python,unknown,3,python,"",false,,,,,,,,,"",,
740457062,740457064,43358,fb67c7bb00f4d68ecbc65e8c46af5372442274cd,python,unknown,3,python,"",false,,,,,,,,,"",,
740457062,740457065,43358,fb67c7bb00f4d68ecbc65e8c46af5372442274cd,python,unknown,7,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
740646461,740646462,43359,7da9153e066626e5a1250ee1a0817050900b1486,python,unknown,3,python,"",false,,,,,,,,,"",,
740646461,740646463,43359,7da9153e066626e5a1250ee1a0817050900b1486,python,unknown,3,python,"",false,,,,,,,,,"",,
740646461,740646464,43359,7da9153e066626e5a1250ee1a0817050900b1486,python,unknown,8,python,"",false,,,,,,,,,[doctest] supervised_learning.rst,,
740812013,740812014,43360,ce9107d47d43f86888585bd1400af05d66d5046c,python,unknown,3,python,"",false,,,,,,,,,[doctest] sgd.rst,,
740815516,740815517,43361,0d4f07077047d8f574ed906474ba300df24d5172,python,unknown,0,python,"",false,,,,,,,,,"",,
740838278,740838279,43362,4de641646774d2276a4c35aea128fa6e6e44accc,python,unknown,1,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#test_agglomerative_clustering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_bootstrap_samples#test_base_estimator#test_base#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_gridsearch#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_anisotropic_kernel#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_convergence_warning#test_fused_types_make_dataset#test_huber_max_iter#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_sparsify#test_consistency_path#test_logistic_regression_path_convergence_fail#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_warm_start[multinomial-False-False-lbfgs]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_perceptron_l1_ratio#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient,,
740843591,740843592,43363,fc38faa3c8f381e65e98363eb063a6cdd333250c,python,unknown,4,python,"",false,,,,,,,,,[doctest] sgd.rst#[doctest] supervised_learning.rst,,
740847842,740847843,43364,509d83679ca643e6dc9795af748735f529de4e53,python,ok,3,python,"",false,,,,,,,,,"",,
740856140,740856141,43365,4876688d304813f77de459e67ac8e449df134ccf,python,ok,8,python,"",false,,,,,,,,,"",,
740871627,740871629,43366,c9af6a05daed9ea8b614b3765e383fca59918aef,python,unknown,2,python,"",false,,,,,,,,,test_agglomerative_clustering#test_bootstrap_samples#test_exactly_zero_info_score#test_not_symmetric_metric[precision_recall_curve]#test_binary_sample_weight_invariance[precision_recall_curve]#test_pairwise_parallel[float64-array-pairwise_distances-wminkowski-kwds1]#test_pairwise_parallel[float64-array-pairwise_distances-wminkowski-kwds2]#test_pairwise_parallel[int-array-pairwise_distances-wminkowski-kwds1]#test_pairwise_parallel[int-array-pairwise_distances-wminkowski-kwds2]#test_pairwise_parallel[int-csr_matrix-pairwise_distances-wminkowski-kwds1]#test_cdist[wminkowski]#test_pdist[wminkowski]#test_neighbors_metrics#test_pipeline_memory#test_check_estimator#test_check_estimator_clones,,
740888601,740888602,43367,7b3e2c0707778af6b5af99edc66509ebbc9a549c,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#test_agglomerative_clustering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_bootstrap_samples#test_base_estimator#test_base#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_gridsearch#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_anisotropic_kernel#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_convergence_warning#test_fused_types_make_dataset#test_huber_max_iter#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_sparsify#test_consistency_path#test_logistic_regression_path_convergence_fail#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_warm_start[multinomial-False-False-lbfgs]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_perceptron_l1_ratio#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient,,
740919356,740919358,43368,d619d96d55c7d6a53c868527e8c0a36e770b5cae,python,unknown,4,python,"",false,,,,,,,,,"",,
740919356,740919363,43368,d619d96d55c7d6a53c868527e8c0a36e770b5cae,python,unknown,3,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#test_agglomerative_clustering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_bootstrap_samples#test_base_estimator#test_base#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_gridsearch#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_anisotropic_kernel#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_convergence_warning#test_fused_types_make_dataset#test_huber_max_iter#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_sparsify#test_consistency_path#test_logistic_regression_path_convergence_fail#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_warm_start[multinomial-False-False-lbfgs]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_perceptron_l1_ratio#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient,,
740919356,740919364,43368,d619d96d55c7d6a53c868527e8c0a36e770b5cae,python,ok,7,python,"",false,,,,,,,,,"",,
741195630,741195633,43369,61beb3b79947a6976b8c1df4f606b8bee7983dd6,python,unknown,5,python,"",false,,,,,,,,,"",,
741195630,741195634,43369,61beb3b79947a6976b8c1df4f606b8bee7983dd6,python,unknown,5,python,"",false,,,,,,,,,[doctest] sklearn.kernel_approximation.AdditiveChi2Sampler#[doctest] sklearn.kernel_approximation.PolynomialCountSketch#[doctest] sklearn.kernel_approximation.RBFSampler#[doctest] sklearn.kernel_approximation.SkewedChi2Sampler#test_agglomerative_clustering#test_gridsearch_pipeline#test_gridsearch_pipeline_precomputed#test_nested_circles#test_classification#test_bootstrap_samples#test_base_estimator#test_base#test_stacking_with_sample_weight[StackingClassifier]#test_stacking_cv_influence[StackingClassifier]#test_gridsearch#test_invalid_input#test_partial_fit#test_prefit#test_threshold_without_refitting#test_anisotropic_kernel#[doctest] sklearn.linear_model._logistic.LogisticRegression#[doctest] sklearn.linear_model._logistic.LogisticRegressionCV#[doctest] sklearn.linear_model._perceptron.Perceptron#[doctest] sklearn.linear_model._sag.sag_solver#[doctest] sklearn.linear_model._stochastic_gradient.SGDClassifier#[doctest] sklearn.linear_model._stochastic_gradient.SGDRegressor#test_warm_start[True]#test_warm_start[False]#test_normal_ridge_comparison[None-True-10-100]#test_normal_ridge_comparison[None-False-10-100]#test_normal_ridge_comparison[True-True-10-100]#test_normal_ridge_comparison[True-False-10-100]#test_convergence_warning#test_fused_types_make_dataset#test_huber_max_iter#test_huber_and_sgd_same_results#test_predict_iris#test_multinomial_binary[sag]#test_multinomial_binary[saga]#test_multinomial_binary_probabilities#test_sparsify#test_consistency_path#test_logistic_regression_path_convergence_fail#test_ovr_multinomial_iris#test_logistic_regression_solvers#test_logistic_regression_solvers_multiclass#test_logistic_regressioncv_class_weights#test_logistic_regression_sample_weights#test_logistic_regression_multinomial#test_logreg_l1#test_logreg_l1_sparse_data#test_logistic_regression_cv_refit[l1-42]#test_logistic_regression_cv_refit[l2-42]#test_max_iter#test_n_iter[sag]#test_n_iter[saga]#test_n_iter[lbfgs]#test_warm_start[ovr-True-True-sag]#test_warm_start[ovr-True-True-saga]#test_warm_start[ovr-True-True-lbfgs]#test_warm_start[ovr-True-False-sag]#test_warm_start[ovr-True-False-saga]#test_warm_start[ovr-True-False-lbfgs]#test_warm_start[ovr-False-True-sag]#test_warm_start[ovr-False-True-saga]#test_warm_start[ovr-False-True-lbfgs]#test_warm_start[ovr-False-False-sag]#test_warm_start[ovr-False-False-saga]#test_warm_start[ovr-False-False-lbfgs]#test_warm_start[multinomial-True-True-sag]#test_warm_start[multinomial-True-True-saga]#test_warm_start[multinomial-True-True-lbfgs]#test_warm_start[multinomial-True-False-sag]#test_warm_start[multinomial-True-False-saga]#test_warm_start[multinomial-True-False-lbfgs]#test_warm_start[multinomial-False-True-sag]#test_warm_start[multinomial-False-True-saga]#test_warm_start[multinomial-False-True-lbfgs]#test_warm_start[multinomial-False-False-sag]#test_warm_start[multinomial-False-False-saga]#test_warm_start[multinomial-False-False-lbfgs]#test_saga_vs_liblinear#test_dtype_match[False-saga-ovr]#test_dtype_match[False-saga-multinomial]#test_dtype_match[True-saga-ovr]#test_dtype_match[True-saga-multinomial]#test_warm_start_converge_LR#test_elastic_net_coeffs#test_elastic_net_l1_l2_equivalence[l1-1-0.001]#test_elastic_net_l1_l2_equivalence[l1-1-0.1]#test_elastic_net_l1_l2_equivalence[l1-1-1]#test_elastic_net_l1_l2_equivalence[l1-1-10]#test_elastic_net_l1_l2_equivalence[l1-1-100]#test_elastic_net_l1_l2_equivalence[l1-1-1000]#test_elastic_net_l1_l2_equivalence[l1-1-1000000.0]#test_elastic_net_l1_l2_equivalence[l2-0-0.001]#test_elastic_net_l1_l2_equivalence[l2-0-0.1]#test_elastic_net_l1_l2_equivalence[l2-0-1]#test_elastic_net_l1_l2_equivalence[l2-0-10]#test_elastic_net_l1_l2_equivalence[l2-0-100]#test_elastic_net_l1_l2_equivalence[l2-0-1000]#test_elastic_net_l1_l2_equivalence[l2-0-1000000.0]#test_elastic_net_vs_l1_l2[0.001]#test_elastic_net_vs_l1_l2[1]#test_elastic_net_vs_l1_l2[100]#test_elastic_net_vs_l1_l2[1000000.0]#test_LogisticRegression_elastic_net_objective[0.1-0.001]#test_LogisticRegression_elastic_net_objective[0.1-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.1-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.1-100.0]#test_LogisticRegression_elastic_net_objective[0.5-0.001]#test_LogisticRegression_elastic_net_objective[0.5-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.5-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.5-100.0]#test_LogisticRegression_elastic_net_objective[0.9-0.001]#test_LogisticRegression_elastic_net_objective[0.9-0.046415888336127795]#test_LogisticRegression_elastic_net_objective[0.9-2.1544346900318843]#test_LogisticRegression_elastic_net_objective[0.9-100.0]#test_LogisticRegressionCV_GridSearchCV_elastic_net[ovr]#test_LogisticRegressionCV_GridSearchCV_elastic_net[multinomial]#test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr#test_LogisticRegressionCV_no_refit[ovr-l2]#test_LogisticRegressionCV_no_refit[ovr-elasticnet]#test_LogisticRegressionCV_no_refit[multinomial-l2]#test_LogisticRegressionCV_no_refit[multinomial-elasticnet]#test_LogisticRegressionCV_no_refit[auto-l2]#test_LogisticRegressionCV_no_refit[auto-elasticnet]#test_LogisticRegressionCV_elasticnet_attribute_shapes#test_l1_ratio_param[-1]#test_l1_ratio_param[2]#test_l1_ratio_param[something_wrong]#test_l1_ratios_param[l1_ratios0]#test_l1_ratios_param[l1_ratios1]#test_l1_ratios_param[something_wrong]#test_elastic_net_versus_sgd[0.1-0.001]#test_elastic_net_versus_sgd[0.1-0.046415888336127795]#test_elastic_net_versus_sgd[0.1-2.1544346900318843]#test_elastic_net_versus_sgd[0.1-100.0]#test_elastic_net_versus_sgd[0.5-0.001]#test_elastic_net_versus_sgd[0.5-0.046415888336127795]#test_elastic_net_versus_sgd[0.5-2.1544346900318843]#test_elastic_net_versus_sgd[0.5-100.0]#test_elastic_net_versus_sgd[0.9-0.001]#test_elastic_net_versus_sgd[0.9-0.046415888336127795]#test_elastic_net_versus_sgd[0.9-2.1544346900318843]#test_elastic_net_versus_sgd[0.9-100.0]#test_logistic_regression_path_coefs_multinomial#test_logistic_regression_multi_class_auto[sag-LogisticRegression]#test_logistic_regression_multi_class_auto[sag-LogisticRegressionCV]#test_logistic_regression_multi_class_auto[saga-LogisticRegression]#test_logistic_regression_multi_class_auto[saga-LogisticRegressionCV]#test_penalty_none[sag]#test_penalty_none[saga]#test_scores_attribute_layout_elasticnet#test_classifier_accuracy#test_classifier_partial_fit#test_classifier_refit#test_classifier_correctness[hinge]#test_classifier_correctness[squared_hinge]#test_class_weights#test_equal_class_weight#test_regressor_mse#test_regressor_partial_fit#test_regressor_correctness[epsilon_insensitive]#test_regressor_correctness[squared_epsilon_insensitive]#test_passive_aggressive_deprecated_attr[PassiveAggressiveClassifier]#test_passive_aggressive_deprecated_attr[PassiveAggressiveRegressor]#test_perceptron_accuracy#test_perceptron_correctness#test_perceptron_l1_ratio#test_ridge[sag]#test_ridge_individual_penalties#test_solver_consistency[seed0-20-float32-0.1-sag-False]#test_solver_consistency[seed0-20-float32-0.1-saga-False]#test_solver_consistency[seed0-40-float32-1.0-sag-False]#test_solver_consistency[seed0-40-float32-1.0-saga-False]#test_solver_consistency[seed0-20-float64-0.2-sag-False]#test_solver_consistency[seed0-20-float64-0.2-saga-False]#test_solver_consistency[seed1-20-float32-0.1-sag-False]#test_solver_consistency[seed1-20-float32-0.1-saga-False]#test_solver_consistency[seed1-40-float32-1.0-sag-False]#test_solver_consistency[seed1-40-float32-1.0-saga-False]#test_solver_consistency[seed1-20-float64-0.2-sag-False]#test_solver_consistency[seed1-20-float64-0.2-saga-False]#test_solver_consistency[seed2-20-float32-0.1-sag-False]#test_solver_consistency[seed2-20-float32-0.1-saga-False]#test_solver_consistency[seed2-40-float32-1.0-sag-False]#test_solver_consistency[seed2-40-float32-1.0-saga-False]#test_solver_consistency[seed2-20-float64-0.2-sag-False]#test_solver_consistency[seed2-20-float64-0.2-saga-False]#test_n_iter#test_ridge_fit_intercept_sparse_sag#test_ridge_regression_check_arguments_validity[auto-array-None-True]#test_ridge_regression_check_arguments_validity[sag-array-None-False]#test_ridge_regression_check_arguments_validity[sag-array-None-True]#test_ridge_regression_check_arguments_validity[saga-array-None-False]#test_dtype_match[sag]#test_dtype_match[saga]#test_ridge_regression_dtype_stability[0-sag]#test_ridge_regression_dtype_stability[0-saga]#test_ridge_sag_with_X_fortran#test_classifier_matching#test_regressor_matching#test_sag_pobj_matches_logistic_regression#test_sag_pobj_matches_ridge_regression#test_sag_regressor_computed_correctly#test_sag_regressor#test_sag_classifier_computed_correctly#test_sag_multiclass_computed_correctly#test_classifier_results#test_binary_classifier_class_weight#test_multiclass_classifier_class_weight#test_step_size_alpha_error#test_multinomial_loss#test_sag_classifier_raises_error[sag]#test_sag_classifier_raises_error[saga]#test_warm_start[constant-SGDClassifier]#test_warm_start[constant-SGDRegressor]#test_warm_start[optimal-SGDClassifier]#test_warm_start[optimal-SGDRegressor]#test_warm_start[invscaling-SGDClassifier]#test_warm_start[invscaling-SGDRegressor]#test_warm_start[adaptive-SGDClassifier]#test_warm_start[adaptive-SGDRegressor]#test_input_format[SGDClassifier]#test_input_format[SGDRegressor]#test_clone[SGDClassifier]#test_clone[SGDRegressor]#test_plain_has_no_average_attr[SGDClassifier]#test_plain_has_no_average_attr[SGDRegressor]#test_sgd_deprecated_attr[SGDClassifier]#test_sgd_deprecated_attr[SGDRegressor]#test_late_onset_averaging_not_reached[SGDClassifier]#test_late_onset_averaging_not_reached[SGDRegressor]#test_late_onset_averaging_reached[SGDClassifier]#test_late_onset_averaging_reached[SGDRegressor]#test_early_stopping[SGDClassifier]#test_early_stopping[SGDRegressor]#test_adaptive_longer_than_constant[SGDClassifier]#test_adaptive_longer_than_constant[SGDRegressor]#test_validation_set_not_used_for_training[SGDClassifier]#test_validation_set_not_used_for_training[SGDRegressor]#test_n_iter_no_change[SGDClassifier]#test_n_iter_no_change[SGDRegressor]#test_not_enough_sample_for_early_stopping[SGDClassifier]#test_not_enough_sample_for_early_stopping[SGDRegressor]#test_sgd_clf[SGDClassifier]#test_set_intercept_binary[SGDClassifier]#test_average_binary_computed_correctly[SGDClassifier]#test_set_intercept_to_intercept[SGDClassifier]#test_sgd_multiclass[SGDClassifier]#test_sgd_multiclass_average[SGDClassifier]#test_sgd_multiclass_with_init_coef[SGDClassifier]#test_sgd_multiclass_njobs[SGDClassifier]#test_set_coef_multiclass[SGDClassifier]#test_sgd_proba[SGDClassifier]#test_sgd_proba[SparseSGDClassifier]#test_sgd_l1[SGDClassifier]#test_class_weights[SGDClassifier]#test_equal_class_weight[SGDClassifier]#test_weights_multiplied[SGDClassifier]#test_balanced_weight[SGDClassifier]#test_sample_weights[SGDClassifier]#test_partial_fit_binary[SGDClassifier]#test_partial_fit_multiclass[SGDClassifier]#test_partial_fit_multiclass_average[SGDClassifier]#test_fit_then_partial_fit[SGDClassifier]#test_partial_fit_equal_fit_classif[constant-SGDClassifier]#test_partial_fit_equal_fit_classif[optimal-SGDClassifier]#test_partial_fit_equal_fit_classif[invscaling-SGDClassifier]#test_partial_fit_equal_fit_classif[adaptive-SGDClassifier]#test_regression_losses[SGDClassifier]#test_warm_start_multiclass[SGDClassifier]#test_multiple_fit[SGDClassifier]#test_sgd_reg[SGDRegressor]#test_sgd_averaged_computed_correctly[SGDRegressor]#test_sgd_averaged_partial_fit[SGDRegressor]#test_average_sparse[SGDRegressor]#test_sgd_least_squares_fit[SGDRegressor]#test_sgd_epsilon_insensitive[SGDRegressor]#test_sgd_huber_fit[SGDRegressor]#test_elasticnet_convergence[SGDRegressor]#test_partial_fit[SGDRegressor]#test_partial_fit_equal_fit[constant-SGDRegressor]#test_partial_fit_equal_fit[optimal-SGDRegressor]#test_partial_fit_equal_fit[invscaling-SGDRegressor]#test_partial_fit_equal_fit[adaptive-SGDRegressor]#test_l1_ratio#test_underflow_or_overlow#test_numerical_stability_large_gradient,,
741195630,741195635,43369,61beb3b79947a6976b8c1df4f606b8bee7983dd6,python,ok,7,python,"",false,,,,,,,,,"",,
